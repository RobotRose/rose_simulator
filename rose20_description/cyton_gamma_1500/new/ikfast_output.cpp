/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2014-02-17 16:19:43.969528
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67;
x0=IKsin(j[2]);
x1=IKcos(j[2]);
x2=IKsin(j[4]);
x3=IKcos(j[3]);
x4=IKcos(j[4]);
x5=IKsin(j[6]);
x6=IKcos(j[5]);
x7=IKsin(j[3]);
x8=IKsin(j[5]);
x9=IKsin(j[1]);
x10=IKcos(j[1]);
x11=IKcos(j[6]);
x12=IKsin(j[0]);
x13=IKcos(j[0]);
x14=((IkReal(1.00000000000000))*(x5));
x15=((IkReal(1.00000000000000))*(x11));
x16=((IkReal(1.00000000000000))*(x8));
x17=((IkReal(1.00000000000000))*(x2));
x18=((IkReal(0.0975200000000000))*(x10));
x19=((IkReal(0.0716400000000000))*(x2));
x20=((IkReal(1.00000000000000))*(x4));
x21=((IkReal(0.0310000000000000))*(x4));
x22=((IkReal(0.0975200000000000))*(x9));
x23=((IkReal(1.00000000000000))*(x6));
x24=((IkReal(1.00000000000000))*(x7));
x25=((IkReal(0.0716400000000000))*(x9));
x26=((IkReal(0.0310000000000000))*(x2));
x27=((IkReal(0.0310000000000000))*(x7));
x28=((x0)*(x3));
x29=((x0)*(x10));
x30=((IkReal(-1.00000000000000))*(x4));
x31=((x0)*(x7));
x32=((x1)*(x3));
x33=((x0)*(x9));
x34=((x1)*(x10));
x35=((x1)*(x9));
x36=((x3)*(x9));
x37=((x10)*(x3));
x38=((x10)*(x7));
x39=((x17)*(x28));
x40=((x24)*(x35));
x41=((x19)*(x33));
x42=((x17)*(x29));
x43=((((x32)*(x9)))+(x38));
x44=((((x10)*(x32)))+(((IkReal(-1.00000000000000))*(x24)*(x9))));
x45=((((IkReal(-1.00000000000000))*(x37)))+(x40));
x46=((((x27)*(x35)))+(((IkReal(-0.0310000000000000))*(x37))));
x47=((((x1)*(x17)))+(((x20)*(x28))));
x48=((((IkReal(-0.0716400000000000))*(x38)))+(((IkReal(-1.00000000000000))*(x25)*(x32))));
x49=((((IkReal(-1.00000000000000))*(x36)))+(((IkReal(-1.00000000000000))*(x24)*(x34))));
x50=((x4)*(x44));
x51=((x2)*(x44));
x52=((x49)*(x6));
x53=((((x2)*(x43)))+(((x33)*(x4))));
x54=((((IkReal(-1.00000000000000))*(x20)*(x43)))+(((x17)*(x33))));
x55=((((x26)*(x33)))+(((IkReal(-1.00000000000000))*(x21)*(x43))));
x56=((((x31)*(x6)))+(((x47)*(x8))));
x57=((((IkReal(-1.00000000000000))*(x20)*(x33)))+(((IkReal(-1.00000000000000))*(x17)*(x43))));
x58=((((x47)*(x6)))+(((IkReal(-1.00000000000000))*(x16)*(x31))));
x59=((x54)*(x6));
x60=((x5)*(x57));
x61=((((x18)*(x7)))+(((IkReal(0.0135000000000000))*(x10)))+(((IkReal(0.125830000000000))*(x9)))+(((x22)*(x32)))+(((IkReal(0.115380000000000))*(x35))));
x62=((((x6)*(((((IkReal(-1.00000000000000))*(x40)))+(x37)))))+(((x54)*(x8))));
x63=((((x11)*(((((IkReal(-1.00000000000000))*(x39)))+(((x1)*(x4)))))))+(((x5)*(x56))));
x64=((((x11)*(x56)))+(((x5)*(((((IkReal(-1.00000000000000))*(x1)*(x20)))+(x39))))));
x65=((x5)*(x62));
x66=((x11)*(x62));
x67=((((x6)*(((((x21)*(x28)))+(((x1)*(x26)))))))+(((IkReal(0.0716400000000000))*(x28)*(x4)))+(((x1)*(x19)))+(((x0)*(((IkReal(0.115380000000000))+(((IkReal(-1.00000000000000))*(x27)*(x8)))))))+(((IkReal(0.0975200000000000))*(x28))));
eerot[0]=((((x13)*(x63)))+(((x12)*(((((IkReal(-1.00000000000000))*(x15)*(x53)))+(((IkReal(-1.00000000000000))*(x14)*(x62))))))));
eerot[1]=((((x13)*(x64)))+(((x12)*(((((IkReal(-1.00000000000000))*(x15)*(x62)))+(((IkReal(-1.00000000000000))*(x14)*(x57))))))));
eerot[2]=((((x12)*(((((IkReal(-1.00000000000000))*(x16)*(x45)))+(((IkReal(-1.00000000000000))*(x23)*(x54)))))))+(((x13)*(x58))));
eetrans[0]=((((x13)*(x67)))+(((x12)*(((((IkReal(-1.00000000000000))*(x41)))+(((IkReal(-1.00000000000000))*(x20)*(x48)))+(((IkReal(-1.00000000000000))*(x16)*(x46)))+(((IkReal(-1.00000000000000))*(x23)*(x55)))+(x61))))));
eerot[3]=((((x12)*(x63)))+(((x13)*(((((x11)*(x53)))+(x65))))));
eerot[4]=((((x12)*(x64)))+(((x13)*(((x60)+(x66))))));
eerot[5]=((((x13)*(((x59)+(((x45)*(x8)))))))+(((x12)*(x58))));
eetrans[1]=((IkReal(-0.0135000000000000))+(((x12)*(x67)))+(((x13)*(((((x46)*(x8)))+(x41)+(((x55)*(x6)))+(((x4)*(x48)))+(((IkReal(-1.00000000000000))*(x61))))))));
eerot[6]=((((IkReal(-1.00000000000000))*(x5)*(((((x23)*(x49)))+(((x16)*(((((IkReal(-1.00000000000000))*(x20)*(x44)))+(x42)))))))))+(((x11)*(((((x29)*(x30)))+(((IkReal(-1.00000000000000))*(x51))))))));
eerot[7]=((((x5)*(((((x29)*(x4)))+(x51)))))+(((x11)*(((((IkReal(-1.00000000000000))*(x8)*(((x42)+(((x30)*(x44)))))))+(((IkReal(-1.00000000000000))*(x52))))))));
eerot[8]=((((x6)*(((((IkReal(-1.00000000000000))*(x42)))+(x50)))))+(((x49)*(x8))));
IkReal x68=((IkReal(1.00000000000000))*(x29));
IkReal x69=((IkReal(1.00000000000000))*(x7));
eetrans[2]=((IkReal(0.190049000000000))+(((x4)*(((((IkReal(-1.00000000000000))*(x25)*(x69)))+(((IkReal(0.0716400000000000))*(x10)*(x32)))))))+(((x8)*(((((IkReal(-1.00000000000000))*(x27)*(x34)))+(((IkReal(-0.0310000000000000))*(x36)))))))+(((IkReal(0.125830000000000))*(x10)))+(((x18)*(x32)))+(((IkReal(-1.00000000000000))*(x19)*(x68)))+(((x6)*(((((x21)*(x44)))+(((IkReal(-1.00000000000000))*(x26)*(x68)))))))+(((IkReal(0.115380000000000))*(x34)))+(((IkReal(-0.0135000000000000))*(x9)))+(((IkReal(-1.00000000000000))*(x22)*(x69))));
}

IKFAST_API int GetNumFreeParameters() { return 1; }
IKFAST_API int* GetFreeParameters() { static int freeparams[] = {0}; return freeparams; }
IKFAST_API int GetNumJoints() { return 7; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j1,cj1,sj1,htj1,j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j6,cj6,sj6,htj6,j0,cj0,sj0,htj0,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6,_ij0[2], _nj0;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1;  _ij0[0] = -1; _ij0[1] = -1; _nj0 = 0; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
j0=pfree[0]; cj0=cos(pfree[0]); sj0=sin(pfree[0]);
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((IkReal(-1.00000000000000))*(r20));
new_r01=((IkReal(-1.00000000000000))*(r21));
new_r02=((IkReal(-1.00000000000000))*(r22));
new_px=((IkReal(0.190049000000000))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0310000000000000))*(r22))));
new_r10=((((IkReal(-1.00000000000000))*(r00)*(IKsin(j0))))+(((r10)*(IKcos(j0)))));
new_r11=((((IkReal(-1.00000000000000))*(r01)*(IKsin(j0))))+(((r11)*(IKcos(j0)))));
new_r12=((((IkReal(-1.00000000000000))*(r02)*(IKsin(j0))))+(((r12)*(IKcos(j0)))));
IkReal x70=IKcos(j0);
IkReal x71=IKsin(j0);
new_py=((((py)*(x70)))+(((IkReal(0.0135000000000000))*(x70)))+(((IkReal(0.0310000000000000))*(r02)*(x71)))+(((IkReal(-1.00000000000000))*(px)*(x71)))+(((IkReal(-0.0310000000000000))*(r12)*(x70))));
new_r20=((((r00)*(IKcos(j0))))+(((r10)*(IKsin(j0)))));
new_r21=((((r01)*(IKcos(j0))))+(((r11)*(IKsin(j0)))));
new_r22=((((r12)*(IKsin(j0))))+(((r02)*(IKcos(j0)))));
IkReal x72=IKsin(j0);
IkReal x73=IKcos(j0);
new_pz=((((py)*(x72)))+(((IkReal(0.0135000000000000))*(x72)))+(((IkReal(-0.0310000000000000))*(r02)*(x73)))+(((px)*(x73)))+(((IkReal(-0.0310000000000000))*(r12)*(x72))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
IkReal op[162], zeror[48];
int numroots;
IkReal x74=((IkReal(0.169160000000000))*(r21));
IkReal x75=((IkReal(0.107287610267822))*(npx));
IkReal x76=((IkReal(0.338320000000000))*(r22));
IkReal x77=((IkReal(1.00000000000000))*(rxp0_2));
IkReal x78=((IkReal(2.00000000000000))*(rxp1_2));
IkReal x79=((IkReal(0.338320000000000))*(r20));
IkReal x80=((IkReal(0.214575220535643))*(npy));
IkReal x81=((IkReal(0.338320000000000))*(rxp1_2));
IkReal x82=((IkReal(0.000712877700000000))*(r20));
IkReal x83=((IkReal(0.00142575540000000))*(r21));
IkReal x84=((IkReal(0.676640000000000))*(rxp0_2));
IkReal x85=((pp)*(r20));
IkReal x86=((IkReal(0.338320000000000))*(npz));
IkReal x87=((IkReal(0.0290365308000000))*(r20));
IkReal x88=((IkReal(1.00000000000000))*(pp));
IkReal x89=((IkReal(0.916951442422316))*(npx));
IkReal x90=((IkReal(0.169160000000000))*(r22));
IkReal x91=((pp)*(r22));
IkReal x92=((IkReal(0.338320000000000))*(pz));
IkReal x93=((IkReal(0.00311526000000000))*(r21));
IkReal x94=((IkReal(0.0313180001000000))*(r22));
IkReal x95=((IkReal(0.0626360002000000))*(r21));
IkReal x96=((IkReal(0.00623052000000000))*(r22));
IkReal x97=((IkReal(0.338320000000000))*(rxp0_2));
IkReal x98=((IkReal(0.00311526000000000))*(r22));
IkReal x99=((IkReal(0.0259122111000000))*(r21));
IkReal x100=((IkReal(0.0518244222000000))*(r22));
IkReal x101=((IkReal(0.00623052000000000))*(r21));
IkReal x102=((pp)*(r21));
IkReal x103=((IkReal(0.0518244222000000))*(r20));
IkReal x104=((IkReal(0.676640000000000))*(rxp1_2));
IkReal x105=((IkReal(4.00000000000000))*(rxp1_2));
IkReal x106=((IkReal(0.429150441071287))*(npy));
IkReal x107=((IkReal(2.00000000000000))*(rxp2_2));
IkReal x108=((IkReal(0.214575220535643))*(npz));
IkReal x109=((IkReal(0.286560000000000))*(pz));
IkReal x110=((IkReal(0.0499002450000000))*(r22));
IkReal x111=((IkReal(0.390080000000000))*(npx));
IkReal x112=((IkReal(0.0580730616000000))*(r22));
IkReal x113=((IkReal(0.780160000000000))*(npy));
IkReal x114=((IkReal(1.83390288484463))*(npz));
IkReal x115=((IkReal(0.195040000000000))*(r20));
IkReal x116=((IkReal(0.0141615106000000))*(r20));
IkReal x117=((IkReal(0.286560000000000))*(rxp1_2));
IkReal x118=((IkReal(0.573120000000000))*(rxp0_2));
IkReal x119=((IkReal(0.0283230212000000))*(r21));
IkReal x120=((IkReal(0.00623052000000000))*(r20));
IkReal x121=((IkReal(0.390080000000000))*(rxp2_2));
IkReal x122=((IkReal(0.0124610400000000))*(r21));
IkReal x123=((IkReal(0.0517600000000000))*(r22));
IkReal x124=((IkReal(0.0258800000000000))*(r21));
IkReal x125=((IkReal(0.0517600000000000))*(r20));
IkReal x126=((IkReal(0.0286582089000000))*(r20));
IkReal x127=((IkReal(0.0517600000000000))*(rxp1_2));
IkReal x128=((IkReal(0.0573164178000000))*(r21));
IkReal x129=((IkReal(0.103520000000000))*(rxp0_2));
IkReal x130=((IkReal(0.0517600000000000))*(npz));
IkReal x131=((IkReal(0.0580730616000000))*(r21));
IkReal x132=((IkReal(0.0258800000000000))*(r22));
IkReal x133=((IkReal(1.83390288484463))*(npy));
IkReal x134=((IkReal(0.00337266890000000))*(r22));
IkReal x135=((IkReal(0.0517600000000000))*(pz));
IkReal x136=((IkReal(0.00674533780000000))*(r21));
IkReal x137=((IkReal(0.0517600000000000))*(rxp0_2));
IkReal x138=((IkReal(0.00203312010000000))*(r21));
IkReal x139=((IkReal(0.00406624020000000))*(r22));
IkReal x140=((IkReal(0.00406624020000000))*(r20));
IkReal x141=((IkReal(0.103520000000000))*(rxp1_2));
IkReal x142=((npz)*(pz));
IkReal x143=((IkReal(8.00000000000000))*(pz));
IkReal x144=((npy)*(pz));
IkReal x145=((npx)*(pz));
IkReal x146=((IkReal(2.00000000000000))*(x145));
IkReal x147=((IkReal(-0.676640000000000))*(rxp2_2));
IkReal x148=((IkReal(1.00000000000000))*(x85));
IkReal x149=((IkReal(2.00000000000000))*(x102));
IkReal x150=((IkReal(4.00000000000000))*(x144));
IkReal x151=((IkReal(-0.0580730616000000))*(r21));
IkReal x152=((IkReal(-1.83390288484463))*(npy));
IkReal x153=((IkReal(2.00000000000000))*(x142));
IkReal x154=((r22)*(x88));
IkReal x155=((IkReal(2.00000000000000))*(x144));
IkReal x156=((IkReal(2.00000000000000))*(x91));
IkReal x157=((IkReal(4.00000000000000))*(x142));
IkReal x158=((IkReal(2.00000000000000))*(x85));
IkReal x159=((IkReal(4.00000000000000))*(x145));
IkReal x160=((r21)*(x88));
IkReal x161=((IkReal(4.00000000000000))*(x102));
IkReal x162=((IkReal(-0.390080000000000))*(r21));
IkReal x163=((npy)*(x143));
IkReal x164=((IkReal(-0.573120000000000))*(rxp2_2));
IkReal x165=((IkReal(-0.103520000000000))*(rxp2_2));
IkReal x166=((IkReal(0.0290365308000000))+(x85));
IkReal x167=((pz)+(x89));
IkReal x168=((npx)*(x143));
IkReal x169=((IkReal(4.00000000000000))*(x85));
IkReal x170=((IkReal(-0.00623052000000000))*(r20));
IkReal x171=((IkReal(-0.131380802670269))+(x115));
IkReal x172=((IkReal(0.000712877700000000))+(x86));
IkReal x173=((IkReal(0.0286582089000000))+(x130));
IkReal x174=((x75)+(x74));
IkReal x175=((IkReal(-0.0153721687991735))+(((IkReal(-1.00000000000000))*(x107)))+(x108));
IkReal x176=((IkReal(-0.0153721687991735))+(((IkReal(-1.00000000000000))*(x108)))+(x107));
IkReal x177=((x112)+(x111));
IkReal x178=((x120)+(x121));
IkReal x179=((x124)+(x75));
IkReal x180=((x88)+(x87));
IkReal x181=((x98)+(x97));
IkReal x182=((x93)+(x92));
IkReal x183=((x102)+(x99));
IkReal x184=((x130)+(x88));
IkReal x185=((x135)+(x93));
IkReal x186=((x88)+(x86));
IkReal x187=((((IkReal(0.0998004900000000))*(r21)))+(x163));
IkReal x188=((x158)+(x117));
IkReal x189=((x159)+(x116));
IkReal x190=((x154)+(x93));
IkReal x191=((x149)+(x96));
IkReal x192=((x150)+(x96));
IkReal x193=((x163)+(x119));
IkReal x194=((x150)+(x83));
IkReal x195=((x157)+(x110));
IkReal x196=((x158)+(x103));
IkReal x197=((x146)+(x82));
IkReal x198=((x153)+(x94));
IkReal x199=((x159)+(x140));
IkReal x200=((x150)+(x128));
IkReal x201=((x156)+(x100));
IkReal x202=((x153)+(x134));
IkReal x203=((x157)+(x139));
IkReal x204=((x155)+(x138));
IkReal x205=((x146)+(x126));
IkReal x206=((x160)+(x98));
IkReal x207=((x117)+(x189));
IkReal x208=((x137)+(x204));
IkReal x209=((x127)+(x205));
IkReal x210=((((IkReal(-1.00000000000000))*(x156)))+(((IkReal(-1.00000000000000))*(x109)))+(x195));
IkReal x211=((((IkReal(-1.00000000000000))*(x109)))+(((IkReal(-1.00000000000000))*(x195)))+(x156));
op[0]=((((IkReal(-1.00000000000000))*(x74)))+(((IkReal(-1.00000000000000))*(x77)))+(x75));
op[1]=((((IkReal(-1.00000000000000))*(x79)))+(x78)+(((IkReal(-1.00000000000000))*(x80))));
op[2]=((((IkReal(-1.00000000000000))*(x75)))+(rxp0_2)+(x74));
op[3]=x76;
op[4]=IkReal(0);
op[5]=x76;
op[6]=((((IkReal(-1.00000000000000))*(x77)))+(x174));
op[7]=((x79)+(x78)+(((IkReal(-1.00000000000000))*(x80))));
op[8]=((((IkReal(-1.00000000000000))*(x174)))+(rxp0_2));
op[9]=((IkReal(0.0290365308000000))+(((IkReal(-1.00000000000000))*(x148)))+(x197)+(x81));
op[10]=((((IkReal(-1.00000000000000))*(x194)))+(x149)+(x84));
op[11]=((((IkReal(-1.00000000000000))*(x197)))+(x166)+(((IkReal(-1.00000000000000))*(x81))));
op[12]=x147;
op[13]=IkReal(0);
op[14]=x147;
op[15]=((IkReal(0.0290365308000000))+(((IkReal(-1.00000000000000))*(x148)))+(x197)+(((IkReal(-1.00000000000000))*(x81))));
op[16]=((((IkReal(-1.00000000000000))*(x194)))+(x149)+(((IkReal(-1.00000000000000))*(x84))));
op[17]=((((IkReal(-1.00000000000000))*(x197)))+(x166)+(x81));
op[18]=((x172)+(x87)+(((IkReal(-1.00000000000000))*(x88))));
op[19]=x151;
op[20]=((((IkReal(-1.00000000000000))*(x180)))+(x172));
op[21]=((IkReal(0.676640000000000))*(npy));
op[22]=((IkReal(1.35328000000000))*(npx));
op[23]=((IkReal(-0.676640000000000))*(npy));
op[24]=((IkReal(0.000712877700000000))+(((IkReal(-1.00000000000000))*(x186)))+(x87));
op[25]=x151;
op[26]=((IkReal(0.000712877700000000))+(((IkReal(-1.00000000000000))*(x180)))+(((IkReal(-1.00000000000000))*(x86))));
op[27]=((x167)+(((IkReal(-1.00000000000000))*(x90))));
op[28]=x152;
op[29]=((pz)+(((IkReal(-1.00000000000000))*(x90)))+(((IkReal(-1.00000000000000))*(x89))));
op[30]=((IkReal(-0.338320000000000))*(r21));
op[31]=((IkReal(-0.676640000000000))*(r20));
op[32]=((IkReal(0.338320000000000))*(r21));
op[33]=((x167)+(x90));
op[34]=x152;
op[35]=((pz)+(x90)+(((IkReal(-1.00000000000000))*(x89))));
op[36]=((((IkReal(-1.00000000000000))*(x198)))+(x182)+(x91));
op[37]=x120;
op[38]=((((IkReal(-1.00000000000000))*(x198)))+(x91)+(x92)+(((IkReal(-1.00000000000000))*(x93))));
op[39]=((((IkReal(-1.00000000000000))*(x192)))+(x149)+(((IkReal(-1.00000000000000))*(x95))));
op[40]=((((IkReal(-1.00000000000000))*(x168)))+(x169)+(((IkReal(-0.125272000400000))*(r20))));
op[41]=((((IkReal(-1.00000000000000))*(x191)))+(x150)+(x95));
op[42]=((((IkReal(-1.00000000000000))*(x190)))+(x198)+(x92));
op[43]=x170;
op[44]=((((IkReal(-1.00000000000000))*(x154)))+(x198)+(x182));
op[45]=((((IkReal(-1.00000000000000))*(x160)))+(x155)+(x98)+(((IkReal(-1.00000000000000))*(x97)))+(((IkReal(-1.00000000000000))*(x99))));
op[46]=((((IkReal(-1.00000000000000))*(x196)))+(x159)+(x104));
op[47]=((((IkReal(-1.00000000000000))*(x155)))+(x181)+(x183));
op[48]=((((IkReal(-1.00000000000000))*(x157)))+(x101)+(x201));
op[49]=((IkReal(0.0124610400000000))*(r20));
op[50]=((((IkReal(-1.00000000000000))*(x157)))+(((IkReal(-1.00000000000000))*(x101)))+(x201));
op[51]=((((IkReal(-1.00000000000000))*(x155)))+(((IkReal(-1.00000000000000))*(x181)))+(x183));
op[52]=((((IkReal(-1.00000000000000))*(x159)))+(x104)+(x196));
op[53]=((x155)+(((IkReal(-1.00000000000000))*(x206)))+(x97)+(((IkReal(-1.00000000000000))*(x99))));
op[54]=x175;
op[55]=IkReal(0);
op[56]=x175;
op[57]=((((IkReal(-1.00000000000000))*(x105)))+(x106));
op[58]=((((IkReal(-8.00000000000000))*(rxp0_2)))+(((IkReal(0.858300882142573))*(npx))));
op[59]=((((IkReal(-1.00000000000000))*(x106)))+(x105));
op[60]=x176;
op[61]=IkReal(0);
op[62]=x176;
op[63]=x210;
op[64]=IkReal(0);
op[65]=x210;
op[66]=((((IkReal(-1.00000000000000))*(x161)))+(x187));
op[67]=((((IkReal(-8.00000000000000))*(x85)))+(((IkReal(0.199600980000000))*(r20)))+(((IkReal(16.0000000000000))*(x145))));
op[68]=((((IkReal(-1.00000000000000))*(x187)))+(x161));
op[69]=x211;
op[70]=IkReal(0);
op[71]=x211;
op[72]=((((IkReal(-1.00000000000000))*(x111)))+(x112));
op[73]=x113;
op[74]=x177;
op[75]=((IkReal(0.116146123200000))*(r21));
op[76]=((IkReal(0.232292246400000))*(r20));
op[77]=((IkReal(-0.116146123200000))*(r21));
op[78]=((IkReal(-1.00000000000000))*(x177));
op[79]=x113;
op[80]=((((IkReal(-1.00000000000000))*(x112)))+(x111));
op[81]=((x171)+(x114));
op[82]=x162;
op[83]=((IkReal(-0.131380802670269))+(((IkReal(-1.00000000000000))*(x115)))+(x114));
op[84]=((IkReal(3.66780576968926))*(npy));
op[85]=((IkReal(7.33561153937853))*(npx));
op[86]=((IkReal(-3.66780576968926))*(npy));
op[87]=((((IkReal(-1.00000000000000))*(x114)))+(x171));
op[88]=x162;
op[89]=((IkReal(-0.131380802670269))+(((IkReal(-1.00000000000000))*(x114)))+(((IkReal(-1.00000000000000))*(x115))));
op[90]=((((IkReal(-1.00000000000000))*(x158)))+(x207));
op[91]=((((IkReal(-1.00000000000000))*(x193)))+(x161)+(x118));
op[92]=((x158)+(((IkReal(-1.00000000000000))*(x207))));
op[93]=x164;
op[94]=IkReal(0);
op[95]=x164;
op[96]=((((IkReal(-1.00000000000000))*(x188)))+(x189));
op[97]=((((IkReal(-1.00000000000000))*(x193)))+(((IkReal(-1.00000000000000))*(x118)))+(x161));
op[98]=((((IkReal(-1.00000000000000))*(x189)))+(x188));
op[99]=((IkReal(-1.00000000000000))*(x178));
op[100]=x122;
op[101]=((((IkReal(-1.00000000000000))*(x121)))+(x120));
op[102]=((IkReal(-0.780160000000000))*(rxp1_2));
op[103]=((IkReal(-1.56032000000000))*(rxp0_2));
op[104]=((IkReal(0.780160000000000))*(rxp1_2));
op[105]=((((IkReal(-1.00000000000000))*(x120)))+(x121));
op[106]=x122;
op[107]=x178;
op[108]=((((IkReal(-1.00000000000000))*(x179)))+(rxp0_2));
op[109]=((((IkReal(-1.00000000000000))*(x78)))+(((IkReal(-1.00000000000000))*(x125)))+(x80));
op[110]=((((IkReal(-1.00000000000000))*(x77)))+(x179));
op[111]=x123;
op[112]=IkReal(0);
op[113]=x123;
op[114]=((((IkReal(-1.00000000000000))*(x75)))+(rxp0_2)+(x124));
op[115]=((((IkReal(-1.00000000000000))*(x78)))+(x125)+(x80));
op[116]=((((IkReal(-1.00000000000000))*(x77)))+(((IkReal(-1.00000000000000))*(x124)))+(x75));
op[117]=((x166)+(x127)+(((IkReal(-1.00000000000000))*(x205))));
op[118]=((((IkReal(-1.00000000000000))*(x149)))+(x129)+(x200));
op[119]=((IkReal(0.0290365308000000))+(((IkReal(-1.00000000000000))*(x148)))+(((IkReal(-1.00000000000000))*(x127)))+(x205));
op[120]=x165;
op[121]=IkReal(0);
op[122]=x165;
op[123]=((x166)+(((IkReal(-1.00000000000000))*(x209))));
op[124]=((((IkReal(-1.00000000000000))*(x149)))+(((IkReal(-1.00000000000000))*(x129)))+(x200));
op[125]=((IkReal(0.0290365308000000))+(((IkReal(-1.00000000000000))*(x148)))+(x209));
op[126]=((IkReal(0.0286582089000000))+(((IkReal(-1.00000000000000))*(x180)))+(((IkReal(-1.00000000000000))*(x130))));
op[127]=x131;
op[128]=((IkReal(0.0286582089000000))+(((IkReal(-1.00000000000000))*(x184)))+(x87));
op[129]=((IkReal(-0.103520000000000))*(npy));
op[130]=((IkReal(-0.207040000000000))*(npx));
op[131]=((IkReal(0.103520000000000))*(npy));
op[132]=((((IkReal(-1.00000000000000))*(x180)))+(x173));
op[133]=x131;
op[134]=((x173)+(x87)+(((IkReal(-1.00000000000000))*(x88))));
op[135]=((x132)+(pz)+(((IkReal(-1.00000000000000))*(x89))));
op[136]=x133;
op[137]=((x167)+(x132));
op[138]=((IkReal(0.0517600000000000))*(r21));
op[139]=((IkReal(0.103520000000000))*(r20));
op[140]=((IkReal(-0.0517600000000000))*(r21));
op[141]=((((IkReal(-1.00000000000000))*(x132)))+(pz)+(((IkReal(-1.00000000000000))*(x89))));
op[142]=x133;
op[143]=((x167)+(((IkReal(-1.00000000000000))*(x132))));
op[144]=((((IkReal(-1.00000000000000))*(x154)))+(x185)+(x202));
op[145]=x120;
op[146]=((((IkReal(-1.00000000000000))*(x190)))+(x135)+(x202));
op[147]=((((IkReal(-1.00000000000000))*(x191)))+(x150)+(x136));
op[148]=((((IkReal(-1.00000000000000))*(x169)))+(((IkReal(0.0134906756000000))*(r20)))+(x168));
op[149]=((((IkReal(-1.00000000000000))*(x192)))+(x149)+(((IkReal(-1.00000000000000))*(x136))));
op[150]=((x135)+(((IkReal(-1.00000000000000))*(x202)))+(x91)+(((IkReal(-1.00000000000000))*(x93))));
op[151]=x170;
op[152]=((x185)+(((IkReal(-1.00000000000000))*(x202)))+(x91));
op[153]=((((IkReal(-1.00000000000000))*(x206)))+(x208));
op[154]=((((IkReal(-1.00000000000000))*(x141)))+(((IkReal(-1.00000000000000))*(x158)))+(x199));
op[155]=((x102)+(((IkReal(-1.00000000000000))*(x208)))+(((IkReal(-1.00000000000000))*(x98))));
op[156]=((((IkReal(-1.00000000000000))*(x101)))+(x156)+(((IkReal(-1.00000000000000))*(x203))));
op[157]=((IkReal(-0.0124610400000000))*(r20));
op[158]=((x156)+(x101)+(((IkReal(-1.00000000000000))*(x203))));
op[159]=((x137)+(x102)+(((IkReal(-1.00000000000000))*(x204)))+(x98));
op[160]=((((IkReal(-1.00000000000000))*(x141)))+(((IkReal(-1.00000000000000))*(x199)))+(x158));
op[161]=((((IkReal(-1.00000000000000))*(x160)))+(((IkReal(-1.00000000000000))*(x137)))+(x204)+(x98));
solvedialyticpoly12qep(op,zeror,numroots);
IkReal j4array[16], cj4array[16], sj4array[16], j5array[16], cj5array[16], sj5array[16], j6array[16], cj6array[16], sj6array[16];
int numsolutions = 0;
for(int ij4 = 0; ij4 < numroots; ij4 += 3)
{
IkReal htj4 = zeror[ij4+0], htj5 = zeror[ij4+1], htj6 = zeror[ij4+2];
j4array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj4)));
j5array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj5)));
j6array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj6)));
IkReal x212=(htj4)*(htj4);
IkReal x213=(htj5)*(htj5);
IkReal x214=(htj6)*(htj6);
cj4array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x212))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x212)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x212))))));
cj5array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x213))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x213)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x213))))));
cj6array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x214))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x214)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x214))))));
sj4array[numsolutions]=((IkReal(2.00000000000000))*(htj4)*(((IKabs(((IkReal(1.00000000000000))+((htj4)*(htj4)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj4)*(htj4))))):(IkReal)1.0e30)));
sj5array[numsolutions]=((IkReal(2.00000000000000))*(htj5)*(((IKabs(((IkReal(1.00000000000000))+((htj5)*(htj5)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj5)*(htj5))))):(IkReal)1.0e30)));
sj6array[numsolutions]=((IkReal(2.00000000000000))*(htj6)*(((IKabs(((IkReal(1.00000000000000))+((htj6)*(htj6)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj6)*(htj6))))):(IkReal)1.0e30)));
if( j4array[numsolutions] > IKPI )
{
    j4array[numsolutions]-=IK2PI;
}
else if( j4array[numsolutions] < -IKPI )
{
    j4array[numsolutions]+=IK2PI;
}
if( j5array[numsolutions] > IKPI )
{
    j5array[numsolutions]-=IK2PI;
}
else if( j5array[numsolutions] < -IKPI )
{
    j5array[numsolutions]+=IK2PI;
}
if( j6array[numsolutions] > IKPI )
{
    j6array[numsolutions]-=IK2PI;
}
else if( j6array[numsolutions] < -IKPI )
{
    j6array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j4valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj4 = 16;
_nj5 = 1;
_nj6 = 1;
for(int ij4 = 0; ij4 < numsolutions; ++ij4)
    {
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
_ij5[0] = 0; _ij5[1] = -1;
_ij6[0] = 0; _ij6[1] = -1;
for(int iij4 = ij4+1; iij4 < numsolutions; ++iij4)
{
if( !j4valid[iij4] ) { continue; }
if( IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(cj5array[ij4]-cj5array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij4]-sj5array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(cj6array[ij4]-cj6array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij4]-sj6array[iij4]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j4valid[iij4]=false; _ij4[1] = iij4; _ij5[1] = 0; _ij6[1] = 0;  break; 
}
}
    j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];

    j5 = j5array[ij4]; cj5 = cj5array[ij4]; sj5 = sj5array[ij4];

    j6 = j6array[ij4]; cj6 = cj6array[ij4]; sj6 = sj6array[ij4];

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x215=((cj5)*(r22));
IkReal x216=((cj6)*(r20));
IkReal x217=((r21)*(sj6));
IkReal x218=((IkReal(0.845207141618998))*(cj4));
IkReal x219=((IkReal(0.845207141618998))*(sj4));
IkReal x220=((r20)*(sj5)*(sj6));
IkReal x221=((cj6)*(r21)*(sj5));
if( IKabs(((((IkReal(8.66701334720056))*(pz)))+(((IkReal(-0.620904836193448))*(x215)))+(((x216)*(x219)))+(((IkReal(-1.00000000000000))*(x217)*(x219)))+(((IkReal(-0.620904836193448))*(x221)))+(((IkReal(-0.620904836193448))*(x220)))+(((IkReal(-1.00000000000000))*(x218)*(x221)))+(((IkReal(-1.00000000000000))*(x218)*(x220)))+(((IkReal(-1.00000000000000))*(x215)*(x218))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj4)*(x220)))+(((sj4)*(x221)))+(((cj4)*(x216)))+(((IkReal(-1.00000000000000))*(cj4)*(x217)))+(((sj4)*(x215))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(8.66701334720056))*(pz)))+(((IkReal(-0.620904836193448))*(x215)))+(((x216)*(x219)))+(((IkReal(-1.00000000000000))*(x217)*(x219)))+(((IkReal(-0.620904836193448))*(x221)))+(((IkReal(-0.620904836193448))*(x220)))+(((IkReal(-1.00000000000000))*(x218)*(x221)))+(((IkReal(-1.00000000000000))*(x218)*(x220)))+(((IkReal(-1.00000000000000))*(x215)*(x218)))))+IKsqr(((((sj4)*(x220)))+(((sj4)*(x221)))+(((cj4)*(x216)))+(((IkReal(-1.00000000000000))*(cj4)*(x217)))+(((sj4)*(x215)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((IkReal(8.66701334720056))*(pz)))+(((IkReal(-0.620904836193448))*(x215)))+(((x216)*(x219)))+(((IkReal(-1.00000000000000))*(x217)*(x219)))+(((IkReal(-0.620904836193448))*(x221)))+(((IkReal(-0.620904836193448))*(x220)))+(((IkReal(-1.00000000000000))*(x218)*(x221)))+(((IkReal(-1.00000000000000))*(x218)*(x220)))+(((IkReal(-1.00000000000000))*(x215)*(x218)))), ((((sj4)*(x220)))+(((sj4)*(x221)))+(((cj4)*(x216)))+(((IkReal(-1.00000000000000))*(cj4)*(x217)))+(((sj4)*(x215)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x222=((IkReal(0.0975200000000000))*(cj4));
IkReal x223=((IkReal(1.00000000000000))*(sj4));
IkReal x224=((cj5)*(r22));
IkReal x225=((r21)*(sj6));
IkReal x226=((cj6)*(r20));
IkReal x227=((IkReal(0.0975200000000000))*(sj4));
IkReal x228=((cj6)*(r21)*(sj5));
IkReal x229=((r20)*(sj5)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x226)))+(IKcos(j2))+(((IkReal(-1.00000000000000))*(x223)*(x224)))+(((IkReal(-1.00000000000000))*(x223)*(x229)))+(((IkReal(-1.00000000000000))*(x223)*(x228)))+(((cj4)*(x225))));
evalcond[1]=((((IkReal(0.0716400000000000))*(x229)))+(((IkReal(0.0716400000000000))*(x228)))+(((IkReal(0.0716400000000000))*(x224)))+(((x225)*(x227)))+(((IkReal(0.115380000000000))*(IKsin(j2))))+(((x222)*(x228)))+(((x222)*(x229)))+(((x222)*(x224)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(x226)*(x227))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(sj2);
dummyeval[0]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(sj2);
dummyeval[0]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj2)*(sj2)))+(((IkReal(-1.09057028947825))*(sj2))));
dummyeval[1]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x230=((cj5)*(r22));
IkReal x231=((IkReal(0.0975200000000000))*(cj4));
IkReal x232=((IkReal(1.00000000000000))*(cj5));
IkReal x233=((r20)*(sj6));
IkReal x234=((IkReal(1.00000000000000))*(sj4));
IkReal x235=((cj6)*(sj5));
IkReal x236=((sj5)*(sj6));
IkReal x237=((cj6)*(r20));
IkReal x238=((IkReal(0.0975200000000000))*(sj4));
IkReal x239=((cj4)*(sj6));
IkReal x240=((r21)*(sj6));
IkReal x241=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x232)))+(((IkReal(-1.00000000000000))*(x232)*(x233))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x230)*(x234)))+(((IkReal(-1.00000000000000))*(r21)*(x234)*(x235)))+(((IkReal(-1.00000000000000))*(cj4)*(x237)))+(((IkReal(-1.00000000000000))*(sj5)*(x233)*(x234)))+(((r21)*(x239))));
evalcond[3]=((((cj4)*(r21)*(x235)))+(((cj4)*(x230)))+(((IkReal(-1.00000000000000))*(x234)*(x237)))+(((sj4)*(x240)))+(((cj4)*(sj5)*(x233))));
evalcond[4]=((((r01)*(x239)))+(((IkReal(-1.00000000000000))*(r00)*(x241)))+(((IkReal(-1.00000000000000))*(r01)*(x234)*(x235)))+(((IkReal(-1.00000000000000))*(r00)*(x234)*(x236)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x232))));
evalcond[5]=((((r11)*(x239)))+(((IkReal(-1.00000000000000))*(r10)*(x234)*(x236)))+(((IkReal(-1.00000000000000))*(r10)*(x241)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x232)))+(((IkReal(-1.00000000000000))*(r11)*(x234)*(x235))));
evalcond[6]=((((sj5)*(x231)*(x233)))+(((r21)*(x231)*(x235)))+(((IkReal(0.0716400000000000))*(sj5)*(x233)))+(((x238)*(x240)))+(((x230)*(x231)))+(((IkReal(0.0716400000000000))*(x230)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(r21)*(x235)))+(((IkReal(-1.00000000000000))*(x237)*(x238))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x242=((sj4)*(sj6));
IkReal x243=((IkReal(0.0225568570269310))*(r01));
IkReal x244=((IkReal(0.403032554330817))*(r11));
IkReal x245=((sj5)*(sj6));
IkReal x246=((cj4)*(r00));
IkReal x247=((cj5)*(r12));
IkReal x248=((IkReal(0.0225568570269310))*(r11));
IkReal x249=((cj4)*(r10));
IkReal x250=((IkReal(0.403032554330817))*(r01));
IkReal x251=((IkReal(0.403032554330817))*(cj4));
IkReal x252=((cj6)*(sj5));
IkReal x253=((cj5)*(r02));
IkReal x254=((IkReal(0.0225568570269310))*(cj4));
IkReal x255=((cj6)*(r10)*(sj4));
IkReal x256=((cj6)*(r00)*(sj4));
if( IKabs(((((IkReal(0.296075186549013))*(r10)*(x245)))+(((IkReal(-1.00000000000000))*(x242)*(x243)))+(((cj4)*(x244)*(x252)))+(((IkReal(-1.00000000000000))*(cj4)*(x243)*(x252)))+(((IkReal(0.403032554330817))*(x245)*(x249)))+(((IkReal(0.0225568570269310))*(x256)))+(((IkReal(0.231304932597734))*(px)))+(((IkReal(-0.0225568570269310))*(x245)*(x246)))+(((IkReal(0.296075186549013))*(x247)))+(((IkReal(-0.0165706853713017))*(x253)))+(((x242)*(x244)))+(((IkReal(-0.0165706853713017))*(r01)*(x252)))+(((IkReal(-4.13281946606662))*(py)))+(((IkReal(-1.00000000000000))*(x253)*(x254)))+(((IkReal(-0.403032554330817))*(x255)))+(((IkReal(0.296075186549013))*(r11)*(x252)))+(((x247)*(x251)))+(((IkReal(-0.0165706853713017))*(r00)*(x245))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(0.296075186549013))*(r00)*(x245)))+(((IkReal(0.0225568570269310))*(x245)*(x249)))+(((x242)*(x250)))+(((cj4)*(x248)*(x252)))+(((IkReal(-0.0225568570269310))*(x255)))+(((IkReal(-0.231304932597734))*(py)))+(((IkReal(0.403032554330817))*(x245)*(x246)))+(((IkReal(0.296075186549013))*(x253)))+(((x251)*(x253)))+(((IkReal(0.0165706853713017))*(r10)*(x245)))+(((x242)*(x248)))+(((IkReal(0.0165706853713017))*(r11)*(x252)))+(((IkReal(0.0165706853713017))*(x247)))+(((cj4)*(x250)*(x252)))+(((IkReal(-4.13281946606662))*(px)))+(((IkReal(-0.403032554330817))*(x256)))+(((IkReal(0.296075186549013))*(r01)*(x252)))+(((x247)*(x254))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(0.296075186549013))*(r10)*(x245)))+(((IkReal(-1.00000000000000))*(x242)*(x243)))+(((cj4)*(x244)*(x252)))+(((IkReal(-1.00000000000000))*(cj4)*(x243)*(x252)))+(((IkReal(0.403032554330817))*(x245)*(x249)))+(((IkReal(0.0225568570269310))*(x256)))+(((IkReal(0.231304932597734))*(px)))+(((IkReal(-0.0225568570269310))*(x245)*(x246)))+(((IkReal(0.296075186549013))*(x247)))+(((IkReal(-0.0165706853713017))*(x253)))+(((x242)*(x244)))+(((IkReal(-0.0165706853713017))*(r01)*(x252)))+(((IkReal(-4.13281946606662))*(py)))+(((IkReal(-1.00000000000000))*(x253)*(x254)))+(((IkReal(-0.403032554330817))*(x255)))+(((IkReal(0.296075186549013))*(r11)*(x252)))+(((x247)*(x251)))+(((IkReal(-0.0165706853713017))*(r00)*(x245)))))+IKsqr(((((IkReal(0.296075186549013))*(r00)*(x245)))+(((IkReal(0.0225568570269310))*(x245)*(x249)))+(((x242)*(x250)))+(((cj4)*(x248)*(x252)))+(((IkReal(-0.0225568570269310))*(x255)))+(((IkReal(-0.231304932597734))*(py)))+(((IkReal(0.403032554330817))*(x245)*(x246)))+(((IkReal(0.296075186549013))*(x253)))+(((x251)*(x253)))+(((IkReal(0.0165706853713017))*(r10)*(x245)))+(((x242)*(x248)))+(((IkReal(0.0165706853713017))*(r11)*(x252)))+(((IkReal(0.0165706853713017))*(x247)))+(((cj4)*(x250)*(x252)))+(((IkReal(-4.13281946606662))*(px)))+(((IkReal(-0.403032554330817))*(x256)))+(((IkReal(0.296075186549013))*(r01)*(x252)))+(((x247)*(x254)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(0.296075186549013))*(r10)*(x245)))+(((IkReal(-1.00000000000000))*(x242)*(x243)))+(((cj4)*(x244)*(x252)))+(((IkReal(-1.00000000000000))*(cj4)*(x243)*(x252)))+(((IkReal(0.403032554330817))*(x245)*(x249)))+(((IkReal(0.0225568570269310))*(x256)))+(((IkReal(0.231304932597734))*(px)))+(((IkReal(-0.0225568570269310))*(x245)*(x246)))+(((IkReal(0.296075186549013))*(x247)))+(((IkReal(-0.0165706853713017))*(x253)))+(((x242)*(x244)))+(((IkReal(-0.0165706853713017))*(r01)*(x252)))+(((IkReal(-4.13281946606662))*(py)))+(((IkReal(-1.00000000000000))*(x253)*(x254)))+(((IkReal(-0.403032554330817))*(x255)))+(((IkReal(0.296075186549013))*(r11)*(x252)))+(((x247)*(x251)))+(((IkReal(-0.0165706853713017))*(r00)*(x245)))), ((((IkReal(0.296075186549013))*(r00)*(x245)))+(((IkReal(0.0225568570269310))*(x245)*(x249)))+(((x242)*(x250)))+(((cj4)*(x248)*(x252)))+(((IkReal(-0.0225568570269310))*(x255)))+(((IkReal(-0.231304932597734))*(py)))+(((IkReal(0.403032554330817))*(x245)*(x246)))+(((IkReal(0.296075186549013))*(x253)))+(((x251)*(x253)))+(((IkReal(0.0165706853713017))*(r10)*(x245)))+(((x242)*(x248)))+(((IkReal(0.0165706853713017))*(r11)*(x252)))+(((IkReal(0.0165706853713017))*(x247)))+(((cj4)*(x250)*(x252)))+(((IkReal(-4.13281946606662))*(px)))+(((IkReal(-0.403032554330817))*(x256)))+(((IkReal(0.296075186549013))*(r01)*(x252)))+(((x247)*(x254)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[2];
IkReal x257=IKsin(j1);
IkReal x258=IKcos(j1);
IkReal x259=((IkReal(0.0975200000000000))*(sj4));
IkReal x260=((sj5)*(sj6));
IkReal x261=((IkReal(0.0975200000000000))*(cj4));
IkReal x262=((cj6)*(sj5));
IkReal x263=((cj5)*(r02));
IkReal x264=((cj5)*(r12));
IkReal x265=((IkReal(0.0716400000000000))*(x262));
evalcond[0]=((((r00)*(x260)*(x261)))+(((IkReal(0.0716400000000000))*(r00)*(x260)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x259)))+(((IkReal(0.0135000000000000))*(x257)))+(((r01)*(sj6)*(x259)))+(((IkReal(-1.00000000000000))*(px)))+(((x261)*(x263)))+(((IkReal(0.0716400000000000))*(x263)))+(((r01)*(x261)*(x262)))+(((r01)*(x265)))+(((IkReal(-0.241210000000000))*(x258))));
evalcond[1]=((((r11)*(x261)*(x262)))+(((r10)*(x260)*(x261)))+(((IkReal(0.0716400000000000))*(r10)*(x260)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x259)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x265)))+(((x261)*(x264)))+(((IkReal(0.0716400000000000))*(x264)))+(((IkReal(-0.0135000000000000))*(x258)))+(((r11)*(sj6)*(x259)))+(((IkReal(-0.241210000000000))*(x257))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x266=((IkReal(1.00000000000000))*(sj5));
IkReal x267=((cj4)*(sj1));
IkReal x268=((r10)*(sj6));
IkReal x269=((cj1)*(cj6));
IkReal x270=((r10)*(sj4));
IkReal x271=((cj1)*(r12));
IkReal x272=((cj6)*(r11));
IkReal x273=((IkReal(1.00000000000000))*(cj5));
IkReal x274=((IkReal(1.00000000000000))*(r11)*(sj4)*(sj6));
if( IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(cj4)*(r11)*(x266)*(x269)))+(((IkReal(-1.00000000000000))*(cj4)*(x271)*(x273)))+(((IkReal(-1.00000000000000))*(cj1)*(cj4)*(x266)*(x268)))+(((IkReal(-1.00000000000000))*(cj1)*(x274)))+(((IkReal(-1.00000000000000))*(sj1)*(x272)*(x273)))+(((r12)*(sj1)*(sj5)))+(((IkReal(-1.00000000000000))*(sj1)*(x268)*(x273)))+(((x269)*(x270))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(sj1)*(x274)))+(((cj6)*(sj1)*(x270)))+(((IkReal(-1.00000000000000))*(x266)*(x267)*(x268)))+(((IkReal(-1.00000000000000))*(x266)*(x267)*(x272)))+(((cj5)*(r11)*(x269)))+(((IkReal(-1.00000000000000))*(x266)*(x271)))+(((IkReal(-1.00000000000000))*(r12)*(x267)*(x273)))+(((cj1)*(cj5)*(x268))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst17)*(((((IkReal(-1.00000000000000))*(cj4)*(r11)*(x266)*(x269)))+(((IkReal(-1.00000000000000))*(cj4)*(x271)*(x273)))+(((IkReal(-1.00000000000000))*(cj1)*(cj4)*(x266)*(x268)))+(((IkReal(-1.00000000000000))*(cj1)*(x274)))+(((IkReal(-1.00000000000000))*(sj1)*(x272)*(x273)))+(((r12)*(sj1)*(sj5)))+(((IkReal(-1.00000000000000))*(sj1)*(x268)*(x273)))+(((x269)*(x270)))))), ((gconst17)*(((((IkReal(-1.00000000000000))*(sj1)*(x274)))+(((cj6)*(sj1)*(x270)))+(((IkReal(-1.00000000000000))*(x266)*(x267)*(x268)))+(((IkReal(-1.00000000000000))*(x266)*(x267)*(x272)))+(((cj5)*(r11)*(x269)))+(((IkReal(-1.00000000000000))*(x266)*(x271)))+(((IkReal(-1.00000000000000))*(r12)*(x267)*(x273)))+(((cj1)*(cj5)*(x268)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x275=IKsin(j3);
IkReal x276=IKcos(j3);
IkReal x277=((IkReal(1.00000000000000))*(r00));
IkReal x278=((cj6)*(sj4));
IkReal x279=((cj4)*(cj5));
IkReal x280=((cj5)*(sj6));
IkReal x281=((cj4)*(sj5));
IkReal x282=((IkReal(1.00000000000000))*(r10));
IkReal x283=((sj4)*(sj6));
IkReal x284=((cj1)*(x276));
IkReal x285=((cj1)*(x275));
IkReal x286=((sj1)*(x276));
IkReal x287=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x288=((IkReal(1.00000000000000))*(sj1)*(x275));
evalcond[0]=((((IkReal(-1.00000000000000))*(x280)*(x282)))+(((IkReal(-1.00000000000000))*(r11)*(x287)))+(x284)+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x288))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x277)*(x280)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x286)))+(((IkReal(-1.00000000000000))*(x285)))+(((IkReal(-1.00000000000000))*(r01)*(x287))));
evalcond[2]=((((cj6)*(r11)*(x281)))+(((r11)*(x283)))+(x286)+(x285)+(((r10)*(sj6)*(x281)))+(((r12)*(x279)))+(((IkReal(-1.00000000000000))*(x278)*(x282))));
evalcond[3]=((((r01)*(x283)))+(((IkReal(-1.00000000000000))*(x277)*(x278)))+(((r02)*(x279)))+(((cj6)*(r01)*(x281)))+(x284)+(((r00)*(sj6)*(x281)))+(((IkReal(-1.00000000000000))*(x288))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x289=((IkReal(1.00000000000000))*(r00));
IkReal x290=((sj1)*(sj5));
IkReal x291=((cj1)*(sj5));
IkReal x292=((cj1)*(cj5)*(sj6));
IkReal x293=((cj1)*(cj5)*(cj6));
IkReal x294=((cj5)*(sj1)*(sj6));
IkReal x295=((IkReal(1.00000000000000))*(cj5)*(cj6)*(sj1));
if( IKabs(((gconst16)*(((((r12)*(x290)))+(((IkReal(-1.00000000000000))*(r10)*(x294)))+(((IkReal(-1.00000000000000))*(x289)*(x292)))+(((IkReal(-1.00000000000000))*(r01)*(x293)))+(((r02)*(x291)))+(((IkReal(-1.00000000000000))*(r11)*(x295))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(x289)*(x294)))+(((r10)*(x292)))+(((IkReal(-1.00000000000000))*(r12)*(x291)))+(((r02)*(x290)))+(((r11)*(x293)))+(((IkReal(-1.00000000000000))*(r01)*(x295))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst16)*(((((r12)*(x290)))+(((IkReal(-1.00000000000000))*(r10)*(x294)))+(((IkReal(-1.00000000000000))*(x289)*(x292)))+(((IkReal(-1.00000000000000))*(r01)*(x293)))+(((r02)*(x291)))+(((IkReal(-1.00000000000000))*(r11)*(x295)))))), ((gconst16)*(((((IkReal(-1.00000000000000))*(x289)*(x294)))+(((r10)*(x292)))+(((IkReal(-1.00000000000000))*(r12)*(x291)))+(((r02)*(x290)))+(((r11)*(x293)))+(((IkReal(-1.00000000000000))*(r01)*(x295)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x296=IKsin(j3);
IkReal x297=IKcos(j3);
IkReal x298=((IkReal(1.00000000000000))*(r00));
IkReal x299=((cj6)*(sj4));
IkReal x300=((cj4)*(cj5));
IkReal x301=((cj5)*(sj6));
IkReal x302=((cj4)*(sj5));
IkReal x303=((IkReal(1.00000000000000))*(r10));
IkReal x304=((sj4)*(sj6));
IkReal x305=((cj1)*(x297));
IkReal x306=((cj1)*(x296));
IkReal x307=((sj1)*(x297));
IkReal x308=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x309=((IkReal(1.00000000000000))*(sj1)*(x296));
evalcond[0]=((((IkReal(-1.00000000000000))*(x301)*(x303)))+(x305)+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x308)))+(((IkReal(-1.00000000000000))*(x309))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x298)*(x301)))+(((IkReal(-1.00000000000000))*(r01)*(x308)))+(((IkReal(-1.00000000000000))*(x306)))+(((IkReal(-1.00000000000000))*(x307)))+(((r02)*(sj5))));
evalcond[2]=((((r11)*(x304)))+(((r10)*(sj6)*(x302)))+(x306)+(x307)+(((IkReal(-1.00000000000000))*(x299)*(x303)))+(((cj6)*(r11)*(x302)))+(((r12)*(x300))));
evalcond[3]=((((r02)*(x300)))+(((r00)*(sj6)*(x302)))+(x305)+(((IkReal(-1.00000000000000))*(x298)*(x299)))+(((cj6)*(r01)*(x302)))+(((r01)*(x304)))+(((IkReal(-1.00000000000000))*(x309))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x310=((cj5)*(r22));
IkReal x311=((IkReal(0.0975200000000000))*(cj4));
IkReal x312=((IkReal(1.00000000000000))*(cj5));
IkReal x313=((r20)*(sj6));
IkReal x314=((IkReal(1.00000000000000))*(sj4));
IkReal x315=((cj6)*(sj5));
IkReal x316=((sj5)*(sj6));
IkReal x317=((cj6)*(r20));
IkReal x318=((IkReal(0.0975200000000000))*(sj4));
IkReal x319=((cj4)*(sj6));
IkReal x320=((r21)*(sj6));
IkReal x321=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x312)*(x313)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x312))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x310)*(x314)))+(((IkReal(-1.00000000000000))*(sj5)*(x313)*(x314)))+(((IkReal(-1.00000000000000))*(r21)*(x314)*(x315)))+(((IkReal(-1.00000000000000))*(cj4)*(x317)))+(((r21)*(x319))));
evalcond[3]=((((sj4)*(x320)))+(((cj4)*(x310)))+(((IkReal(-1.00000000000000))*(x314)*(x317)))+(((cj4)*(r21)*(x315)))+(((cj4)*(sj5)*(x313))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x314)*(x316)))+(((IkReal(-1.00000000000000))*(r01)*(x314)*(x315)))+(((r01)*(x319)))+(((IkReal(-1.00000000000000))*(r00)*(x321)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x312))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x314)*(x316)))+(((r11)*(x319)))+(((IkReal(-1.00000000000000))*(r11)*(x314)*(x315)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x312)))+(((IkReal(-1.00000000000000))*(r10)*(x321))));
evalcond[6]=((((x318)*(x320)))+(((IkReal(0.0716400000000000))*(r21)*(x315)))+(((x310)*(x311)))+(((IkReal(0.0716400000000000))*(sj5)*(x313)))+(((sj5)*(x311)*(x313)))+(((IkReal(0.0716400000000000))*(x310)))+(((IkReal(-1.00000000000000))*(pz)))+(((r21)*(x311)*(x315)))+(((IkReal(-1.00000000000000))*(x317)*(x318))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x322=((cj4)*(cj5));
IkReal x323=((IkReal(2.56864497645414))*(cj5));
IkReal x324=((IkReal(3.31834518489291))*(cj5));
IkReal x325=((IkReal(4.51709969892178))*(r10));
IkReal x326=((cj6)*(sj4));
IkReal x327=((cj4)*(sj5));
IkReal x328=((cj6)*(r01));
IkReal x329=((IkReal(3.49656976694316))*(sj6));
IkReal x330=((IkReal(2.56864497645414))*(sj5));
IkReal x331=((cj6)*(r11));
IkReal x332=((IkReal(3.31834518489291))*(sj5));
IkReal x333=((r10)*(sj6));
IkReal x334=((r00)*(x326));
IkReal x335=((IkReal(4.51709969892178))*(sj4)*(sj6));
IkReal x336=((r00)*(sj5)*(sj6));
if( IKabs(((((IkReal(3.49656976694316))*(x327)*(x331)))+(((IkReal(-35.8548991688182))*(py)))+(((x330)*(x333)))+(((x330)*(x331)))+(((r12)*(x323)))+(((IkReal(-4.51709969892178))*(r02)*(x322)))+(((IkReal(-1.00000000000000))*(r01)*(x335)))+(((IkReal(-4.51709969892178))*(x327)*(x328)))+(((IkReal(-1.00000000000000))*(x328)*(x332)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x332)))+(((IkReal(-3.49656976694316))*(r10)*(x326)))+(((IkReal(4.51709969892178))*(x334)))+(((IkReal(3.49656976694316))*(r12)*(x322)))+(((r11)*(sj4)*(x329)))+(((IkReal(-4.51709969892178))*(r00)*(sj6)*(x327)))+(((IkReal(-1.00000000000000))*(r02)*(x324)))+(((r10)*(x327)*(x329)))+(((IkReal(46.3197261989518))*(px))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-35.8548991688182))*(px)))+(((r02)*(x323)))+(((sj6)*(x325)*(x327)))+(((IkReal(4.51709969892178))*(r12)*(x322)))+(((IkReal(3.49656976694316))*(x327)*(x328)))+(((r11)*(x335)))+(((r12)*(x324)))+(((x331)*(x332)))+(((r01)*(sj4)*(x329)))+(((IkReal(-1.00000000000000))*(x325)*(x326)))+(((x332)*(x333)))+(((r00)*(x327)*(x329)))+(((IkReal(4.51709969892178))*(x327)*(x331)))+(((IkReal(3.49656976694316))*(r02)*(x322)))+(((r00)*(sj6)*(x330)))+(((x328)*(x330)))+(((IkReal(-46.3197261989518))*(py)))+(((IkReal(-3.49656976694316))*(x334))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(3.49656976694316))*(x327)*(x331)))+(((IkReal(-35.8548991688182))*(py)))+(((x330)*(x333)))+(((x330)*(x331)))+(((r12)*(x323)))+(((IkReal(-4.51709969892178))*(r02)*(x322)))+(((IkReal(-1.00000000000000))*(r01)*(x335)))+(((IkReal(-4.51709969892178))*(x327)*(x328)))+(((IkReal(-1.00000000000000))*(x328)*(x332)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x332)))+(((IkReal(-3.49656976694316))*(r10)*(x326)))+(((IkReal(4.51709969892178))*(x334)))+(((IkReal(3.49656976694316))*(r12)*(x322)))+(((r11)*(sj4)*(x329)))+(((IkReal(-4.51709969892178))*(r00)*(sj6)*(x327)))+(((IkReal(-1.00000000000000))*(r02)*(x324)))+(((r10)*(x327)*(x329)))+(((IkReal(46.3197261989518))*(px)))))+IKsqr(((((IkReal(-35.8548991688182))*(px)))+(((r02)*(x323)))+(((sj6)*(x325)*(x327)))+(((IkReal(4.51709969892178))*(r12)*(x322)))+(((IkReal(3.49656976694316))*(x327)*(x328)))+(((r11)*(x335)))+(((r12)*(x324)))+(((x331)*(x332)))+(((r01)*(sj4)*(x329)))+(((IkReal(-1.00000000000000))*(x325)*(x326)))+(((x332)*(x333)))+(((r00)*(x327)*(x329)))+(((IkReal(4.51709969892178))*(x327)*(x331)))+(((IkReal(3.49656976694316))*(r02)*(x322)))+(((r00)*(sj6)*(x330)))+(((x328)*(x330)))+(((IkReal(-46.3197261989518))*(py)))+(((IkReal(-3.49656976694316))*(x334)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(3.49656976694316))*(x327)*(x331)))+(((IkReal(-35.8548991688182))*(py)))+(((x330)*(x333)))+(((x330)*(x331)))+(((r12)*(x323)))+(((IkReal(-4.51709969892178))*(r02)*(x322)))+(((IkReal(-1.00000000000000))*(r01)*(x335)))+(((IkReal(-4.51709969892178))*(x327)*(x328)))+(((IkReal(-1.00000000000000))*(x328)*(x332)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x332)))+(((IkReal(-3.49656976694316))*(r10)*(x326)))+(((IkReal(4.51709969892178))*(x334)))+(((IkReal(3.49656976694316))*(r12)*(x322)))+(((r11)*(sj4)*(x329)))+(((IkReal(-4.51709969892178))*(r00)*(sj6)*(x327)))+(((IkReal(-1.00000000000000))*(r02)*(x324)))+(((r10)*(x327)*(x329)))+(((IkReal(46.3197261989518))*(px)))), ((((IkReal(-35.8548991688182))*(px)))+(((r02)*(x323)))+(((sj6)*(x325)*(x327)))+(((IkReal(4.51709969892178))*(r12)*(x322)))+(((IkReal(3.49656976694316))*(x327)*(x328)))+(((r11)*(x335)))+(((r12)*(x324)))+(((x331)*(x332)))+(((r01)*(sj4)*(x329)))+(((IkReal(-1.00000000000000))*(x325)*(x326)))+(((x332)*(x333)))+(((r00)*(x327)*(x329)))+(((IkReal(4.51709969892178))*(x327)*(x331)))+(((IkReal(3.49656976694316))*(r02)*(x322)))+(((r00)*(sj6)*(x330)))+(((x328)*(x330)))+(((IkReal(-46.3197261989518))*(py)))+(((IkReal(-3.49656976694316))*(x334)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[2];
IkReal x337=IKsin(j1);
IkReal x338=IKcos(j1);
IkReal x339=((IkReal(0.0975200000000000))*(sj4));
IkReal x340=((sj5)*(sj6));
IkReal x341=((IkReal(0.0975200000000000))*(cj4));
IkReal x342=((cj6)*(sj5));
IkReal x343=((cj5)*(r02));
IkReal x344=((cj5)*(r12));
IkReal x345=((IkReal(0.0716400000000000))*(x342));
evalcond[0]=((((r01)*(x345)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x339)))+(((IkReal(0.0716400000000000))*(r00)*(x340)))+(((r01)*(sj6)*(x339)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x341)*(x342)))+(((x341)*(x343)))+(((IkReal(0.0135000000000000))*(x337)))+(((IkReal(0.0716400000000000))*(x343)))+(((IkReal(-0.0104500000000000))*(x338)))+(((r00)*(x340)*(x341))));
evalcond[1]=((((r11)*(x341)*(x342)))+(((r10)*(x340)*(x341)))+(((r11)*(sj6)*(x339)))+(((IkReal(-0.0135000000000000))*(x338)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x339)))+(((x341)*(x344)))+(((IkReal(0.0716400000000000))*(r10)*(x340)))+(((IkReal(0.0716400000000000))*(x344)))+(((r11)*(x345)))+(((IkReal(-0.0104500000000000))*(x337))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst18;
gconst18=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst19;
gconst19=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x346=((IkReal(1.00000000000000))*(cj6));
IkReal x347=((cj5)*(sj1));
IkReal x348=((cj1)*(cj5));
IkReal x349=((cj4)*(r12));
IkReal x350=((cj1)*(r10));
IkReal x351=((cj1)*(sj5));
IkReal x352=((cj4)*(sj5));
IkReal x353=((IkReal(1.00000000000000))*(r10)*(sj6));
IkReal x354=((r11)*(sj4)*(sj6));
if( IKabs(((gconst19)*(((((cj1)*(x354)))+(((x348)*(x349)))+(((sj6)*(x350)*(x352)))+(((cj4)*(cj6)*(r11)*(x351)))+(((r12)*(sj1)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x346)*(x347)))+(((IkReal(-1.00000000000000))*(x347)*(x353)))+(((IkReal(-1.00000000000000))*(sj4)*(x346)*(x350))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((r12)*(x351)))+(((IkReal(-1.00000000000000))*(sj1)*(x352)*(x353)))+(((IkReal(-1.00000000000000))*(x348)*(x353)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x346)*(x352)))+(((IkReal(-1.00000000000000))*(r11)*(x346)*(x348)))+(((IkReal(-1.00000000000000))*(x347)*(x349)))+(((IkReal(-1.00000000000000))*(sj1)*(x354)))+(((cj6)*(r10)*(sj1)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst19)*(((((cj1)*(x354)))+(((x348)*(x349)))+(((sj6)*(x350)*(x352)))+(((cj4)*(cj6)*(r11)*(x351)))+(((r12)*(sj1)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x346)*(x347)))+(((IkReal(-1.00000000000000))*(x347)*(x353)))+(((IkReal(-1.00000000000000))*(sj4)*(x346)*(x350)))))), ((gconst19)*(((((r12)*(x351)))+(((IkReal(-1.00000000000000))*(sj1)*(x352)*(x353)))+(((IkReal(-1.00000000000000))*(x348)*(x353)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x346)*(x352)))+(((IkReal(-1.00000000000000))*(r11)*(x346)*(x348)))+(((IkReal(-1.00000000000000))*(x347)*(x349)))+(((IkReal(-1.00000000000000))*(sj1)*(x354)))+(((cj6)*(r10)*(sj1)*(sj4)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x355=IKsin(j3);
IkReal x356=IKcos(j3);
IkReal x357=((IkReal(1.00000000000000))*(r00));
IkReal x358=((cj5)*(sj6));
IkReal x359=((cj6)*(sj4));
IkReal x360=((cj4)*(cj5));
IkReal x361=((cj4)*(sj5));
IkReal x362=((IkReal(1.00000000000000))*(r10));
IkReal x363=((sj4)*(sj6));
IkReal x364=((cj1)*(x355));
IkReal x365=((cj1)*(x356));
IkReal x366=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x367=((sj1)*(x355));
IkReal x368=((IkReal(1.00000000000000))*(sj1)*(x356));
evalcond[0]=((((IkReal(-1.00000000000000))*(x358)*(x362)))+(((IkReal(-1.00000000000000))*(r11)*(x366)))+(x365)+(x367)+(((r12)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x366)))+(((IkReal(-1.00000000000000))*(x357)*(x358)))+(((IkReal(-1.00000000000000))*(x368)))+(((r02)*(sj5)))+(x364));
evalcond[2]=((((IkReal(-1.00000000000000))*(x368)))+(x364)+(((r12)*(x360)))+(((r10)*(sj6)*(x361)))+(((IkReal(-1.00000000000000))*(x359)*(x362)))+(((r11)*(x363)))+(((cj6)*(r11)*(x361))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x365)))+(((IkReal(-1.00000000000000))*(x367)))+(((r01)*(x363)))+(((IkReal(-1.00000000000000))*(x357)*(x359)))+(((r00)*(sj6)*(x361)))+(((cj6)*(r01)*(x361)))+(((r02)*(x360))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x369=((IkReal(1.00000000000000))*(cj5));
IkReal x370=((cj6)*(sj1));
IkReal x371=((cj1)*(sj6));
IkReal x372=((sj1)*(sj5));
IkReal x373=((sj1)*(sj6));
IkReal x374=((cj1)*(cj6));
IkReal x375=((cj1)*(sj5));
if( IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(r00)*(x369)*(x371)))+(((r02)*(x375)))+(((IkReal(-1.00000000000000))*(r01)*(x369)*(x374)))+(((r12)*(x372)))+(((IkReal(-1.00000000000000))*(r11)*(x369)*(x370)))+(((IkReal(-1.00000000000000))*(r10)*(x369)*(x373))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((cj5)*(r00)*(x373)))+(((cj5)*(r01)*(x370)))+(((IkReal(-1.00000000000000))*(r02)*(x372)))+(((r12)*(x375)))+(((IkReal(-1.00000000000000))*(r11)*(x369)*(x374)))+(((IkReal(-1.00000000000000))*(r10)*(x369)*(x371))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst18)*(((((IkReal(-1.00000000000000))*(r00)*(x369)*(x371)))+(((r02)*(x375)))+(((IkReal(-1.00000000000000))*(r01)*(x369)*(x374)))+(((r12)*(x372)))+(((IkReal(-1.00000000000000))*(r11)*(x369)*(x370)))+(((IkReal(-1.00000000000000))*(r10)*(x369)*(x373)))))), ((gconst18)*(((((cj5)*(r00)*(x373)))+(((cj5)*(r01)*(x370)))+(((IkReal(-1.00000000000000))*(r02)*(x372)))+(((r12)*(x375)))+(((IkReal(-1.00000000000000))*(r11)*(x369)*(x374)))+(((IkReal(-1.00000000000000))*(r10)*(x369)*(x371)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x376=IKsin(j3);
IkReal x377=IKcos(j3);
IkReal x378=((IkReal(1.00000000000000))*(r00));
IkReal x379=((cj5)*(sj6));
IkReal x380=((cj6)*(sj4));
IkReal x381=((cj4)*(cj5));
IkReal x382=((cj4)*(sj5));
IkReal x383=((IkReal(1.00000000000000))*(r10));
IkReal x384=((sj4)*(sj6));
IkReal x385=((cj1)*(x376));
IkReal x386=((cj1)*(x377));
IkReal x387=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x388=((sj1)*(x376));
IkReal x389=((IkReal(1.00000000000000))*(sj1)*(x377));
evalcond[0]=((((IkReal(-1.00000000000000))*(x379)*(x383)))+(x386)+(x388)+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x387))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x378)*(x379)))+(((r02)*(sj5)))+(x385)+(((IkReal(-1.00000000000000))*(x389)))+(((IkReal(-1.00000000000000))*(r01)*(x387))));
evalcond[2]=((((r11)*(x384)))+(((IkReal(-1.00000000000000))*(x380)*(x383)))+(((cj6)*(r11)*(x382)))+(((r12)*(x381)))+(x385)+(((IkReal(-1.00000000000000))*(x389)))+(((r10)*(sj6)*(x382))));
evalcond[3]=((((r02)*(x381)))+(((IkReal(-1.00000000000000))*(x388)))+(((IkReal(-1.00000000000000))*(x386)))+(((r00)*(sj6)*(x382)))+(((IkReal(-1.00000000000000))*(x378)*(x380)))+(((cj6)*(r01)*(x382)))+(((r01)*(x384))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x390=((IkReal(27.0000000000000))*(sj6));
IkReal x391=((sj4)*(sj5));
IkReal x392=((cj4)*(r01));
IkReal x393=((IkReal(143.280000000000))*(sj2));
IkReal x394=((cj5)*(r12));
IkReal x395=((r11)*(sj5));
IkReal x396=((IkReal(27.0000000000000))*(cj6));
IkReal x397=((cj4)*(r00));
IkReal x398=((r10)*(sj5));
IkReal x399=((IkReal(195.040000000000))*(cj6)*(sj2));
IkReal x400=((cj5)*(r02)*(sj4));
IkReal x401=((IkReal(195.040000000000))*(sj2)*(sj6));
if( IKabs(((((IKabs(((((IkReal(-230.760000000000))*(cj2)*(sj2)))+(((IkReal(-251.660000000000))*(sj2))))) != 0)?((IkReal)1/(((((IkReal(-230.760000000000))*(cj2)*(sj2)))+(((IkReal(-251.660000000000))*(sj2)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj6)*(x393)*(x398)))+(((IkReal(-1.00000000000000))*(cj6)*(x393)*(x395)))+(((r10)*(sj4)*(x399)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(x401)))+(((IkReal(-195.040000000000))*(cj4)*(sj2)*(x394)))+(((r01)*(x391)*(x396)))+(((x396)*(x397)))+(((IkReal(2000.00000000000))*(py)*(sj2)))+(((IkReal(27.0000000000000))*(x400)))+(((IkReal(-1.00000000000000))*(cj4)*(x395)*(x399)))+(((IkReal(-1.00000000000000))*(x390)*(x392)))+(((IkReal(-1.00000000000000))*(cj4)*(x398)*(x401)))+(((r00)*(x390)*(x391)))+(((IkReal(-1.00000000000000))*(x393)*(x394))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*(((((cj6)*(r01)*(x391)))+(((r00)*(sj6)*(x391)))+(x400)+(((cj6)*(x397)))+(((IkReal(-1.00000000000000))*(sj6)*(x392))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((IkReal(-230.760000000000))*(cj2)*(sj2)))+(((IkReal(-251.660000000000))*(sj2))))) != 0)?((IkReal)1/(((((IkReal(-230.760000000000))*(cj2)*(sj2)))+(((IkReal(-251.660000000000))*(sj2)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj6)*(x393)*(x398)))+(((IkReal(-1.00000000000000))*(cj6)*(x393)*(x395)))+(((r10)*(sj4)*(x399)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(x401)))+(((IkReal(-195.040000000000))*(cj4)*(sj2)*(x394)))+(((r01)*(x391)*(x396)))+(((x396)*(x397)))+(((IkReal(2000.00000000000))*(py)*(sj2)))+(((IkReal(27.0000000000000))*(x400)))+(((IkReal(-1.00000000000000))*(cj4)*(x395)*(x399)))+(((IkReal(-1.00000000000000))*(x390)*(x392)))+(((IkReal(-1.00000000000000))*(cj4)*(x398)*(x401)))+(((r00)*(x390)*(x391)))+(((IkReal(-1.00000000000000))*(x393)*(x394)))))))+IKsqr(((((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*(((((cj6)*(r01)*(x391)))+(((r00)*(sj6)*(x391)))+(x400)+(((cj6)*(x397)))+(((IkReal(-1.00000000000000))*(sj6)*(x392)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(((((IkReal(-230.760000000000))*(cj2)*(sj2)))+(((IkReal(-251.660000000000))*(sj2))))) != 0)?((IkReal)1/(((((IkReal(-230.760000000000))*(cj2)*(sj2)))+(((IkReal(-251.660000000000))*(sj2)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj6)*(x393)*(x398)))+(((IkReal(-1.00000000000000))*(cj6)*(x393)*(x395)))+(((r10)*(sj4)*(x399)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(x401)))+(((IkReal(-195.040000000000))*(cj4)*(sj2)*(x394)))+(((r01)*(x391)*(x396)))+(((x396)*(x397)))+(((IkReal(2000.00000000000))*(py)*(sj2)))+(((IkReal(27.0000000000000))*(x400)))+(((IkReal(-1.00000000000000))*(cj4)*(x395)*(x399)))+(((IkReal(-1.00000000000000))*(x390)*(x392)))+(((IkReal(-1.00000000000000))*(cj4)*(x398)*(x401)))+(((r00)*(x390)*(x391)))+(((IkReal(-1.00000000000000))*(x393)*(x394)))))), ((((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*(((((cj6)*(r01)*(x391)))+(((r00)*(sj6)*(x391)))+(x400)+(((cj6)*(x397)))+(((IkReal(-1.00000000000000))*(sj6)*(x392)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x402=IKsin(j1);
IkReal x403=IKcos(j1);
IkReal x404=((IkReal(1.00000000000000))*(r00));
IkReal x405=((sj4)*(sj6));
IkReal x406=((cj4)*(cj6));
IkReal x407=((cj6)*(sj4));
IkReal x408=((IkReal(0.0975200000000000))*(r10));
IkReal x409=((IkReal(0.115380000000000))*(cj2));
IkReal x410=((IkReal(0.0975200000000000))*(r11));
IkReal x411=((IkReal(1.00000000000000))*(r10));
IkReal x412=((r01)*(sj5));
IkReal x413=((sj5)*(sj6));
IkReal x414=((cj4)*(sj6));
IkReal x415=((IkReal(0.0975200000000000))*(r00));
IkReal x416=((cj5)*(r02));
IkReal x417=((IkReal(0.0975200000000000))*(cj4));
IkReal x418=((cj5)*(r12));
IkReal x419=((IkReal(1.00000000000000))*(cj5)*(sj4));
IkReal x420=((IkReal(0.0716400000000000))*(cj6)*(sj5));
evalcond[0]=((((sj2)*(x403)))+(((IkReal(-1.00000000000000))*(sj4)*(x416)))+(((r01)*(x414)))+(((IkReal(-1.00000000000000))*(x404)*(x406)))+(((IkReal(-1.00000000000000))*(sj5)*(x404)*(x405)))+(((IkReal(-1.00000000000000))*(x407)*(x412))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x406)*(x411)))+(((r11)*(x414)))+(((sj2)*(x402)))+(((IkReal(-1.00000000000000))*(sj4)*(x418)))+(((IkReal(-1.00000000000000))*(sj5)*(x405)*(x411)))+(((IkReal(-1.00000000000000))*(r11)*(sj5)*(x407))));
evalcond[2]=((((x416)*(x417)))+(((IkReal(-0.125830000000000))*(x403)))+(((IkReal(-1.00000000000000))*(x403)*(x409)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0975200000000000))*(x406)*(x412)))+(((IkReal(0.0135000000000000))*(x402)))+(((IkReal(0.0716400000000000))*(r00)*(x413)))+(((cj4)*(x413)*(x415)))+(((IkReal(-1.00000000000000))*(x407)*(x415)))+(((IkReal(0.0975200000000000))*(r01)*(x405)))+(((IkReal(0.0716400000000000))*(cj6)*(x412)))+(((IkReal(0.0716400000000000))*(x416))));
evalcond[3]=((((sj5)*(x406)*(x410)))+(((IkReal(0.0716400000000000))*(r10)*(x413)))+(((x405)*(x410)))+(((IkReal(-0.125830000000000))*(x402)))+(((IkReal(-1.00000000000000))*(x402)*(x409)))+(((IkReal(-1.00000000000000))*(py)))+(((x417)*(x418)))+(((cj4)*(x408)*(x413)))+(((IkReal(-0.0135000000000000))*(x403)))+(((IkReal(-1.00000000000000))*(x407)*(x408)))+(((r11)*(x420)))+(((IkReal(0.0716400000000000))*(x418))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(sj2);
dummyeval[0]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj2;
dummyeval[1]=cj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj2;
dummyeval[1]=sj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x421=((cj5)*(r22));
IkReal x422=((IkReal(0.0975200000000000))*(cj4));
IkReal x423=((IkReal(1.00000000000000))*(cj5));
IkReal x424=((r20)*(sj6));
IkReal x425=((IkReal(1.00000000000000))*(sj4));
IkReal x426=((cj5)*(r12));
IkReal x427=((IkReal(0.0975200000000000))*(sj4));
IkReal x428=((r11)*(sj6));
IkReal x429=((cj6)*(sj5));
IkReal x430=((cj6)*(r20));
IkReal x431=((cj4)*(r21));
IkReal x432=((r01)*(sj6));
IkReal x433=((r21)*(sj6));
IkReal x434=((cj5)*(r02));
IkReal x435=((IkReal(1.00000000000000))*(cj4)*(cj6));
IkReal x436=((r10)*(sj5)*(sj6));
IkReal x437=((r00)*(sj5)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x423)*(x424)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x423))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x421)*(x425)))+(((sj6)*(x431)))+(((IkReal(-1.00000000000000))*(sj5)*(x424)*(x425)))+(((IkReal(-1.00000000000000))*(cj4)*(x430)))+(((IkReal(-1.00000000000000))*(r21)*(x425)*(x429))));
evalcond[3]=((((x429)*(x431)))+(((sj4)*(x433)))+(((cj4)*(x421)))+(((IkReal(-1.00000000000000))*(x425)*(x430)))+(((cj4)*(sj5)*(x424))));
evalcond[4]=((((cj4)*(x432)))+(((IkReal(-1.00000000000000))*(r00)*(x435)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x423)))+(((IkReal(-1.00000000000000))*(x425)*(x437)))+(((IkReal(-1.00000000000000))*(r01)*(x425)*(x429))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x435)))+(((cj4)*(x428)))+(((IkReal(-1.00000000000000))*(r11)*(x425)*(x429)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x423)))+(((IkReal(-1.00000000000000))*(x425)*(x436))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x427)*(x430)))+(((IkReal(0.0716400000000000))*(sj5)*(x424)))+(((IkReal(0.0716400000000000))*(x421)))+(((sj5)*(x422)*(x424)))+(((IkReal(-1.00000000000000))*(pz)))+(((r21)*(x422)*(x429)))+(((IkReal(0.0716400000000000))*(r21)*(x429)))+(((x427)*(x433)))+(((x421)*(x422))));
evalcond[7]=((((IkReal(0.0716400000000000))*(x434)))+(((IkReal(0.0716400000000000))*(x437)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x427)))+(((IkReal(0.0135000000000000))*(sj1)))+(((r01)*(x422)*(x429)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.241210000000000))*(cj1)))+(((IkReal(0.0716400000000000))*(r01)*(x429)))+(((x427)*(x432)))+(((x422)*(x437)))+(((x422)*(x434))));
evalcond[8]=((((IkReal(0.0716400000000000))*(x436)))+(((x427)*(x428)))+(((IkReal(-0.0135000000000000))*(cj1)))+(((IkReal(0.0716400000000000))*(x426)))+(((r11)*(x422)*(x429)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0716400000000000))*(r11)*(x429)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x427)))+(((IkReal(-0.241210000000000))*(sj1)))+(((x422)*(x426)))+(((x422)*(x436))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x438=((cj4)*(cj5));
IkReal x439=((cj1)*(cj6));
IkReal x440=((r10)*(sj4));
IkReal x441=((cj4)*(sj5));
IkReal x442=((IkReal(1.00000000000000))*(sj1));
IkReal x443=((IkReal(1.00000000000000))*(r11));
IkReal x444=((cj1)*(sj6));
IkReal x445=((IkReal(1.00000000000000))*(cj1)*(r12));
IkReal x446=((cj5)*(r10)*(sj6));
IkReal x447=((cj6)*(r11)*(x442));
if( IKabs(((gconst4)*(((((x439)*(x440)))+(((IkReal(-1.00000000000000))*(x438)*(x445)))+(((IkReal(-1.00000000000000))*(r10)*(x441)*(x444)))+(((IkReal(-1.00000000000000))*(x439)*(x441)*(x443)))+(((r12)*(sj1)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x447)))+(((IkReal(-1.00000000000000))*(sj4)*(x443)*(x444)))+(((IkReal(-1.00000000000000))*(x442)*(x446))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj5)*(r11)*(x439)))+(((IkReal(-1.00000000000000))*(sj5)*(x445)))+(((cj5)*(r10)*(x444)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6)*(x442)))+(((cj6)*(sj1)*(x440)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x441)*(x442)))+(((IkReal(-1.00000000000000))*(r12)*(x438)*(x442)))+(((IkReal(-1.00000000000000))*(x441)*(x447))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst4)*(((((x439)*(x440)))+(((IkReal(-1.00000000000000))*(x438)*(x445)))+(((IkReal(-1.00000000000000))*(r10)*(x441)*(x444)))+(((IkReal(-1.00000000000000))*(x439)*(x441)*(x443)))+(((r12)*(sj1)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x447)))+(((IkReal(-1.00000000000000))*(sj4)*(x443)*(x444)))+(((IkReal(-1.00000000000000))*(x442)*(x446)))))), ((gconst4)*(((((cj5)*(r11)*(x439)))+(((IkReal(-1.00000000000000))*(sj5)*(x445)))+(((cj5)*(r10)*(x444)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6)*(x442)))+(((cj6)*(sj1)*(x440)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x441)*(x442)))+(((IkReal(-1.00000000000000))*(r12)*(x438)*(x442)))+(((IkReal(-1.00000000000000))*(x441)*(x447)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x448=IKsin(j3);
IkReal x449=IKcos(j3);
IkReal x450=((IkReal(1.00000000000000))*(r00));
IkReal x451=((cj6)*(sj4));
IkReal x452=((cj4)*(cj5));
IkReal x453=((cj5)*(sj6));
IkReal x454=((cj4)*(sj5));
IkReal x455=((IkReal(1.00000000000000))*(r10));
IkReal x456=((sj4)*(sj6));
IkReal x457=((cj1)*(x449));
IkReal x458=((cj1)*(x448));
IkReal x459=((sj1)*(x449));
IkReal x460=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x461=((IkReal(1.00000000000000))*(sj1)*(x448));
evalcond[0]=((((IkReal(-1.00000000000000))*(x461)))+(x457)+(((IkReal(-1.00000000000000))*(r11)*(x460)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x453)*(x455))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x460)))+(((IkReal(-1.00000000000000))*(x459)))+(((IkReal(-1.00000000000000))*(x458)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x450)*(x453))));
evalcond[2]=((((r10)*(sj6)*(x454)))+(x458)+(x459)+(((r12)*(x452)))+(((cj6)*(r11)*(x454)))+(((r11)*(x456)))+(((IkReal(-1.00000000000000))*(x451)*(x455))));
evalcond[3]=((((r00)*(sj6)*(x454)))+(((IkReal(-1.00000000000000))*(x461)))+(((cj6)*(r01)*(x454)))+(x457)+(((IkReal(-1.00000000000000))*(x450)*(x451)))+(((r02)*(x452)))+(((r01)*(x456))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x462=((sj1)*(sj5));
IkReal x463=((IkReal(1.00000000000000))*(cj5));
IkReal x464=((cj6)*(r11));
IkReal x465=((r00)*(sj6));
IkReal x466=((cj1)*(sj5));
IkReal x467=((cj6)*(r01));
IkReal x468=((cj1)*(cj5));
IkReal x469=((r10)*(sj6));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(sj1)*(x463)*(x469)))+(((IkReal(-1.00000000000000))*(sj1)*(x463)*(x464)))+(((r12)*(x462)))+(((r02)*(x466)))+(((IkReal(-1.00000000000000))*(cj1)*(x463)*(x465)))+(((IkReal(-1.00000000000000))*(cj1)*(x463)*(x467))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((x468)*(x469)))+(((IkReal(-1.00000000000000))*(sj1)*(x463)*(x467)))+(((IkReal(-1.00000000000000))*(sj1)*(x463)*(x465)))+(((r02)*(x462)))+(((IkReal(-1.00000000000000))*(r12)*(x466)))+(((x464)*(x468))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(sj1)*(x463)*(x469)))+(((IkReal(-1.00000000000000))*(sj1)*(x463)*(x464)))+(((r12)*(x462)))+(((r02)*(x466)))+(((IkReal(-1.00000000000000))*(cj1)*(x463)*(x465)))+(((IkReal(-1.00000000000000))*(cj1)*(x463)*(x467)))))), ((gconst3)*(((((x468)*(x469)))+(((IkReal(-1.00000000000000))*(sj1)*(x463)*(x467)))+(((IkReal(-1.00000000000000))*(sj1)*(x463)*(x465)))+(((r02)*(x462)))+(((IkReal(-1.00000000000000))*(r12)*(x466)))+(((x464)*(x468)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x470=IKsin(j3);
IkReal x471=IKcos(j3);
IkReal x472=((IkReal(1.00000000000000))*(r00));
IkReal x473=((cj6)*(sj4));
IkReal x474=((cj4)*(cj5));
IkReal x475=((cj5)*(sj6));
IkReal x476=((cj4)*(sj5));
IkReal x477=((IkReal(1.00000000000000))*(r10));
IkReal x478=((sj4)*(sj6));
IkReal x479=((cj1)*(x471));
IkReal x480=((cj1)*(x470));
IkReal x481=((sj1)*(x471));
IkReal x482=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x483=((IkReal(1.00000000000000))*(sj1)*(x470));
evalcond[0]=((((IkReal(-1.00000000000000))*(x483)))+(((IkReal(-1.00000000000000))*(x475)*(x477)))+(x479)+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x482))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x472)*(x475)))+(((IkReal(-1.00000000000000))*(x481)))+(((IkReal(-1.00000000000000))*(x480)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x482))));
evalcond[2]=((((r10)*(sj6)*(x476)))+(((IkReal(-1.00000000000000))*(x473)*(x477)))+(((r11)*(x478)))+(((cj6)*(r11)*(x476)))+(x481)+(x480)+(((r12)*(x474))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x483)))+(((cj6)*(r01)*(x476)))+(((IkReal(-1.00000000000000))*(x472)*(x473)))+(((r02)*(x474)))+(x479)+(((r00)*(sj6)*(x476)))+(((r01)*(x478))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x484=((cj5)*(r22));
IkReal x485=((IkReal(0.0975200000000000))*(cj4));
IkReal x486=((IkReal(1.00000000000000))*(cj5));
IkReal x487=((r20)*(sj6));
IkReal x488=((IkReal(1.00000000000000))*(sj4));
IkReal x489=((cj5)*(r12));
IkReal x490=((IkReal(0.0975200000000000))*(sj4));
IkReal x491=((r11)*(sj6));
IkReal x492=((cj6)*(sj5));
IkReal x493=((cj6)*(r20));
IkReal x494=((cj4)*(r21));
IkReal x495=((r01)*(sj6));
IkReal x496=((r21)*(sj6));
IkReal x497=((cj5)*(r02));
IkReal x498=((IkReal(1.00000000000000))*(cj4)*(cj6));
IkReal x499=((r10)*(sj5)*(sj6));
IkReal x500=((r00)*(sj5)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x486)*(x487)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x486))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x484)*(x488)))+(((IkReal(-1.00000000000000))*(sj5)*(x487)*(x488)))+(((IkReal(-1.00000000000000))*(cj4)*(x493)))+(((sj6)*(x494)))+(((IkReal(-1.00000000000000))*(r21)*(x488)*(x492))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x488)*(x493)))+(((sj4)*(x496)))+(((cj4)*(x484)))+(((cj4)*(sj5)*(x487)))+(((x492)*(x494))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x498)))+(((IkReal(-1.00000000000000))*(x488)*(x500)))+(((IkReal(-1.00000000000000))*(r01)*(x488)*(x492)))+(((cj4)*(x495)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x486))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x488)*(x499)))+(((IkReal(-1.00000000000000))*(r10)*(x498)))+(((IkReal(-1.00000000000000))*(r11)*(x488)*(x492)))+(((cj4)*(x491)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x486))));
evalcond[6]=((((x484)*(x485)))+(((IkReal(0.0716400000000000))*(x484)))+(((x490)*(x496)))+(((IkReal(0.0716400000000000))*(r21)*(x492)))+(((IkReal(-1.00000000000000))*(x490)*(x493)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(sj5)*(x487)))+(((sj5)*(x485)*(x487)))+(((r21)*(x485)*(x492))));
evalcond[7]=((((IkReal(0.0716400000000000))*(x497)))+(((IkReal(0.0716400000000000))*(r01)*(x492)))+(((x490)*(x495)))+(((IkReal(0.0135000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(px)))+(((x485)*(x500)))+(((IkReal(-0.0104500000000000))*(cj1)))+(((IkReal(0.0716400000000000))*(x500)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x490)))+(((x485)*(x497)))+(((r01)*(x485)*(x492))));
evalcond[8]=((((x485)*(x489)))+(((IkReal(0.0716400000000000))*(x499)))+(((IkReal(-0.0135000000000000))*(cj1)))+(((r11)*(x485)*(x492)))+(((IkReal(0.0716400000000000))*(x489)))+(((x490)*(x491)))+(((IkReal(0.0716400000000000))*(r11)*(x492)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x490)))+(((IkReal(-0.0104500000000000))*(sj1)))+(((x485)*(x499))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x501=((IkReal(1.00000000000000))*(cj6));
IkReal x502=((cj5)*(sj1));
IkReal x503=((cj1)*(cj5));
IkReal x504=((cj4)*(r12));
IkReal x505=((r10)*(sj4));
IkReal x506=((r10)*(sj6));
IkReal x507=((cj1)*(sj5));
IkReal x508=((cj4)*(r11));
IkReal x509=((IkReal(1.00000000000000))*(sj1));
IkReal x510=((sj1)*(sj5));
IkReal x511=((r11)*(sj4)*(sj6));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(cj1)*(x501)*(x505)))+(((cj4)*(x506)*(x507)))+(((cj6)*(x507)*(x508)))+(((IkReal(-1.00000000000000))*(r11)*(x501)*(x502)))+(((cj1)*(x511)))+(((x503)*(x504)))+(((IkReal(-1.00000000000000))*(x502)*(x506)))+(((r12)*(x510))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(x501)*(x508)*(x510)))+(((IkReal(-1.00000000000000))*(cj4)*(sj5)*(x506)*(x509)))+(((IkReal(-1.00000000000000))*(r11)*(x501)*(x503)))+(((r12)*(x507)))+(((cj6)*(sj1)*(x505)))+(((IkReal(-1.00000000000000))*(x502)*(x504)))+(((IkReal(-1.00000000000000))*(x509)*(x511)))+(((IkReal(-1.00000000000000))*(x503)*(x506))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(cj1)*(x501)*(x505)))+(((cj4)*(x506)*(x507)))+(((cj6)*(x507)*(x508)))+(((IkReal(-1.00000000000000))*(r11)*(x501)*(x502)))+(((cj1)*(x511)))+(((x503)*(x504)))+(((IkReal(-1.00000000000000))*(x502)*(x506)))+(((r12)*(x510)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(x501)*(x508)*(x510)))+(((IkReal(-1.00000000000000))*(cj4)*(sj5)*(x506)*(x509)))+(((IkReal(-1.00000000000000))*(r11)*(x501)*(x503)))+(((r12)*(x507)))+(((cj6)*(sj1)*(x505)))+(((IkReal(-1.00000000000000))*(x502)*(x504)))+(((IkReal(-1.00000000000000))*(x509)*(x511)))+(((IkReal(-1.00000000000000))*(x503)*(x506)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x512=IKsin(j3);
IkReal x513=IKcos(j3);
IkReal x514=((IkReal(1.00000000000000))*(r00));
IkReal x515=((cj5)*(sj6));
IkReal x516=((cj6)*(sj4));
IkReal x517=((cj4)*(cj5));
IkReal x518=((cj4)*(sj5));
IkReal x519=((IkReal(1.00000000000000))*(r10));
IkReal x520=((sj4)*(sj6));
IkReal x521=((cj1)*(x512));
IkReal x522=((cj1)*(x513));
IkReal x523=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x524=((sj1)*(x512));
IkReal x525=((IkReal(1.00000000000000))*(sj1)*(x513));
evalcond[0]=((((IkReal(-1.00000000000000))*(x515)*(x519)))+(x522)+(x524)+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x523))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x514)*(x515)))+(((IkReal(-1.00000000000000))*(r01)*(x523)))+(((IkReal(-1.00000000000000))*(x525)))+(((r02)*(sj5)))+(x521));
evalcond[2]=((((r11)*(x520)))+(((IkReal(-1.00000000000000))*(x525)))+(((r10)*(sj6)*(x518)))+(((IkReal(-1.00000000000000))*(x516)*(x519)))+(x521)+(((cj6)*(r11)*(x518)))+(((r12)*(x517))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x514)*(x516)))+(((IkReal(-1.00000000000000))*(x524)))+(((IkReal(-1.00000000000000))*(x522)))+(((r02)*(x517)))+(((cj6)*(r01)*(x518)))+(((r00)*(sj6)*(x518)))+(((r01)*(x520))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x526=((IkReal(1.00000000000000))*(cj5));
IkReal x527=((cj6)*(sj1));
IkReal x528=((cj1)*(sj6));
IkReal x529=((sj1)*(sj5));
IkReal x530=((sj1)*(sj6));
IkReal x531=((cj1)*(cj6));
IkReal x532=((cj1)*(sj5));
if( IKabs(((gconst5)*(((((r02)*(x532)))+(((IkReal(-1.00000000000000))*(r11)*(x526)*(x527)))+(((IkReal(-1.00000000000000))*(r10)*(x526)*(x530)))+(((r12)*(x529)))+(((IkReal(-1.00000000000000))*(r00)*(x526)*(x528)))+(((IkReal(-1.00000000000000))*(r01)*(x526)*(x531))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r02)*(x529)))+(((IkReal(-1.00000000000000))*(r11)*(x526)*(x531)))+(((IkReal(-1.00000000000000))*(r10)*(x526)*(x528)))+(((r12)*(x532)))+(((cj5)*(r01)*(x527)))+(((cj5)*(r00)*(x530))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst5)*(((((r02)*(x532)))+(((IkReal(-1.00000000000000))*(r11)*(x526)*(x527)))+(((IkReal(-1.00000000000000))*(r10)*(x526)*(x530)))+(((r12)*(x529)))+(((IkReal(-1.00000000000000))*(r00)*(x526)*(x528)))+(((IkReal(-1.00000000000000))*(r01)*(x526)*(x531)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(r02)*(x529)))+(((IkReal(-1.00000000000000))*(r11)*(x526)*(x531)))+(((IkReal(-1.00000000000000))*(r10)*(x526)*(x528)))+(((r12)*(x532)))+(((cj5)*(r01)*(x527)))+(((cj5)*(r00)*(x530)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x533=IKsin(j3);
IkReal x534=IKcos(j3);
IkReal x535=((IkReal(1.00000000000000))*(r00));
IkReal x536=((cj5)*(sj6));
IkReal x537=((cj6)*(sj4));
IkReal x538=((cj4)*(cj5));
IkReal x539=((cj4)*(sj5));
IkReal x540=((IkReal(1.00000000000000))*(r10));
IkReal x541=((sj4)*(sj6));
IkReal x542=((cj1)*(x533));
IkReal x543=((cj1)*(x534));
IkReal x544=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x545=((sj1)*(x533));
IkReal x546=((IkReal(1.00000000000000))*(sj1)*(x534));
evalcond[0]=((x545)+(x543)+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x536)*(x540)))+(((IkReal(-1.00000000000000))*(r11)*(x544))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x546)))+(((IkReal(-1.00000000000000))*(r01)*(x544)))+(((r02)*(sj5)))+(x542)+(((IkReal(-1.00000000000000))*(x535)*(x536))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x537)*(x540)))+(((cj6)*(r11)*(x539)))+(((r11)*(x541)))+(((r10)*(sj6)*(x539)))+(((r12)*(x538)))+(((IkReal(-1.00000000000000))*(x546)))+(x542));
evalcond[3]=((((r00)*(sj6)*(x539)))+(((r02)*(x538)))+(((cj6)*(r01)*(x539)))+(((IkReal(-1.00000000000000))*(x543)))+(((IkReal(-1.00000000000000))*(x545)))+(((IkReal(-1.00000000000000))*(x535)*(x537)))+(((r01)*(x541))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x547=((IkReal(1.00000000000000))*(cj6));
IkReal x548=((cj4)*(r00));
IkReal x549=((cj5)*(r22));
IkReal x550=((IkReal(0.0975200000000000))*(cj4));
IkReal x551=((IkReal(1.00000000000000))*(sj4));
IkReal x552=((cj5)*(r02));
IkReal x553=((cj5)*(r12));
IkReal x554=((r11)*(sj4));
IkReal x555=((IkReal(0.0975200000000000))*(sj6));
IkReal x556=((sj4)*(sj5));
IkReal x557=((cj6)*(sj5));
IkReal x558=((cj4)*(sj6));
IkReal x559=((sj5)*(sj6));
IkReal x560=((IkReal(0.0716400000000000))*(x557));
IkReal x561=((r10)*(x559));
IkReal x562=((IkReal(0.0975200000000000))*(cj6)*(sj4));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((cj2)+(((IkReal(-1.00000000000000))*(r20)*(x551)*(x559)))+(((IkReal(-1.00000000000000))*(r21)*(x547)*(x556)))+(((IkReal(-1.00000000000000))*(x549)*(x551)))+(((r21)*(x558)))+(((IkReal(-1.00000000000000))*(cj4)*(r20)*(x547))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x547)*(x556)))+(sj2)+(((IkReal(-1.00000000000000))*(x551)*(x552)))+(((IkReal(-1.00000000000000))*(r00)*(x551)*(x559)))+(((IkReal(-1.00000000000000))*(x547)*(x548)))+(((r01)*(x558))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r10)*(x547)))+(((IkReal(-1.00000000000000))*(x551)*(x553)))+(((r11)*(x558)))+(((IkReal(-1.00000000000000))*(sj5)*(x547)*(x554)))+(((IkReal(-1.00000000000000))*(x551)*(x561))));
evalcond[4]=((((IkReal(0.0716400000000000))*(r20)*(x559)))+(((r21)*(sj4)*(x555)))+(((r21)*(x560)))+(((IkReal(-1.00000000000000))*(pz)))+(((x549)*(x550)))+(((r21)*(x550)*(x557)))+(((r20)*(x550)*(x559)))+(((IkReal(0.115380000000000))*(sj2)))+(((IkReal(0.0716400000000000))*(x549)))+(((IkReal(-1.00000000000000))*(r20)*(x562))));
evalcond[5]=((IkReal(-0.125830000000000))+(((IkReal(0.0716400000000000))*(x552)))+(((r01)*(x560)))+(((sj5)*(x548)*(x555)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x550)*(x557)))+(((IkReal(-0.115380000000000))*(cj2)))+(((x550)*(x552)))+(((IkReal(0.0716400000000000))*(r00)*(x559)))+(((r01)*(sj4)*(x555)))+(((IkReal(-1.00000000000000))*(r00)*(x562))));
evalcond[6]=((IkReal(-0.0135000000000000))+(((IkReal(0.0716400000000000))*(x553)))+(((x550)*(x561)))+(((x554)*(x555)))+(((r11)*(x550)*(x557)))+(((IkReal(0.0716400000000000))*(x561)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(r10)*(x562)))+(((x550)*(x553)))+(((r11)*(x560))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x563=((IkReal(1.00000000000000))*(sj5));
IkReal x564=((r10)*(sj6));
IkReal x565=((cj6)*(r11));
if( IKabs(((((cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(cj4)*(x563)*(x565)))+(((IkReal(-1.00000000000000))*(cj4)*(x563)*(x564)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r12)*(x563)))+(((cj5)*(x564)))+(((cj5)*(x565))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(cj4)*(x563)*(x565)))+(((IkReal(-1.00000000000000))*(cj4)*(x563)*(x564)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6)))))+IKsqr(((((IkReal(-1.00000000000000))*(r12)*(x563)))+(((cj5)*(x564)))+(((cj5)*(x565)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(cj4)*(x563)*(x565)))+(((IkReal(-1.00000000000000))*(cj4)*(x563)*(x564)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6)))), ((((IkReal(-1.00000000000000))*(r12)*(x563)))+(((cj5)*(x564)))+(((cj5)*(x565)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x566=IKsin(j3);
IkReal x567=IKcos(j3);
IkReal x568=((IkReal(1.00000000000000))*(r00));
IkReal x569=((cj5)*(sj6));
IkReal x570=((cj6)*(sj4));
IkReal x571=((IkReal(1.00000000000000))*(r10));
IkReal x572=((cj4)*(cj5));
IkReal x573=((IkReal(1.00000000000000))*(r20));
IkReal x574=((sj4)*(sj6));
IkReal x575=((cj4)*(sj5)*(sj6));
IkReal x576=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x577=((cj4)*(cj6)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(x569)*(x573)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r21)*(x576)))+(((sj2)*(x566))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x569)*(x571)))+(((IkReal(-1.00000000000000))*(r11)*(x576)))+(x567)+(((r12)*(sj5))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x576)))+(((IkReal(-1.00000000000000))*(cj2)*(x566)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x568)*(x569))));
evalcond[3]=((((r20)*(x575)))+(((IkReal(-1.00000000000000))*(x570)*(x573)))+(((r21)*(x577)))+(((r21)*(x574)))+(((r22)*(x572)))+(((IkReal(-1.00000000000000))*(sj2)*(x567))));
evalcond[4]=((((r12)*(x572)))+(((IkReal(-1.00000000000000))*(x570)*(x571)))+(x566)+(((r10)*(x575)))+(((r11)*(x574)))+(((r11)*(x577))));
evalcond[5]=((((r01)*(x574)))+(((r01)*(x577)))+(((r00)*(x575)))+(((r02)*(x572)))+(((cj2)*(x567)))+(((IkReal(-1.00000000000000))*(x568)*(x570))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x578=((IkReal(1.00000000000000))*(cj6));
IkReal x579=((cj4)*(r00));
IkReal x580=((cj5)*(r22));
IkReal x581=((IkReal(0.0975200000000000))*(cj4));
IkReal x582=((IkReal(1.00000000000000))*(sj4));
IkReal x583=((cj5)*(r02));
IkReal x584=((cj5)*(r12));
IkReal x585=((r11)*(sj4));
IkReal x586=((IkReal(0.0975200000000000))*(sj6));
IkReal x587=((sj4)*(sj5));
IkReal x588=((cj6)*(sj5));
IkReal x589=((cj4)*(sj6));
IkReal x590=((sj5)*(sj6));
IkReal x591=((IkReal(0.0716400000000000))*(x588));
IkReal x592=((r10)*(x590));
IkReal x593=((IkReal(0.0975200000000000))*(cj6)*(sj4));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x580)*(x582)))+(((IkReal(-1.00000000000000))*(r21)*(x578)*(x587)))+(cj2)+(((IkReal(-1.00000000000000))*(cj4)*(r20)*(x578)))+(((r21)*(x589)))+(((IkReal(-1.00000000000000))*(r20)*(x582)*(x590))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x578)*(x579)))+(((IkReal(-1.00000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x582)*(x583)))+(((IkReal(-1.00000000000000))*(r00)*(x582)*(x590)))+(((IkReal(-1.00000000000000))*(r01)*(x578)*(x587)))+(((r01)*(x589))));
evalcond[3]=((((r11)*(x589)))+(((IkReal(-1.00000000000000))*(x582)*(x584)))+(((IkReal(-1.00000000000000))*(sj5)*(x578)*(x585)))+(((IkReal(-1.00000000000000))*(x582)*(x592)))+(((IkReal(-1.00000000000000))*(cj4)*(r10)*(x578))));
evalcond[4]=((((x580)*(x581)))+(((IkReal(-1.00000000000000))*(r20)*(x593)))+(((r21)*(x581)*(x588)))+(((IkReal(-1.00000000000000))*(pz)))+(((r21)*(x591)))+(((r20)*(x581)*(x590)))+(((IkReal(0.0716400000000000))*(r20)*(x590)))+(((IkReal(0.115380000000000))*(sj2)))+(((IkReal(0.0716400000000000))*(x580)))+(((r21)*(sj4)*(x586))));
evalcond[5]=((IkReal(0.125830000000000))+(((x581)*(x583)))+(((IkReal(-1.00000000000000))*(r00)*(x593)))+(((r01)*(sj4)*(x586)))+(((r01)*(x591)))+(((r01)*(x581)*(x588)))+(((IkReal(-1.00000000000000))*(px)))+(((sj5)*(x579)*(x586)))+(((IkReal(0.0716400000000000))*(r00)*(x590)))+(((IkReal(0.0716400000000000))*(x583)))+(((IkReal(0.115380000000000))*(cj2))));
evalcond[6]=((IkReal(0.0135000000000000))+(((x581)*(x584)))+(((r11)*(x581)*(x588)))+(((IkReal(0.0716400000000000))*(x592)))+(((x585)*(x586)))+(((IkReal(-1.00000000000000))*(py)))+(((x581)*(x592)))+(((r11)*(x591)))+(((IkReal(-1.00000000000000))*(r10)*(x593)))+(((IkReal(0.0716400000000000))*(x584))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x594=((cj4)*(sj5));
IkReal x595=((cj6)*(r11));
IkReal x596=((r10)*(sj6));
IkReal x597=((IkReal(1.00000000000000))*(cj5));
if( IKabs(((((x594)*(x595)))+(((x594)*(x596)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj4)))+(((cj4)*(cj5)*(r12)))+(((r11)*(sj4)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x596)*(x597)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x595)*(x597))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x594)*(x595)))+(((x594)*(x596)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj4)))+(((cj4)*(cj5)*(r12)))+(((r11)*(sj4)*(sj6)))))+IKsqr(((((IkReal(-1.00000000000000))*(x596)*(x597)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x595)*(x597)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((x594)*(x595)))+(((x594)*(x596)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj4)))+(((cj4)*(cj5)*(r12)))+(((r11)*(sj4)*(sj6)))), ((((IkReal(-1.00000000000000))*(x596)*(x597)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x595)*(x597)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x598=IKsin(j3);
IkReal x599=IKcos(j3);
IkReal x600=((IkReal(1.00000000000000))*(r00));
IkReal x601=((cj5)*(sj6));
IkReal x602=((cj6)*(sj4));
IkReal x603=((IkReal(1.00000000000000))*(r10));
IkReal x604=((cj4)*(cj5));
IkReal x605=((IkReal(1.00000000000000))*(r20));
IkReal x606=((sj4)*(sj6));
IkReal x607=((IkReal(1.00000000000000))*(x599));
IkReal x608=((cj4)*(sj5)*(sj6));
IkReal x609=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x610=((cj4)*(cj6)*(sj5));
evalcond[0]=((((r22)*(sj5)))+(((sj2)*(x598)))+(((IkReal(-1.00000000000000))*(r21)*(x609)))+(((IkReal(-1.00000000000000))*(x601)*(x605))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x609)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x607)))+(((IkReal(-1.00000000000000))*(x601)*(x603))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x609)))+(((r02)*(sj5)))+(((cj2)*(x598)))+(((IkReal(-1.00000000000000))*(x600)*(x601))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x602)*(x605)))+(((r20)*(x608)))+(((r21)*(x606)))+(((IkReal(-1.00000000000000))*(sj2)*(x607)))+(((r21)*(x610)))+(((r22)*(x604))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x602)*(x603)))+(((r11)*(x610)))+(((r12)*(x604)))+(((IkReal(-1.00000000000000))*(x598)))+(((r11)*(x606)))+(((r10)*(x608))));
evalcond[5]=((((r00)*(x608)))+(((r01)*(x610)))+(((IkReal(-1.00000000000000))*(cj2)*(x607)))+(((IkReal(-1.00000000000000))*(x600)*(x602)))+(((r02)*(x604)))+(((r01)*(x606))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x611=((IkReal(1.00000000000000))*(cj6));
IkReal x612=((cj4)*(r00));
IkReal x613=((cj5)*(r22));
IkReal x614=((IkReal(0.0975200000000000))*(cj4));
IkReal x615=((IkReal(1.00000000000000))*(sj4));
IkReal x616=((cj5)*(r02));
IkReal x617=((cj5)*(r12));
IkReal x618=((r11)*(sj4));
IkReal x619=((IkReal(0.0975200000000000))*(sj6));
IkReal x620=((sj4)*(sj5));
IkReal x621=((cj6)*(sj5));
IkReal x622=((cj4)*(sj6));
IkReal x623=((sj5)*(sj6));
IkReal x624=((IkReal(0.0716400000000000))*(x621));
IkReal x625=((r10)*(x623));
IkReal x626=((IkReal(0.0975200000000000))*(cj6)*(sj4));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((r21)*(x622)))+(cj2)+(((IkReal(-1.00000000000000))*(cj4)*(r20)*(x611)))+(((IkReal(-1.00000000000000))*(x613)*(x615)))+(((IkReal(-1.00000000000000))*(r20)*(x615)*(x623)))+(((IkReal(-1.00000000000000))*(r21)*(x611)*(x620))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x611)*(x612)))+(((IkReal(-1.00000000000000))*(r01)*(x611)*(x620)))+(((IkReal(-1.00000000000000))*(r00)*(x615)*(x623)))+(((r01)*(x622)))+(((IkReal(-1.00000000000000))*(x615)*(x616))));
evalcond[3]=((sj2)+(((IkReal(-1.00000000000000))*(cj4)*(r10)*(x611)))+(((IkReal(-1.00000000000000))*(sj5)*(x611)*(x618)))+(((IkReal(-1.00000000000000))*(x615)*(x617)))+(((IkReal(-1.00000000000000))*(x615)*(x625)))+(((r11)*(x622))));
evalcond[4]=((((r21)*(x624)))+(((IkReal(0.0716400000000000))*(x613)))+(((r21)*(x614)*(x621)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(r20)*(x626)))+(((x613)*(x614)))+(((r21)*(sj4)*(x619)))+(((IkReal(0.115380000000000))*(sj2)))+(((r20)*(x614)*(x623)))+(((IkReal(0.0716400000000000))*(r20)*(x623))));
evalcond[5]=((IkReal(0.0135000000000000))+(((r01)*(sj4)*(x619)))+(((IkReal(0.0716400000000000))*(x616)))+(((r01)*(x614)*(x621)))+(((IkReal(-1.00000000000000))*(r00)*(x626)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x624)))+(((x614)*(x616)))+(((sj5)*(x612)*(x619)))+(((IkReal(0.0716400000000000))*(r00)*(x623))));
evalcond[6]=((IkReal(-0.125830000000000))+(((IkReal(0.0716400000000000))*(x625)))+(((x614)*(x625)))+(((IkReal(0.0716400000000000))*(x617)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.115380000000000))*(cj2)))+(((x614)*(x617)))+(((x618)*(x619)))+(((IkReal(-1.00000000000000))*(r10)*(x626)))+(((r11)*(x614)*(x621)))+(((r11)*(x624))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x627=((r00)*(sj6));
IkReal x628=((cj4)*(sj5));
IkReal x629=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r00)*(sj4)*(x629)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((x627)*(x628)))+(((cj6)*(r01)*(x628))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj5)*(x627)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x629)))+(((r02)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r00)*(sj4)*(x629)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((x627)*(x628)))+(((cj6)*(r01)*(x628)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj5)*(x627)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x629)))+(((r02)*(sj5)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r00)*(sj4)*(x629)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((x627)*(x628)))+(((cj6)*(r01)*(x628)))), ((((IkReal(-1.00000000000000))*(cj5)*(x627)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x629)))+(((r02)*(sj5)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x630=IKsin(j3);
IkReal x631=IKcos(j3);
IkReal x632=((IkReal(1.00000000000000))*(r00));
IkReal x633=((cj5)*(sj6));
IkReal x634=((cj6)*(sj4));
IkReal x635=((IkReal(1.00000000000000))*(r10));
IkReal x636=((cj4)*(cj5));
IkReal x637=((IkReal(1.00000000000000))*(r20));
IkReal x638=((sj4)*(sj6));
IkReal x639=((IkReal(1.00000000000000))*(x631));
IkReal x640=((cj4)*(sj5)*(sj6));
IkReal x641=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x642=((cj4)*(cj6)*(sj5));
IkReal x643=((IkReal(1.00000000000000))*(x630));
evalcond[0]=((((IkReal(-1.00000000000000))*(x633)*(x637)))+(((r22)*(sj5)))+(((sj2)*(x630)))+(((IkReal(-1.00000000000000))*(r21)*(x641))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x633)*(x635)))+(((IkReal(-1.00000000000000))*(r11)*(x641)))+(((IkReal(-1.00000000000000))*(cj2)*(x643)))+(((r12)*(sj5))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x641)))+(((IkReal(-1.00000000000000))*(x639)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x632)*(x633))));
evalcond[3]=((((r21)*(x638)))+(((r20)*(x640)))+(((r22)*(x636)))+(((IkReal(-1.00000000000000))*(x634)*(x637)))+(((r21)*(x642)))+(((IkReal(-1.00000000000000))*(sj2)*(x639))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x634)*(x635)))+(((r10)*(x640)))+(((r12)*(x636)))+(((r11)*(x642)))+(((cj2)*(x631)))+(((r11)*(x638))));
evalcond[5]=((((r02)*(x636)))+(((IkReal(-1.00000000000000))*(x643)))+(((r01)*(x638)))+(((r01)*(x642)))+(((r00)*(x640)))+(((IkReal(-1.00000000000000))*(x632)*(x634))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x644=((IkReal(1.00000000000000))*(cj6));
IkReal x645=((cj4)*(r00));
IkReal x646=((cj5)*(r22));
IkReal x647=((IkReal(0.0975200000000000))*(cj4));
IkReal x648=((IkReal(1.00000000000000))*(sj4));
IkReal x649=((cj5)*(r02));
IkReal x650=((cj5)*(r12));
IkReal x651=((r11)*(sj4));
IkReal x652=((IkReal(0.0975200000000000))*(sj6));
IkReal x653=((sj4)*(sj5));
IkReal x654=((cj6)*(sj5));
IkReal x655=((cj4)*(sj6));
IkReal x656=((sj5)*(sj6));
IkReal x657=((IkReal(0.0716400000000000))*(x654));
IkReal x658=((r10)*(x656));
IkReal x659=((IkReal(0.0975200000000000))*(cj6)*(sj4));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x648)*(x656)))+(cj2)+(((IkReal(-1.00000000000000))*(x646)*(x648)))+(((IkReal(-1.00000000000000))*(cj4)*(r20)*(x644)))+(((IkReal(-1.00000000000000))*(r21)*(x644)*(x653)))+(((r21)*(x655))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x648)*(x656)))+(((IkReal(-1.00000000000000))*(r01)*(x644)*(x653)))+(((IkReal(-1.00000000000000))*(x648)*(x649)))+(((IkReal(-1.00000000000000))*(x644)*(x645)))+(((r01)*(x655))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj4)*(r10)*(x644)))+(((IkReal(-1.00000000000000))*(sj5)*(x644)*(x651)))+(((r11)*(x655)))+(((IkReal(-1.00000000000000))*(x648)*(x658)))+(((IkReal(-1.00000000000000))*(x648)*(x650))));
evalcond[4]=((((r20)*(x647)*(x656)))+(((IkReal(0.0716400000000000))*(x646)))+(((r21)*(x647)*(x654)))+(((IkReal(-1.00000000000000))*(pz)))+(((r21)*(sj4)*(x652)))+(((IkReal(0.0716400000000000))*(r20)*(x656)))+(((IkReal(0.115380000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(r20)*(x659)))+(((x646)*(x647)))+(((r21)*(x657))));
evalcond[5]=((IkReal(-0.0135000000000000))+(((IkReal(0.0716400000000000))*(r00)*(x656)))+(((sj5)*(x645)*(x652)))+(((IkReal(0.0716400000000000))*(x649)))+(((r01)*(x647)*(x654)))+(((IkReal(-1.00000000000000))*(r00)*(x659)))+(((r01)*(sj4)*(x652)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x657)))+(((x647)*(x649))));
evalcond[6]=((IkReal(0.125830000000000))+(((IkReal(0.0716400000000000))*(x650)))+(((IkReal(0.0716400000000000))*(x658)))+(((x647)*(x658)))+(((x647)*(x650)))+(((x651)*(x652)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x657)))+(((IkReal(-1.00000000000000))*(r10)*(x659)))+(((r11)*(x647)*(x654)))+(((IkReal(0.115380000000000))*(cj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x660=((r00)*(sj6));
IkReal x661=((cj6)*(r01));
IkReal x662=((IkReal(1.00000000000000))*(r02));
IkReal x663=((IkReal(1.00000000000000))*(cj4)*(sj5));
if( IKabs(((((cj6)*(r00)*(sj4)))+(((IkReal(-1.00000000000000))*(x660)*(x663)))+(((IkReal(-1.00000000000000))*(x661)*(x663)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x662))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj5)*(x662)))+(((cj5)*(x660)))+(((cj5)*(x661))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj6)*(r00)*(sj4)))+(((IkReal(-1.00000000000000))*(x660)*(x663)))+(((IkReal(-1.00000000000000))*(x661)*(x663)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x662)))))+IKsqr(((((IkReal(-1.00000000000000))*(sj5)*(x662)))+(((cj5)*(x660)))+(((cj5)*(x661)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj6)*(r00)*(sj4)))+(((IkReal(-1.00000000000000))*(x660)*(x663)))+(((IkReal(-1.00000000000000))*(x661)*(x663)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x662)))), ((((IkReal(-1.00000000000000))*(sj5)*(x662)))+(((cj5)*(x660)))+(((cj5)*(x661)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x664=IKsin(j3);
IkReal x665=IKcos(j3);
IkReal x666=((IkReal(1.00000000000000))*(r00));
IkReal x667=((cj5)*(sj6));
IkReal x668=((cj6)*(sj4));
IkReal x669=((IkReal(1.00000000000000))*(r10));
IkReal x670=((cj4)*(cj5));
IkReal x671=((IkReal(1.00000000000000))*(r20));
IkReal x672=((sj4)*(sj6));
IkReal x673=((IkReal(1.00000000000000))*(x665));
IkReal x674=((cj4)*(sj5)*(sj6));
IkReal x675=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x676=((cj4)*(cj6)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x675)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x667)*(x671)))+(((sj2)*(x664))));
evalcond[1]=((((cj2)*(x664)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x667)*(x669)))+(((IkReal(-1.00000000000000))*(r11)*(x675))));
evalcond[2]=((((r02)*(sj5)))+(x665)+(((IkReal(-1.00000000000000))*(x666)*(x667)))+(((IkReal(-1.00000000000000))*(r01)*(x675))));
evalcond[3]=((((r21)*(x676)))+(((r21)*(x672)))+(((r22)*(x670)))+(((IkReal(-1.00000000000000))*(x668)*(x671)))+(((r20)*(x674)))+(((IkReal(-1.00000000000000))*(sj2)*(x673))));
evalcond[4]=((((r10)*(x674)))+(((r12)*(x670)))+(((r11)*(x676)))+(((r11)*(x672)))+(((IkReal(-1.00000000000000))*(x668)*(x669)))+(((IkReal(-1.00000000000000))*(cj2)*(x673))));
evalcond[5]=((((r02)*(x670)))+(((r01)*(x676)))+(((r01)*(x672)))+(((r00)*(x674)))+(x664)+(((IkReal(-1.00000000000000))*(x666)*(x668))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x677=((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30);
IkReal x678=((r22)*(sj5));
IkReal x679=((cj5)*(cj6)*(r21));
IkReal x680=((IkReal(1.00000000000000))*(cj1)*(cj2));
IkReal x681=((IkReal(1.00000000000000))*(cj5)*(sj2));
IkReal x682=((cj5)*(r20)*(sj6));
if( IKabs(((x677)*(((x679)+(x682)+(((IkReal(-1.00000000000000))*(x678))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x677)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x681)))+(((IkReal(-1.00000000000000))*(x680)*(x682)))+(((IkReal(-1.00000000000000))*(x679)*(x680)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x681)))+(((cj1)*(cj2)*(x678)))+(((r02)*(sj2)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x677)*(((x679)+(x682)+(((IkReal(-1.00000000000000))*(x678)))))))+IKsqr(((x677)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x681)))+(((IkReal(-1.00000000000000))*(x680)*(x682)))+(((IkReal(-1.00000000000000))*(x679)*(x680)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x681)))+(((cj1)*(cj2)*(x678)))+(((r02)*(sj2)*(sj5)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x677)*(((x679)+(x682)+(((IkReal(-1.00000000000000))*(x678)))))), ((x677)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x681)))+(((IkReal(-1.00000000000000))*(x680)*(x682)))+(((IkReal(-1.00000000000000))*(x679)*(x680)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x681)))+(((cj1)*(cj2)*(x678)))+(((r02)*(sj2)*(sj5)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x683=IKsin(j3);
IkReal x684=IKcos(j3);
IkReal x685=((IkReal(1.00000000000000))*(r00));
IkReal x686=((cj5)*(sj6));
IkReal x687=((cj6)*(sj4));
IkReal x688=((IkReal(1.00000000000000))*(r10));
IkReal x689=((cj4)*(cj5));
IkReal x690=((IkReal(1.00000000000000))*(cj2));
IkReal x691=((IkReal(1.00000000000000))*(r20));
IkReal x692=((sj4)*(sj6));
IkReal x693=((IkReal(1.00000000000000))*(x684));
IkReal x694=((cj1)*(x684));
IkReal x695=((cj1)*(x683));
IkReal x696=((cj4)*(sj5)*(sj6));
IkReal x697=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x698=((sj1)*(x683));
IkReal x699=((cj4)*(cj6)*(sj5));
evalcond[0]=((((r22)*(sj5)))+(((sj2)*(x683)))+(((IkReal(-1.00000000000000))*(x686)*(x691)))+(((IkReal(-1.00000000000000))*(r21)*(x697))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x686)*(x688)))+(((IkReal(-1.00000000000000))*(r11)*(x697)))+(((r12)*(sj5)))+(x694)+(((IkReal(-1.00000000000000))*(x690)*(x698))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x685)*(x686)))+(((IkReal(-1.00000000000000))*(r01)*(x697)))+(((IkReal(-1.00000000000000))*(sj1)*(x693)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x690)*(x695))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x687)*(x691)))+(((IkReal(-1.00000000000000))*(sj2)*(x693)))+(((r22)*(x689)))+(((r20)*(x696)))+(((r21)*(x699)))+(((r21)*(x692))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x687)*(x688)))+(((cj2)*(sj1)*(x684)))+(((r10)*(x696)))+(((r11)*(x692)))+(((r11)*(x699)))+(x695)+(((r12)*(x689))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x685)*(x687)))+(((cj2)*(x694)))+(((r00)*(x696)))+(((r02)*(x689)))+(((IkReal(-1.00000000000000))*(x698)))+(((r01)*(x699)))+(((r01)*(x692))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x700=((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30);
IkReal x701=((cj5)*(cj6));
IkReal x702=((IkReal(1.00000000000000))*(sj5));
IkReal x703=((cj5)*(sj6));
IkReal x704=((cj2)*(sj1));
if( IKabs(((x700)*(((((r20)*(x703)))+(((r21)*(x701)))+(((IkReal(-1.00000000000000))*(r22)*(x702))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x700)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((r10)*(sj2)*(x703)))+(((r21)*(x701)*(x704)))+(((r11)*(sj2)*(x701)))+(((IkReal(-1.00000000000000))*(r22)*(x702)*(x704)))+(((r20)*(x703)*(x704)))+(((IkReal(-1.00000000000000))*(r12)*(sj2)*(x702))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x700)*(((((r20)*(x703)))+(((r21)*(x701)))+(((IkReal(-1.00000000000000))*(r22)*(x702)))))))+IKsqr(((x700)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((r10)*(sj2)*(x703)))+(((r21)*(x701)*(x704)))+(((r11)*(sj2)*(x701)))+(((IkReal(-1.00000000000000))*(r22)*(x702)*(x704)))+(((r20)*(x703)*(x704)))+(((IkReal(-1.00000000000000))*(r12)*(sj2)*(x702)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x700)*(((((r20)*(x703)))+(((r21)*(x701)))+(((IkReal(-1.00000000000000))*(r22)*(x702)))))), ((x700)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((r10)*(sj2)*(x703)))+(((r21)*(x701)*(x704)))+(((r11)*(sj2)*(x701)))+(((IkReal(-1.00000000000000))*(r22)*(x702)*(x704)))+(((r20)*(x703)*(x704)))+(((IkReal(-1.00000000000000))*(r12)*(sj2)*(x702)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x705=IKsin(j3);
IkReal x706=IKcos(j3);
IkReal x707=((IkReal(1.00000000000000))*(r00));
IkReal x708=((cj5)*(sj6));
IkReal x709=((cj6)*(sj4));
IkReal x710=((IkReal(1.00000000000000))*(r10));
IkReal x711=((cj4)*(cj5));
IkReal x712=((IkReal(1.00000000000000))*(cj2));
IkReal x713=((IkReal(1.00000000000000))*(r20));
IkReal x714=((sj4)*(sj6));
IkReal x715=((IkReal(1.00000000000000))*(x706));
IkReal x716=((cj1)*(x706));
IkReal x717=((cj1)*(x705));
IkReal x718=((cj4)*(sj5)*(sj6));
IkReal x719=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x720=((sj1)*(x705));
IkReal x721=((cj4)*(cj6)*(sj5));
evalcond[0]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r21)*(x719)))+(((sj2)*(x705)))+(((IkReal(-1.00000000000000))*(x708)*(x713))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x719)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x708)*(x710)))+(x716)+(((IkReal(-1.00000000000000))*(x712)*(x720))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x707)*(x708)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x712)*(x717)))+(((IkReal(-1.00000000000000))*(r01)*(x719)))+(((IkReal(-1.00000000000000))*(sj1)*(x715))));
evalcond[3]=((((r22)*(x711)))+(((IkReal(-1.00000000000000))*(x709)*(x713)))+(((r20)*(x718)))+(((r21)*(x714)))+(((r21)*(x721)))+(((IkReal(-1.00000000000000))*(sj2)*(x715))));
evalcond[4]=((((r11)*(x714)))+(((IkReal(-1.00000000000000))*(x709)*(x710)))+(x717)+(((r12)*(x711)))+(((r11)*(x721)))+(((cj2)*(sj1)*(x706)))+(((r10)*(x718))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x707)*(x709)))+(((r01)*(x714)))+(((r00)*(x718)))+(((r01)*(x721)))+(((IkReal(-1.00000000000000))*(x720)))+(((cj2)*(x716)))+(((r02)*(x711))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x722=((r20)*(sj6));
IkReal x723=((cj4)*(sj5));
IkReal x724=((cj6)*(r21));
if( IKabs(((gconst2)*(((((cj5)*(x722)))+(((cj5)*(x724)))+(((IkReal(-1.00000000000000))*(r22)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((r21)*(sj4)*(sj6)))+(((x723)*(x724)))+(((x722)*(x723)))+(((cj4)*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst2)*(((((cj5)*(x722)))+(((cj5)*(x724)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)))))), ((gconst2)*(((((r21)*(sj4)*(sj6)))+(((x723)*(x724)))+(((x722)*(x723)))+(((cj4)*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj4)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x725=IKsin(j3);
IkReal x726=IKcos(j3);
IkReal x727=((IkReal(1.00000000000000))*(r00));
IkReal x728=((cj5)*(sj6));
IkReal x729=((cj6)*(sj4));
IkReal x730=((IkReal(1.00000000000000))*(r10));
IkReal x731=((cj4)*(cj5));
IkReal x732=((IkReal(1.00000000000000))*(cj2));
IkReal x733=((IkReal(1.00000000000000))*(r20));
IkReal x734=((sj4)*(sj6));
IkReal x735=((IkReal(1.00000000000000))*(x726));
IkReal x736=((cj1)*(x726));
IkReal x737=((cj1)*(x725));
IkReal x738=((cj4)*(sj5)*(sj6));
IkReal x739=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x740=((sj1)*(x725));
IkReal x741=((cj4)*(cj6)*(sj5));
evalcond[0]=((((r22)*(sj5)))+(((sj2)*(x725)))+(((IkReal(-1.00000000000000))*(r21)*(x739)))+(((IkReal(-1.00000000000000))*(x728)*(x733))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x732)*(x740)))+(((r12)*(sj5)))+(x736)+(((IkReal(-1.00000000000000))*(x728)*(x730)))+(((IkReal(-1.00000000000000))*(r11)*(x739))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x739)))+(((IkReal(-1.00000000000000))*(x727)*(x728)))+(((IkReal(-1.00000000000000))*(x732)*(x737)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(sj1)*(x735))));
evalcond[3]=((((r20)*(x738)))+(((r21)*(x741)))+(((IkReal(-1.00000000000000))*(sj2)*(x735)))+(((r22)*(x731)))+(((r21)*(x734)))+(((IkReal(-1.00000000000000))*(x729)*(x733))));
evalcond[4]=((((r12)*(x731)))+(((cj2)*(sj1)*(x726)))+(((r10)*(x738)))+(((r11)*(x741)))+(x737)+(((r11)*(x734)))+(((IkReal(-1.00000000000000))*(x729)*(x730))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x727)*(x729)))+(((r00)*(x738)))+(((r01)*(x734)))+(((cj2)*(x736)))+(((IkReal(-1.00000000000000))*(x740)))+(((r01)*(x741)))+(((r02)*(x731))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x742=((sj4)*(sj5));
IkReal x743=((cj5)*(sj4));
IkReal x744=((cj4)*(cj6));
IkReal x745=((IkReal(1.00000000000000))*(cj4)*(sj6));
if( IKabs(((gconst0)*(((((cj6)*(r11)*(x742)))+(((IkReal(-1.00000000000000))*(r11)*(x745)))+(((r10)*(x744)))+(((r10)*(sj6)*(x742)))+(((r12)*(x743))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((r02)*(x743)))+(((r00)*(sj6)*(x742)))+(((cj6)*(r01)*(x742)))+(((r00)*(x744)))+(((IkReal(-1.00000000000000))*(r01)*(x745))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst0)*(((((cj6)*(r11)*(x742)))+(((IkReal(-1.00000000000000))*(r11)*(x745)))+(((r10)*(x744)))+(((r10)*(sj6)*(x742)))+(((r12)*(x743)))))), ((gconst0)*(((((r02)*(x743)))+(((r00)*(sj6)*(x742)))+(((cj6)*(r01)*(x742)))+(((r00)*(x744)))+(((IkReal(-1.00000000000000))*(r01)*(x745)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x746=IKsin(j1);
IkReal x747=IKcos(j1);
IkReal x748=((IkReal(1.00000000000000))*(r00));
IkReal x749=((sj4)*(sj6));
IkReal x750=((cj4)*(cj6));
IkReal x751=((cj6)*(sj4));
IkReal x752=((IkReal(0.0975200000000000))*(r10));
IkReal x753=((IkReal(0.115380000000000))*(cj2));
IkReal x754=((IkReal(0.0975200000000000))*(r11));
IkReal x755=((IkReal(1.00000000000000))*(r10));
IkReal x756=((r01)*(sj5));
IkReal x757=((sj5)*(sj6));
IkReal x758=((cj4)*(sj6));
IkReal x759=((IkReal(0.0975200000000000))*(r00));
IkReal x760=((cj5)*(r02));
IkReal x761=((IkReal(0.0975200000000000))*(cj4));
IkReal x762=((cj5)*(r12));
IkReal x763=((IkReal(1.00000000000000))*(cj5)*(sj4));
IkReal x764=((IkReal(0.0716400000000000))*(cj6)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj5)*(x748)*(x749)))+(((r01)*(x758)))+(((sj2)*(x747)))+(((IkReal(-1.00000000000000))*(x748)*(x750)))+(((IkReal(-1.00000000000000))*(sj4)*(x760)))+(((IkReal(-1.00000000000000))*(x751)*(x756))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(sj5)*(x751)))+(((IkReal(-1.00000000000000))*(x750)*(x755)))+(((IkReal(-1.00000000000000))*(sj5)*(x749)*(x755)))+(((r11)*(x758)))+(((sj2)*(x746)))+(((IkReal(-1.00000000000000))*(sj4)*(x762))));
evalcond[2]=((((IkReal(0.0716400000000000))*(cj6)*(x756)))+(((x760)*(x761)))+(((cj4)*(x757)*(x759)))+(((IkReal(0.0716400000000000))*(r00)*(x757)))+(((IkReal(0.0975200000000000))*(r01)*(x749)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x751)*(x759)))+(((IkReal(0.0716400000000000))*(x760)))+(((IkReal(-1.00000000000000))*(x747)*(x753)))+(((IkReal(0.0135000000000000))*(x746)))+(((IkReal(0.0975200000000000))*(x750)*(x756)))+(((IkReal(-0.125830000000000))*(x747))));
evalcond[3]=((((sj5)*(x750)*(x754)))+(((x761)*(x762)))+(((IkReal(-0.0135000000000000))*(x747)))+(((IkReal(-1.00000000000000))*(x746)*(x753)))+(((IkReal(-1.00000000000000))*(py)))+(((cj4)*(x752)*(x757)))+(((IkReal(-1.00000000000000))*(x751)*(x752)))+(((IkReal(0.0716400000000000))*(x762)))+(((IkReal(0.0716400000000000))*(r10)*(x757)))+(((r11)*(x764)))+(((x749)*(x754)))+(((IkReal(-0.125830000000000))*(x746))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(sj2);
dummyeval[0]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj2;
dummyeval[1]=cj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj2;
dummyeval[1]=sj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x765=((cj5)*(r22));
IkReal x766=((IkReal(0.0975200000000000))*(cj4));
IkReal x767=((IkReal(1.00000000000000))*(cj5));
IkReal x768=((r20)*(sj6));
IkReal x769=((IkReal(1.00000000000000))*(sj4));
IkReal x770=((cj5)*(r12));
IkReal x771=((IkReal(0.0975200000000000))*(sj4));
IkReal x772=((r11)*(sj6));
IkReal x773=((cj6)*(sj5));
IkReal x774=((cj6)*(r20));
IkReal x775=((cj4)*(r21));
IkReal x776=((r01)*(sj6));
IkReal x777=((r21)*(sj6));
IkReal x778=((cj5)*(r02));
IkReal x779=((IkReal(1.00000000000000))*(cj4)*(cj6));
IkReal x780=((r10)*(sj5)*(sj6));
IkReal x781=((r00)*(sj5)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x767)*(x768)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x767))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(sj5)*(x768)*(x769)))+(((IkReal(-1.00000000000000))*(x765)*(x769)))+(((sj6)*(x775)))+(((IkReal(-1.00000000000000))*(cj4)*(x774)))+(((IkReal(-1.00000000000000))*(r21)*(x769)*(x773))));
evalcond[3]=((((sj4)*(x777)))+(((x773)*(x775)))+(((IkReal(-1.00000000000000))*(x769)*(x774)))+(((cj4)*(x765)))+(((cj4)*(sj5)*(x768))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x769)*(x781)))+(((IkReal(-1.00000000000000))*(r01)*(x769)*(x773)))+(((IkReal(-1.00000000000000))*(r00)*(x779)))+(((cj4)*(x776)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x767))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r12)*(sj4)*(x767)))+(((IkReal(-1.00000000000000))*(x769)*(x780)))+(((IkReal(-1.00000000000000))*(r10)*(x779)))+(((cj4)*(x772)))+(((IkReal(-1.00000000000000))*(r11)*(x769)*(x773))));
evalcond[6]=((((x771)*(x777)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(sj5)*(x768)))+(((IkReal(-1.00000000000000))*(x771)*(x774)))+(((IkReal(0.0716400000000000))*(x765)))+(((x765)*(x766)))+(((r21)*(x766)*(x773)))+(((sj5)*(x766)*(x768)))+(((IkReal(0.0716400000000000))*(r21)*(x773))));
evalcond[7]=((((r01)*(x766)*(x773)))+(((IkReal(0.0716400000000000))*(x778)))+(((x771)*(x776)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x771)))+(((IkReal(0.0135000000000000))*(sj1)))+(((IkReal(0.0716400000000000))*(r01)*(x773)))+(((IkReal(0.0716400000000000))*(x781)))+(((IkReal(-1.00000000000000))*(px)))+(((x766)*(x778)))+(((x766)*(x781)))+(((IkReal(-0.241210000000000))*(cj1))));
evalcond[8]=((((IkReal(-0.0135000000000000))*(cj1)))+(((IkReal(0.0716400000000000))*(x770)))+(((x771)*(x772)))+(((r11)*(x766)*(x773)))+(((IkReal(0.0716400000000000))*(x780)))+(((IkReal(-1.00000000000000))*(py)))+(((x766)*(x770)))+(((x766)*(x780)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x771)))+(((IkReal(-0.241210000000000))*(sj1)))+(((IkReal(0.0716400000000000))*(r11)*(x773))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x782=((cj4)*(cj5));
IkReal x783=((cj1)*(cj6));
IkReal x784=((r10)*(sj4));
IkReal x785=((cj4)*(sj5));
IkReal x786=((IkReal(1.00000000000000))*(sj1));
IkReal x787=((IkReal(1.00000000000000))*(r11));
IkReal x788=((cj1)*(sj6));
IkReal x789=((IkReal(1.00000000000000))*(cj1)*(r12));
IkReal x790=((cj5)*(r10)*(sj6));
IkReal x791=((cj6)*(r11)*(x786));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x783)*(x785)*(x787)))+(((IkReal(-1.00000000000000))*(sj4)*(x787)*(x788)))+(((x783)*(x784)))+(((IkReal(-1.00000000000000))*(r10)*(x785)*(x788)))+(((r12)*(sj1)*(sj5)))+(((IkReal(-1.00000000000000))*(x782)*(x789)))+(((IkReal(-1.00000000000000))*(cj5)*(x791)))+(((IkReal(-1.00000000000000))*(x786)*(x790))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj5)*(r11)*(x783)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x785)*(x786)))+(((cj6)*(sj1)*(x784)))+(((IkReal(-1.00000000000000))*(sj5)*(x789)))+(((cj5)*(r10)*(x788)))+(((IkReal(-1.00000000000000))*(r12)*(x782)*(x786)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6)*(x786)))+(((IkReal(-1.00000000000000))*(x785)*(x791))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x783)*(x785)*(x787)))+(((IkReal(-1.00000000000000))*(sj4)*(x787)*(x788)))+(((x783)*(x784)))+(((IkReal(-1.00000000000000))*(r10)*(x785)*(x788)))+(((r12)*(sj1)*(sj5)))+(((IkReal(-1.00000000000000))*(x782)*(x789)))+(((IkReal(-1.00000000000000))*(cj5)*(x791)))+(((IkReal(-1.00000000000000))*(x786)*(x790)))))), ((gconst4)*(((((cj5)*(r11)*(x783)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x785)*(x786)))+(((cj6)*(sj1)*(x784)))+(((IkReal(-1.00000000000000))*(sj5)*(x789)))+(((cj5)*(r10)*(x788)))+(((IkReal(-1.00000000000000))*(r12)*(x782)*(x786)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6)*(x786)))+(((IkReal(-1.00000000000000))*(x785)*(x791)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x792=IKsin(j3);
IkReal x793=IKcos(j3);
IkReal x794=((IkReal(1.00000000000000))*(r00));
IkReal x795=((cj6)*(sj4));
IkReal x796=((cj4)*(cj5));
IkReal x797=((cj5)*(sj6));
IkReal x798=((cj4)*(sj5));
IkReal x799=((IkReal(1.00000000000000))*(r10));
IkReal x800=((sj4)*(sj6));
IkReal x801=((cj1)*(x793));
IkReal x802=((cj1)*(x792));
IkReal x803=((sj1)*(x793));
IkReal x804=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x805=((IkReal(1.00000000000000))*(sj1)*(x792));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x804)))+(((IkReal(-1.00000000000000))*(x797)*(x799)))+(((r12)*(sj5)))+(x801)+(((IkReal(-1.00000000000000))*(x805))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x802)))+(((IkReal(-1.00000000000000))*(x803)))+(((IkReal(-1.00000000000000))*(x794)*(x797)))+(((IkReal(-1.00000000000000))*(r01)*(x804)))+(((r02)*(sj5))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x795)*(x799)))+(((r10)*(sj6)*(x798)))+(((r11)*(x800)))+(((cj6)*(r11)*(x798)))+(x803)+(x802)+(((r12)*(x796))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x794)*(x795)))+(((r00)*(sj6)*(x798)))+(((r02)*(x796)))+(((r01)*(x800)))+(x801)+(((IkReal(-1.00000000000000))*(x805)))+(((cj6)*(r01)*(x798))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x806=((sj1)*(sj5));
IkReal x807=((IkReal(1.00000000000000))*(cj5));
IkReal x808=((cj6)*(r11));
IkReal x809=((r00)*(sj6));
IkReal x810=((cj1)*(sj5));
IkReal x811=((cj6)*(r01));
IkReal x812=((cj1)*(cj5));
IkReal x813=((r10)*(sj6));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(cj1)*(x807)*(x811)))+(((IkReal(-1.00000000000000))*(sj1)*(x807)*(x808)))+(((r12)*(x806)))+(((IkReal(-1.00000000000000))*(cj1)*(x807)*(x809)))+(((IkReal(-1.00000000000000))*(sj1)*(x807)*(x813)))+(((r02)*(x810))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(sj1)*(x807)*(x809)))+(((x812)*(x813)))+(((x808)*(x812)))+(((r02)*(x806)))+(((IkReal(-1.00000000000000))*(sj1)*(x807)*(x811)))+(((IkReal(-1.00000000000000))*(r12)*(x810))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(cj1)*(x807)*(x811)))+(((IkReal(-1.00000000000000))*(sj1)*(x807)*(x808)))+(((r12)*(x806)))+(((IkReal(-1.00000000000000))*(cj1)*(x807)*(x809)))+(((IkReal(-1.00000000000000))*(sj1)*(x807)*(x813)))+(((r02)*(x810)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(sj1)*(x807)*(x809)))+(((x812)*(x813)))+(((x808)*(x812)))+(((r02)*(x806)))+(((IkReal(-1.00000000000000))*(sj1)*(x807)*(x811)))+(((IkReal(-1.00000000000000))*(r12)*(x810)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x814=IKsin(j3);
IkReal x815=IKcos(j3);
IkReal x816=((IkReal(1.00000000000000))*(r00));
IkReal x817=((cj6)*(sj4));
IkReal x818=((cj4)*(cj5));
IkReal x819=((cj5)*(sj6));
IkReal x820=((cj4)*(sj5));
IkReal x821=((IkReal(1.00000000000000))*(r10));
IkReal x822=((sj4)*(sj6));
IkReal x823=((cj1)*(x815));
IkReal x824=((cj1)*(x814));
IkReal x825=((sj1)*(x815));
IkReal x826=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x827=((IkReal(1.00000000000000))*(sj1)*(x814));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x826)))+(((IkReal(-1.00000000000000))*(x819)*(x821)))+(((IkReal(-1.00000000000000))*(x827)))+(((r12)*(sj5)))+(x823));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x826)))+(((IkReal(-1.00000000000000))*(x816)*(x819)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x825)))+(((IkReal(-1.00000000000000))*(x824))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x817)*(x821)))+(x825)+(x824)+(((cj6)*(r11)*(x820)))+(((r10)*(sj6)*(x820)))+(((r11)*(x822)))+(((r12)*(x818))));
evalcond[3]=((((cj6)*(r01)*(x820)))+(((IkReal(-1.00000000000000))*(x816)*(x817)))+(((IkReal(-1.00000000000000))*(x827)))+(((r01)*(x822)))+(x823)+(((r00)*(sj6)*(x820)))+(((r02)*(x818))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x828=((cj5)*(r22));
IkReal x829=((IkReal(0.0975200000000000))*(cj4));
IkReal x830=((IkReal(1.00000000000000))*(cj5));
IkReal x831=((r20)*(sj6));
IkReal x832=((IkReal(1.00000000000000))*(sj4));
IkReal x833=((cj5)*(r12));
IkReal x834=((IkReal(0.0975200000000000))*(sj4));
IkReal x835=((r11)*(sj6));
IkReal x836=((cj6)*(sj5));
IkReal x837=((cj6)*(r20));
IkReal x838=((cj4)*(r21));
IkReal x839=((r01)*(sj6));
IkReal x840=((r21)*(sj6));
IkReal x841=((cj5)*(r02));
IkReal x842=((IkReal(1.00000000000000))*(cj4)*(cj6));
IkReal x843=((r10)*(sj5)*(sj6));
IkReal x844=((r00)*(sj5)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x830)))+(((IkReal(-1.00000000000000))*(x830)*(x831))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x828)*(x832)))+(((IkReal(-1.00000000000000))*(cj4)*(x837)))+(((sj6)*(x838)))+(((IkReal(-1.00000000000000))*(sj5)*(x831)*(x832)))+(((IkReal(-1.00000000000000))*(r21)*(x832)*(x836))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x832)*(x837)))+(((cj4)*(sj5)*(x831)))+(((sj4)*(x840)))+(((x836)*(x838)))+(((cj4)*(x828))));
evalcond[4]=((((cj4)*(x839)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x830)))+(((IkReal(-1.00000000000000))*(r00)*(x842)))+(((IkReal(-1.00000000000000))*(r01)*(x832)*(x836)))+(((IkReal(-1.00000000000000))*(x832)*(x844))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x842)))+(((cj4)*(x835)))+(((IkReal(-1.00000000000000))*(r11)*(x832)*(x836)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x830)))+(((IkReal(-1.00000000000000))*(x832)*(x843))));
evalcond[6]=((((r21)*(x829)*(x836)))+(((sj5)*(x829)*(x831)))+(((IkReal(0.0716400000000000))*(sj5)*(x831)))+(((IkReal(-1.00000000000000))*(x834)*(x837)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(r21)*(x836)))+(((x834)*(x840)))+(((x828)*(x829)))+(((IkReal(0.0716400000000000))*(x828))));
evalcond[7]=((((IkReal(0.0716400000000000))*(x841)))+(((IkReal(0.0716400000000000))*(x844)))+(((IkReal(0.0135000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(px)))+(((x829)*(x844)))+(((x829)*(x841)))+(((IkReal(-0.0104500000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x834)))+(((x834)*(x839)))+(((r01)*(x829)*(x836)))+(((IkReal(0.0716400000000000))*(r01)*(x836))));
evalcond[8]=((((IkReal(-0.0135000000000000))*(cj1)))+(((IkReal(0.0716400000000000))*(x833)))+(((IkReal(0.0716400000000000))*(x843)))+(((IkReal(-1.00000000000000))*(py)))+(((x829)*(x833)))+(((x829)*(x843)))+(((IkReal(0.0716400000000000))*(r11)*(x836)))+(((x834)*(x835)))+(((IkReal(-0.0104500000000000))*(sj1)))+(((r11)*(x829)*(x836)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x834))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x845=((IkReal(1.00000000000000))*(cj6));
IkReal x846=((cj5)*(sj1));
IkReal x847=((cj1)*(cj5));
IkReal x848=((cj4)*(r12));
IkReal x849=((r10)*(sj4));
IkReal x850=((r10)*(sj6));
IkReal x851=((cj1)*(sj5));
IkReal x852=((cj4)*(r11));
IkReal x853=((IkReal(1.00000000000000))*(sj1));
IkReal x854=((sj1)*(sj5));
IkReal x855=((r11)*(sj4)*(sj6));
if( IKabs(((gconst6)*(((((r12)*(x854)))+(((IkReal(-1.00000000000000))*(cj1)*(x845)*(x849)))+(((IkReal(-1.00000000000000))*(r11)*(x845)*(x846)))+(((cj1)*(x855)))+(((cj4)*(x850)*(x851)))+(((IkReal(-1.00000000000000))*(x846)*(x850)))+(((x847)*(x848)))+(((cj6)*(x851)*(x852))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(cj4)*(sj5)*(x850)*(x853)))+(((IkReal(-1.00000000000000))*(x853)*(x855)))+(((r12)*(x851)))+(((IkReal(-1.00000000000000))*(x847)*(x850)))+(((IkReal(-1.00000000000000))*(x846)*(x848)))+(((IkReal(-1.00000000000000))*(r11)*(x845)*(x847)))+(((IkReal(-1.00000000000000))*(x845)*(x852)*(x854)))+(((cj6)*(sj1)*(x849))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst6)*(((((r12)*(x854)))+(((IkReal(-1.00000000000000))*(cj1)*(x845)*(x849)))+(((IkReal(-1.00000000000000))*(r11)*(x845)*(x846)))+(((cj1)*(x855)))+(((cj4)*(x850)*(x851)))+(((IkReal(-1.00000000000000))*(x846)*(x850)))+(((x847)*(x848)))+(((cj6)*(x851)*(x852)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(cj4)*(sj5)*(x850)*(x853)))+(((IkReal(-1.00000000000000))*(x853)*(x855)))+(((r12)*(x851)))+(((IkReal(-1.00000000000000))*(x847)*(x850)))+(((IkReal(-1.00000000000000))*(x846)*(x848)))+(((IkReal(-1.00000000000000))*(r11)*(x845)*(x847)))+(((IkReal(-1.00000000000000))*(x845)*(x852)*(x854)))+(((cj6)*(sj1)*(x849)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x856=IKsin(j3);
IkReal x857=IKcos(j3);
IkReal x858=((IkReal(1.00000000000000))*(r00));
IkReal x859=((cj5)*(sj6));
IkReal x860=((cj6)*(sj4));
IkReal x861=((cj4)*(cj5));
IkReal x862=((cj4)*(sj5));
IkReal x863=((IkReal(1.00000000000000))*(r10));
IkReal x864=((sj4)*(sj6));
IkReal x865=((cj1)*(x856));
IkReal x866=((cj1)*(x857));
IkReal x867=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x868=((sj1)*(x856));
IkReal x869=((IkReal(1.00000000000000))*(sj1)*(x857));
evalcond[0]=((((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x859)*(x863)))+(x868)+(x866)+(((IkReal(-1.00000000000000))*(r11)*(x867))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x869)))+(((IkReal(-1.00000000000000))*(r01)*(x867)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x858)*(x859)))+(x865));
evalcond[2]=((((IkReal(-1.00000000000000))*(x869)))+(((cj6)*(r11)*(x862)))+(((r11)*(x864)))+(((r12)*(x861)))+(((IkReal(-1.00000000000000))*(x860)*(x863)))+(((r10)*(sj6)*(x862)))+(x865));
evalcond[3]=((((r00)*(sj6)*(x862)))+(((r01)*(x864)))+(((IkReal(-1.00000000000000))*(x866)))+(((IkReal(-1.00000000000000))*(x868)))+(((r02)*(x861)))+(((IkReal(-1.00000000000000))*(x858)*(x860)))+(((cj6)*(r01)*(x862))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x870=((IkReal(1.00000000000000))*(cj5));
IkReal x871=((cj6)*(sj1));
IkReal x872=((cj1)*(sj6));
IkReal x873=((sj1)*(sj5));
IkReal x874=((sj1)*(sj6));
IkReal x875=((cj1)*(cj6));
IkReal x876=((cj1)*(sj5));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r11)*(x870)*(x871)))+(((r12)*(x873)))+(((r02)*(x876)))+(((IkReal(-1.00000000000000))*(r10)*(x870)*(x874)))+(((IkReal(-1.00000000000000))*(r00)*(x870)*(x872)))+(((IkReal(-1.00000000000000))*(r01)*(x870)*(x875))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r11)*(x870)*(x875)))+(((r12)*(x876)))+(((IkReal(-1.00000000000000))*(r10)*(x870)*(x872)))+(((IkReal(-1.00000000000000))*(r02)*(x873)))+(((cj5)*(r01)*(x871)))+(((cj5)*(r00)*(x874))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(r11)*(x870)*(x871)))+(((r12)*(x873)))+(((r02)*(x876)))+(((IkReal(-1.00000000000000))*(r10)*(x870)*(x874)))+(((IkReal(-1.00000000000000))*(r00)*(x870)*(x872)))+(((IkReal(-1.00000000000000))*(r01)*(x870)*(x875)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(r11)*(x870)*(x875)))+(((r12)*(x876)))+(((IkReal(-1.00000000000000))*(r10)*(x870)*(x872)))+(((IkReal(-1.00000000000000))*(r02)*(x873)))+(((cj5)*(r01)*(x871)))+(((cj5)*(r00)*(x874)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x877=IKsin(j3);
IkReal x878=IKcos(j3);
IkReal x879=((IkReal(1.00000000000000))*(r00));
IkReal x880=((cj5)*(sj6));
IkReal x881=((cj6)*(sj4));
IkReal x882=((cj4)*(cj5));
IkReal x883=((cj4)*(sj5));
IkReal x884=((IkReal(1.00000000000000))*(r10));
IkReal x885=((sj4)*(sj6));
IkReal x886=((cj1)*(x877));
IkReal x887=((cj1)*(x878));
IkReal x888=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x889=((sj1)*(x877));
IkReal x890=((IkReal(1.00000000000000))*(sj1)*(x878));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x888)))+(((r12)*(sj5)))+(x887)+(x889)+(((IkReal(-1.00000000000000))*(x880)*(x884))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x879)*(x880)))+(((IkReal(-1.00000000000000))*(x890)))+(((r02)*(sj5)))+(x886)+(((IkReal(-1.00000000000000))*(r01)*(x888))));
evalcond[2]=((((r11)*(x885)))+(((IkReal(-1.00000000000000))*(x890)))+(((IkReal(-1.00000000000000))*(x881)*(x884)))+(x886)+(((cj6)*(r11)*(x883)))+(((r10)*(sj6)*(x883)))+(((r12)*(x882))));
evalcond[3]=((((r02)*(x882)))+(((IkReal(-1.00000000000000))*(x879)*(x881)))+(((cj6)*(r01)*(x883)))+(((r01)*(x885)))+(((IkReal(-1.00000000000000))*(x889)))+(((IkReal(-1.00000000000000))*(x887)))+(((r00)*(sj6)*(x883))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x891=((IkReal(1.00000000000000))*(cj6));
IkReal x892=((cj4)*(r00));
IkReal x893=((cj5)*(r22));
IkReal x894=((IkReal(0.0975200000000000))*(cj4));
IkReal x895=((IkReal(1.00000000000000))*(sj4));
IkReal x896=((cj5)*(r02));
IkReal x897=((cj5)*(r12));
IkReal x898=((r11)*(sj4));
IkReal x899=((IkReal(0.0975200000000000))*(sj6));
IkReal x900=((sj4)*(sj5));
IkReal x901=((cj6)*(sj5));
IkReal x902=((cj4)*(sj6));
IkReal x903=((sj5)*(sj6));
IkReal x904=((IkReal(0.0716400000000000))*(x901));
IkReal x905=((r10)*(x903));
IkReal x906=((IkReal(0.0975200000000000))*(cj6)*(sj4));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((r21)*(x902)))+(cj2)+(((IkReal(-1.00000000000000))*(cj4)*(r20)*(x891)))+(((IkReal(-1.00000000000000))*(r21)*(x891)*(x900)))+(((IkReal(-1.00000000000000))*(x893)*(x895)))+(((IkReal(-1.00000000000000))*(r20)*(x895)*(x903))));
evalcond[2]=((sj2)+(((r01)*(x902)))+(((IkReal(-1.00000000000000))*(r01)*(x891)*(x900)))+(((IkReal(-1.00000000000000))*(x895)*(x896)))+(((IkReal(-1.00000000000000))*(r00)*(x895)*(x903)))+(((IkReal(-1.00000000000000))*(x891)*(x892))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r10)*(x891)))+(((IkReal(-1.00000000000000))*(x895)*(x905)))+(((IkReal(-1.00000000000000))*(sj5)*(x891)*(x898)))+(((r11)*(x902)))+(((IkReal(-1.00000000000000))*(x895)*(x897))));
evalcond[4]=((((r21)*(x904)))+(((IkReal(0.0716400000000000))*(x893)))+(((IkReal(-1.00000000000000))*(r20)*(x906)))+(((IkReal(-1.00000000000000))*(pz)))+(((x893)*(x894)))+(((IkReal(0.0716400000000000))*(r20)*(x903)))+(((IkReal(0.115380000000000))*(sj2)))+(((r21)*(x894)*(x901)))+(((r21)*(sj4)*(x899)))+(((r20)*(x894)*(x903))));
evalcond[5]=((IkReal(-0.125830000000000))+(((sj5)*(x892)*(x899)))+(((IkReal(0.0716400000000000))*(x896)))+(((r01)*(x904)))+(((x894)*(x896)))+(((IkReal(0.0716400000000000))*(r00)*(x903)))+(((r01)*(sj4)*(x899)))+(((IkReal(-1.00000000000000))*(r00)*(x906)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.115380000000000))*(cj2)))+(((r01)*(x894)*(x901))));
evalcond[6]=((IkReal(-0.0135000000000000))+(((x898)*(x899)))+(((IkReal(0.0716400000000000))*(x897)))+(((x894)*(x897)))+(((x894)*(x905)))+(((r11)*(x894)*(x901)))+(((r11)*(x904)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0716400000000000))*(x905)))+(((IkReal(-1.00000000000000))*(r10)*(x906))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x907=((IkReal(1.00000000000000))*(sj5));
IkReal x908=((r10)*(sj6));
IkReal x909=((cj6)*(r11));
if( IKabs(((((cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(cj4)*(x907)*(x908)))+(((IkReal(-1.00000000000000))*(cj4)*(x907)*(x909))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r12)*(x907)))+(((cj5)*(x908)))+(((cj5)*(x909))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(cj4)*(x907)*(x908)))+(((IkReal(-1.00000000000000))*(cj4)*(x907)*(x909)))))+IKsqr(((((IkReal(-1.00000000000000))*(r12)*(x907)))+(((cj5)*(x908)))+(((cj5)*(x909)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(cj4)*(x907)*(x908)))+(((IkReal(-1.00000000000000))*(cj4)*(x907)*(x909)))), ((((IkReal(-1.00000000000000))*(r12)*(x907)))+(((cj5)*(x908)))+(((cj5)*(x909)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x910=IKsin(j3);
IkReal x911=IKcos(j3);
IkReal x912=((IkReal(1.00000000000000))*(r00));
IkReal x913=((cj5)*(sj6));
IkReal x914=((cj6)*(sj4));
IkReal x915=((IkReal(1.00000000000000))*(r10));
IkReal x916=((cj4)*(cj5));
IkReal x917=((IkReal(1.00000000000000))*(r20));
IkReal x918=((sj4)*(sj6));
IkReal x919=((cj4)*(sj5)*(sj6));
IkReal x920=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x921=((cj4)*(cj6)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(x913)*(x917)))+(((IkReal(-1.00000000000000))*(r21)*(x920)))+(((sj2)*(x910)))+(((r22)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x913)*(x915)))+(((IkReal(-1.00000000000000))*(r11)*(x920)))+(((r12)*(sj5)))+(x911));
evalcond[2]=((((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x912)*(x913)))+(((IkReal(-1.00000000000000))*(cj2)*(x910)))+(((IkReal(-1.00000000000000))*(r01)*(x920))));
evalcond[3]=((((r20)*(x919)))+(((r21)*(x921)))+(((IkReal(-1.00000000000000))*(sj2)*(x911)))+(((r22)*(x916)))+(((IkReal(-1.00000000000000))*(x914)*(x917)))+(((r21)*(x918))));
evalcond[4]=((((r12)*(x916)))+(((r10)*(x919)))+(((r11)*(x918)))+(((r11)*(x921)))+(((IkReal(-1.00000000000000))*(x914)*(x915)))+(x910));
evalcond[5]=((((cj2)*(x911)))+(((r02)*(x916)))+(((IkReal(-1.00000000000000))*(x912)*(x914)))+(((r01)*(x921)))+(((r01)*(x918)))+(((r00)*(x919))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x922=((IkReal(1.00000000000000))*(cj6));
IkReal x923=((cj4)*(r00));
IkReal x924=((cj5)*(r22));
IkReal x925=((IkReal(0.0975200000000000))*(cj4));
IkReal x926=((IkReal(1.00000000000000))*(sj4));
IkReal x927=((cj5)*(r02));
IkReal x928=((cj5)*(r12));
IkReal x929=((r11)*(sj4));
IkReal x930=((IkReal(0.0975200000000000))*(sj6));
IkReal x931=((sj4)*(sj5));
IkReal x932=((cj6)*(sj5));
IkReal x933=((cj4)*(sj6));
IkReal x934=((sj5)*(sj6));
IkReal x935=((IkReal(0.0716400000000000))*(x932));
IkReal x936=((r10)*(x934));
IkReal x937=((IkReal(0.0975200000000000))*(cj6)*(sj4));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x926)*(x934)))+(cj2)+(((r21)*(x933)))+(((IkReal(-1.00000000000000))*(x924)*(x926)))+(((IkReal(-1.00000000000000))*(cj4)*(r20)*(x922)))+(((IkReal(-1.00000000000000))*(r21)*(x922)*(x931))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x922)*(x931)))+(((IkReal(-1.00000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x926)*(x927)))+(((IkReal(-1.00000000000000))*(r00)*(x926)*(x934)))+(((r01)*(x933)))+(((IkReal(-1.00000000000000))*(x922)*(x923))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj5)*(x922)*(x929)))+(((IkReal(-1.00000000000000))*(cj4)*(r10)*(x922)))+(((IkReal(-1.00000000000000))*(x926)*(x928)))+(((IkReal(-1.00000000000000))*(x926)*(x936)))+(((r11)*(x933))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x937)))+(((x924)*(x925)))+(((r21)*(x935)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(x924)))+(((r21)*(sj4)*(x930)))+(((IkReal(0.115380000000000))*(sj2)))+(((r20)*(x925)*(x934)))+(((r21)*(x925)*(x932)))+(((IkReal(0.0716400000000000))*(r20)*(x934))));
evalcond[5]=((IkReal(0.125830000000000))+(((r01)*(x925)*(x932)))+(((sj5)*(x923)*(x930)))+(((r01)*(sj4)*(x930)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0716400000000000))*(x927)))+(((IkReal(0.0716400000000000))*(r00)*(x934)))+(((r01)*(x935)))+(((x925)*(x927)))+(((IkReal(-1.00000000000000))*(r00)*(x937)))+(((IkReal(0.115380000000000))*(cj2))));
evalcond[6]=((IkReal(0.0135000000000000))+(((r11)*(x925)*(x932)))+(((IkReal(-1.00000000000000))*(r10)*(x937)))+(((IkReal(0.0716400000000000))*(x936)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0716400000000000))*(x928)))+(((r11)*(x935)))+(((x925)*(x936)))+(((x925)*(x928)))+(((x929)*(x930))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x938=((cj4)*(sj5));
IkReal x939=((cj6)*(r11));
IkReal x940=((r10)*(sj6));
IkReal x941=((IkReal(1.00000000000000))*(cj5));
if( IKabs(((((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj4)))+(((x938)*(x940)))+(((cj4)*(cj5)*(r12)))+(((r11)*(sj4)*(sj6)))+(((x938)*(x939))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x939)*(x941)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x940)*(x941))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj4)))+(((x938)*(x940)))+(((cj4)*(cj5)*(r12)))+(((r11)*(sj4)*(sj6)))+(((x938)*(x939)))))+IKsqr(((((IkReal(-1.00000000000000))*(x939)*(x941)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x940)*(x941)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj4)))+(((x938)*(x940)))+(((cj4)*(cj5)*(r12)))+(((r11)*(sj4)*(sj6)))+(((x938)*(x939)))), ((((IkReal(-1.00000000000000))*(x939)*(x941)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x940)*(x941)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x942=IKsin(j3);
IkReal x943=IKcos(j3);
IkReal x944=((IkReal(1.00000000000000))*(r00));
IkReal x945=((cj5)*(sj6));
IkReal x946=((cj6)*(sj4));
IkReal x947=((IkReal(1.00000000000000))*(r10));
IkReal x948=((cj4)*(cj5));
IkReal x949=((IkReal(1.00000000000000))*(r20));
IkReal x950=((sj4)*(sj6));
IkReal x951=((IkReal(1.00000000000000))*(x943));
IkReal x952=((cj4)*(sj5)*(sj6));
IkReal x953=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x954=((cj4)*(cj6)*(sj5));
evalcond[0]=((((sj2)*(x942)))+(((IkReal(-1.00000000000000))*(r21)*(x953)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x945)*(x949))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x945)*(x947)))+(((IkReal(-1.00000000000000))*(r11)*(x953)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x951))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x953)))+(((cj2)*(x942)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x944)*(x945))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x946)*(x949)))+(((r22)*(x948)))+(((r21)*(x950)))+(((r21)*(x954)))+(((r20)*(x952)))+(((IkReal(-1.00000000000000))*(sj2)*(x951))));
evalcond[4]=((((r12)*(x948)))+(((IkReal(-1.00000000000000))*(x946)*(x947)))+(((IkReal(-1.00000000000000))*(x942)))+(((r11)*(x954)))+(((r11)*(x950)))+(((r10)*(x952))));
evalcond[5]=((((r02)*(x948)))+(((IkReal(-1.00000000000000))*(cj2)*(x951)))+(((r01)*(x950)))+(((r01)*(x954)))+(((IkReal(-1.00000000000000))*(x944)*(x946)))+(((r00)*(x952))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x955=((IkReal(1.00000000000000))*(cj6));
IkReal x956=((cj4)*(r00));
IkReal x957=((cj5)*(r22));
IkReal x958=((IkReal(0.0975200000000000))*(cj4));
IkReal x959=((IkReal(1.00000000000000))*(sj4));
IkReal x960=((cj5)*(r02));
IkReal x961=((cj5)*(r12));
IkReal x962=((r11)*(sj4));
IkReal x963=((IkReal(0.0975200000000000))*(sj6));
IkReal x964=((sj4)*(sj5));
IkReal x965=((cj6)*(sj5));
IkReal x966=((cj4)*(sj6));
IkReal x967=((sj5)*(sj6));
IkReal x968=((IkReal(0.0716400000000000))*(x965));
IkReal x969=((r10)*(x967));
IkReal x970=((IkReal(0.0975200000000000))*(cj6)*(sj4));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x959)*(x967)))+(cj2)+(((IkReal(-1.00000000000000))*(cj4)*(r20)*(x955)))+(((IkReal(-1.00000000000000))*(x957)*(x959)))+(((r21)*(x966)))+(((IkReal(-1.00000000000000))*(r21)*(x955)*(x964))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x959)*(x967)))+(((r01)*(x966)))+(((IkReal(-1.00000000000000))*(x959)*(x960)))+(((IkReal(-1.00000000000000))*(r01)*(x955)*(x964)))+(((IkReal(-1.00000000000000))*(x955)*(x956))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj5)*(x955)*(x962)))+(sj2)+(((IkReal(-1.00000000000000))*(cj4)*(r10)*(x955)))+(((IkReal(-1.00000000000000))*(x959)*(x969)))+(((IkReal(-1.00000000000000))*(x959)*(x961)))+(((r11)*(x966))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x970)))+(((r21)*(x958)*(x965)))+(((IkReal(0.0716400000000000))*(x957)))+(((r20)*(x958)*(x967)))+(((IkReal(0.0716400000000000))*(r20)*(x967)))+(((r21)*(sj4)*(x963)))+(((IkReal(-1.00000000000000))*(pz)))+(((r21)*(x968)))+(((x957)*(x958)))+(((IkReal(0.115380000000000))*(sj2))));
evalcond[5]=((IkReal(0.0135000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x970)))+(((IkReal(0.0716400000000000))*(x960)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x968)))+(((r01)*(x958)*(x965)))+(((sj5)*(x956)*(x963)))+(((x958)*(x960)))+(((IkReal(0.0716400000000000))*(r00)*(x967)))+(((r01)*(sj4)*(x963))));
evalcond[6]=((IkReal(-0.125830000000000))+(((IkReal(0.0716400000000000))*(x969)))+(((IkReal(0.0716400000000000))*(x961)))+(((x962)*(x963)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.115380000000000))*(cj2)))+(((r11)*(x968)))+(((x958)*(x969)))+(((x958)*(x961)))+(((r11)*(x958)*(x965)))+(((IkReal(-1.00000000000000))*(r10)*(x970))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x971=((r00)*(sj6));
IkReal x972=((cj4)*(sj5));
IkReal x973=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((x971)*(x972)))+(((cj6)*(r01)*(x972)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x973))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x973)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x971))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((x971)*(x972)))+(((cj6)*(r01)*(x972)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x973)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x973)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x971)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((x971)*(x972)))+(((cj6)*(r01)*(x972)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x973)))), ((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x973)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x971)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x974=IKsin(j3);
IkReal x975=IKcos(j3);
IkReal x976=((IkReal(1.00000000000000))*(r00));
IkReal x977=((cj5)*(sj6));
IkReal x978=((cj6)*(sj4));
IkReal x979=((IkReal(1.00000000000000))*(r10));
IkReal x980=((cj4)*(cj5));
IkReal x981=((IkReal(1.00000000000000))*(r20));
IkReal x982=((sj4)*(sj6));
IkReal x983=((IkReal(1.00000000000000))*(x975));
IkReal x984=((cj4)*(sj5)*(sj6));
IkReal x985=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x986=((cj4)*(cj6)*(sj5));
IkReal x987=((IkReal(1.00000000000000))*(x974));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x985)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x977)*(x981)))+(((sj2)*(x974))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj2)*(x987)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x977)*(x979)))+(((IkReal(-1.00000000000000))*(r11)*(x985))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x983)))+(((IkReal(-1.00000000000000))*(r01)*(x985)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x976)*(x977))));
evalcond[3]=((((r22)*(x980)))+(((r21)*(x982)))+(((r21)*(x986)))+(((IkReal(-1.00000000000000))*(x978)*(x981)))+(((IkReal(-1.00000000000000))*(sj2)*(x983)))+(((r20)*(x984))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x978)*(x979)))+(((r12)*(x980)))+(((r11)*(x986)))+(((r11)*(x982)))+(((cj2)*(x975)))+(((r10)*(x984))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x987)))+(((r00)*(x984)))+(((r01)*(x982)))+(((r01)*(x986)))+(((IkReal(-1.00000000000000))*(x976)*(x978)))+(((r02)*(x980))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x988=((IkReal(1.00000000000000))*(cj6));
IkReal x989=((cj4)*(r00));
IkReal x990=((cj5)*(r22));
IkReal x991=((IkReal(0.0975200000000000))*(cj4));
IkReal x992=((IkReal(1.00000000000000))*(sj4));
IkReal x993=((cj5)*(r02));
IkReal x994=((cj5)*(r12));
IkReal x995=((r11)*(sj4));
IkReal x996=((IkReal(0.0975200000000000))*(sj6));
IkReal x997=((sj4)*(sj5));
IkReal x998=((cj6)*(sj5));
IkReal x999=((cj4)*(sj6));
IkReal x1000=((sj5)*(sj6));
IkReal x1001=((IkReal(0.0716400000000000))*(x998));
IkReal x1002=((r10)*(x1000));
IkReal x1003=((IkReal(0.0975200000000000))*(cj6)*(sj4));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x1000)*(x992)))+(cj2)+(((IkReal(-1.00000000000000))*(r21)*(x988)*(x997)))+(((IkReal(-1.00000000000000))*(x990)*(x992)))+(((IkReal(-1.00000000000000))*(cj4)*(r20)*(x988)))+(((r21)*(x999))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x988)*(x997)))+(((r01)*(x999)))+(((IkReal(-1.00000000000000))*(x992)*(x993)))+(((IkReal(-1.00000000000000))*(x988)*(x989)))+(((IkReal(-1.00000000000000))*(r00)*(x1000)*(x992))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1002)*(x992)))+(((IkReal(-1.00000000000000))*(x992)*(x994)))+(((IkReal(-1.00000000000000))*(cj4)*(r10)*(x988)))+(((IkReal(-1.00000000000000))*(sj5)*(x988)*(x995)))+(((r11)*(x999))));
evalcond[4]=((((IkReal(0.0716400000000000))*(x990)))+(((x990)*(x991)))+(((r21)*(sj4)*(x996)))+(((IkReal(-1.00000000000000))*(r20)*(x1003)))+(((r20)*(x1000)*(x991)))+(((r21)*(x991)*(x998)))+(((IkReal(-1.00000000000000))*(pz)))+(((r21)*(x1001)))+(((IkReal(0.0716400000000000))*(r20)*(x1000)))+(((IkReal(0.115380000000000))*(sj2))));
evalcond[5]=((IkReal(-0.0135000000000000))+(((r01)*(x1001)))+(((IkReal(0.0716400000000000))*(x993)))+(((x991)*(x993)))+(((r01)*(sj4)*(x996)))+(((r01)*(x991)*(x998)))+(((IkReal(-1.00000000000000))*(px)))+(((sj5)*(x989)*(x996)))+(((IkReal(-1.00000000000000))*(r00)*(x1003)))+(((IkReal(0.0716400000000000))*(r00)*(x1000))));
evalcond[6]=((IkReal(0.125830000000000))+(((IkReal(0.0716400000000000))*(x994)))+(((IkReal(0.0716400000000000))*(x1002)))+(((IkReal(-1.00000000000000))*(r10)*(x1003)))+(((x991)*(x994)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x1001)))+(((x1002)*(x991)))+(((x995)*(x996)))+(((r11)*(x991)*(x998)))+(((IkReal(0.115380000000000))*(cj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1004=((r00)*(sj6));
IkReal x1005=((cj6)*(r01));
IkReal x1006=((IkReal(1.00000000000000))*(r02));
IkReal x1007=((IkReal(1.00000000000000))*(cj4)*(sj5));
if( IKabs(((((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x1006)))+(((cj6)*(r00)*(sj4)))+(((IkReal(-1.00000000000000))*(x1005)*(x1007)))+(((IkReal(-1.00000000000000))*(x1004)*(x1007)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj5)*(x1004)))+(((cj5)*(x1005)))+(((IkReal(-1.00000000000000))*(sj5)*(x1006))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x1006)))+(((cj6)*(r00)*(sj4)))+(((IkReal(-1.00000000000000))*(x1005)*(x1007)))+(((IkReal(-1.00000000000000))*(x1004)*(x1007)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(sj6)))))+IKsqr(((((cj5)*(x1004)))+(((cj5)*(x1005)))+(((IkReal(-1.00000000000000))*(sj5)*(x1006)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x1006)))+(((cj6)*(r00)*(sj4)))+(((IkReal(-1.00000000000000))*(x1005)*(x1007)))+(((IkReal(-1.00000000000000))*(x1004)*(x1007)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(sj6)))), ((((cj5)*(x1004)))+(((cj5)*(x1005)))+(((IkReal(-1.00000000000000))*(sj5)*(x1006)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1008=IKsin(j3);
IkReal x1009=IKcos(j3);
IkReal x1010=((IkReal(1.00000000000000))*(r00));
IkReal x1011=((cj5)*(sj6));
IkReal x1012=((cj6)*(sj4));
IkReal x1013=((IkReal(1.00000000000000))*(r10));
IkReal x1014=((cj4)*(cj5));
IkReal x1015=((IkReal(1.00000000000000))*(r20));
IkReal x1016=((sj4)*(sj6));
IkReal x1017=((IkReal(1.00000000000000))*(x1009));
IkReal x1018=((cj4)*(sj5)*(sj6));
IkReal x1019=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x1020=((cj4)*(cj6)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1011)*(x1015)))+(((IkReal(-1.00000000000000))*(r21)*(x1019)))+(((r22)*(sj5)))+(((sj2)*(x1008))));
evalcond[1]=((((cj2)*(x1008)))+(((IkReal(-1.00000000000000))*(x1011)*(x1013)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1019))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1010)*(x1011)))+(x1009)+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x1019))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1012)*(x1015)))+(((r21)*(x1020)))+(((r22)*(x1014)))+(((r21)*(x1016)))+(((r20)*(x1018)))+(((IkReal(-1.00000000000000))*(sj2)*(x1017))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1012)*(x1013)))+(((r11)*(x1020)))+(((IkReal(-1.00000000000000))*(cj2)*(x1017)))+(((r12)*(x1014)))+(((r10)*(x1018)))+(((r11)*(x1016))));
evalcond[5]=((((r01)*(x1020)))+(((IkReal(-1.00000000000000))*(x1010)*(x1012)))+(x1008)+(((r02)*(x1014)))+(((r01)*(x1016)))+(((r00)*(x1018))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1021=((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30);
IkReal x1022=((r22)*(sj5));
IkReal x1023=((cj5)*(cj6)*(r21));
IkReal x1024=((IkReal(1.00000000000000))*(cj1)*(cj2));
IkReal x1025=((IkReal(1.00000000000000))*(cj5)*(sj2));
IkReal x1026=((cj5)*(r20)*(sj6));
if( IKabs(((x1021)*(((x1026)+(x1023)+(((IkReal(-1.00000000000000))*(x1022))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1021)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1023)*(x1024)))+(((cj1)*(cj2)*(x1022)))+(((IkReal(-1.00000000000000))*(x1024)*(x1026)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1025)))+(((r02)*(sj2)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1025))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1021)*(((x1026)+(x1023)+(((IkReal(-1.00000000000000))*(x1022)))))))+IKsqr(((x1021)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1023)*(x1024)))+(((cj1)*(cj2)*(x1022)))+(((IkReal(-1.00000000000000))*(x1024)*(x1026)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1025)))+(((r02)*(sj2)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1025)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x1021)*(((x1026)+(x1023)+(((IkReal(-1.00000000000000))*(x1022)))))), ((x1021)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1023)*(x1024)))+(((cj1)*(cj2)*(x1022)))+(((IkReal(-1.00000000000000))*(x1024)*(x1026)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1025)))+(((r02)*(sj2)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1025)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1027=IKsin(j3);
IkReal x1028=IKcos(j3);
IkReal x1029=((IkReal(1.00000000000000))*(r00));
IkReal x1030=((cj5)*(sj6));
IkReal x1031=((cj6)*(sj4));
IkReal x1032=((IkReal(1.00000000000000))*(r10));
IkReal x1033=((cj4)*(cj5));
IkReal x1034=((IkReal(1.00000000000000))*(cj2));
IkReal x1035=((IkReal(1.00000000000000))*(r20));
IkReal x1036=((sj4)*(sj6));
IkReal x1037=((IkReal(1.00000000000000))*(x1028));
IkReal x1038=((cj1)*(x1028));
IkReal x1039=((cj1)*(x1027));
IkReal x1040=((cj4)*(sj5)*(sj6));
IkReal x1041=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x1042=((sj1)*(x1027));
IkReal x1043=((cj4)*(cj6)*(sj5));
evalcond[0]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1030)*(x1035)))+(((IkReal(-1.00000000000000))*(r21)*(x1041)))+(((sj2)*(x1027))));
evalcond[1]=((x1038)+(((IkReal(-1.00000000000000))*(r11)*(x1041)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1030)*(x1032)))+(((IkReal(-1.00000000000000))*(x1034)*(x1042))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x1041)))+(((IkReal(-1.00000000000000))*(x1034)*(x1039)))+(((IkReal(-1.00000000000000))*(x1029)*(x1030)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(sj1)*(x1037))));
evalcond[3]=((((r22)*(x1033)))+(((r20)*(x1040)))+(((r21)*(x1036)))+(((r21)*(x1043)))+(((IkReal(-1.00000000000000))*(x1031)*(x1035)))+(((IkReal(-1.00000000000000))*(sj2)*(x1037))));
evalcond[4]=((x1039)+(((r11)*(x1043)))+(((cj2)*(sj1)*(x1028)))+(((r10)*(x1040)))+(((IkReal(-1.00000000000000))*(x1031)*(x1032)))+(((r11)*(x1036)))+(((r12)*(x1033))));
evalcond[5]=((((cj2)*(x1038)))+(((r02)*(x1033)))+(((IkReal(-1.00000000000000))*(x1029)*(x1031)))+(((r01)*(x1043)))+(((r00)*(x1040)))+(((IkReal(-1.00000000000000))*(x1042)))+(((r01)*(x1036))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1044=((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30);
IkReal x1045=((cj5)*(cj6));
IkReal x1046=((IkReal(1.00000000000000))*(sj5));
IkReal x1047=((cj5)*(sj6));
IkReal x1048=((cj2)*(sj1));
if( IKabs(((x1044)*(((((IkReal(-1.00000000000000))*(r22)*(x1046)))+(((r20)*(x1047)))+(((r21)*(x1045))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1044)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((r21)*(x1045)*(x1048)))+(((IkReal(-1.00000000000000))*(r22)*(x1046)*(x1048)))+(((r10)*(sj2)*(x1047)))+(((r20)*(x1047)*(x1048)))+(((IkReal(-1.00000000000000))*(r12)*(sj2)*(x1046)))+(((r11)*(sj2)*(x1045))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1044)*(((((IkReal(-1.00000000000000))*(r22)*(x1046)))+(((r20)*(x1047)))+(((r21)*(x1045)))))))+IKsqr(((x1044)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((r21)*(x1045)*(x1048)))+(((IkReal(-1.00000000000000))*(r22)*(x1046)*(x1048)))+(((r10)*(sj2)*(x1047)))+(((r20)*(x1047)*(x1048)))+(((IkReal(-1.00000000000000))*(r12)*(sj2)*(x1046)))+(((r11)*(sj2)*(x1045)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x1044)*(((((IkReal(-1.00000000000000))*(r22)*(x1046)))+(((r20)*(x1047)))+(((r21)*(x1045)))))), ((x1044)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((r21)*(x1045)*(x1048)))+(((IkReal(-1.00000000000000))*(r22)*(x1046)*(x1048)))+(((r10)*(sj2)*(x1047)))+(((r20)*(x1047)*(x1048)))+(((IkReal(-1.00000000000000))*(r12)*(sj2)*(x1046)))+(((r11)*(sj2)*(x1045)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1049=IKsin(j3);
IkReal x1050=IKcos(j3);
IkReal x1051=((IkReal(1.00000000000000))*(r00));
IkReal x1052=((cj5)*(sj6));
IkReal x1053=((cj6)*(sj4));
IkReal x1054=((IkReal(1.00000000000000))*(r10));
IkReal x1055=((cj4)*(cj5));
IkReal x1056=((IkReal(1.00000000000000))*(cj2));
IkReal x1057=((IkReal(1.00000000000000))*(r20));
IkReal x1058=((sj4)*(sj6));
IkReal x1059=((IkReal(1.00000000000000))*(x1050));
IkReal x1060=((cj1)*(x1050));
IkReal x1061=((cj1)*(x1049));
IkReal x1062=((cj4)*(sj5)*(sj6));
IkReal x1063=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x1064=((sj1)*(x1049));
IkReal x1065=((cj4)*(cj6)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1052)*(x1057)))+(((IkReal(-1.00000000000000))*(r21)*(x1063)))+(((r22)*(sj5)))+(((sj2)*(x1049))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1052)*(x1054)))+(x1060)+(((IkReal(-1.00000000000000))*(r11)*(x1063)))+(((IkReal(-1.00000000000000))*(x1056)*(x1064)))+(((r12)*(sj5))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x1063)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1056)*(x1061)))+(((IkReal(-1.00000000000000))*(sj1)*(x1059)))+(((IkReal(-1.00000000000000))*(x1051)*(x1052))));
evalcond[3]=((((r20)*(x1062)))+(((IkReal(-1.00000000000000))*(sj2)*(x1059)))+(((r21)*(x1058)))+(((r21)*(x1065)))+(((IkReal(-1.00000000000000))*(x1053)*(x1057)))+(((r22)*(x1055))));
evalcond[4]=((((r12)*(x1055)))+(((r11)*(x1058)))+(x1061)+(((r10)*(x1062)))+(((IkReal(-1.00000000000000))*(x1053)*(x1054)))+(((cj2)*(sj1)*(x1050)))+(((r11)*(x1065))));
evalcond[5]=((((r02)*(x1055)))+(((cj2)*(x1060)))+(((r01)*(x1058)))+(((r01)*(x1065)))+(((r00)*(x1062)))+(((IkReal(-1.00000000000000))*(x1064)))+(((IkReal(-1.00000000000000))*(x1051)*(x1053))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1066=((r20)*(sj6));
IkReal x1067=((cj4)*(sj5));
IkReal x1068=((cj6)*(r21));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)))+(((cj5)*(x1066)))+(((cj5)*(x1068))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((r21)*(sj4)*(sj6)))+(((x1066)*(x1067)))+(((x1067)*(x1068)))+(((cj4)*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)))+(((cj5)*(x1066)))+(((cj5)*(x1068)))))), ((gconst2)*(((((r21)*(sj4)*(sj6)))+(((x1066)*(x1067)))+(((x1067)*(x1068)))+(((cj4)*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj4)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1069=IKsin(j3);
IkReal x1070=IKcos(j3);
IkReal x1071=((IkReal(1.00000000000000))*(r00));
IkReal x1072=((cj5)*(sj6));
IkReal x1073=((cj6)*(sj4));
IkReal x1074=((IkReal(1.00000000000000))*(r10));
IkReal x1075=((cj4)*(cj5));
IkReal x1076=((IkReal(1.00000000000000))*(cj2));
IkReal x1077=((IkReal(1.00000000000000))*(r20));
IkReal x1078=((sj4)*(sj6));
IkReal x1079=((IkReal(1.00000000000000))*(x1070));
IkReal x1080=((cj1)*(x1070));
IkReal x1081=((cj1)*(x1069));
IkReal x1082=((cj4)*(sj5)*(sj6));
IkReal x1083=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x1084=((sj1)*(x1069));
IkReal x1085=((cj4)*(cj6)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x1083)))+(((sj2)*(x1069)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1072)*(x1077))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x1083)))+(x1080)+(((IkReal(-1.00000000000000))*(x1076)*(x1084)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1072)*(x1074))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1071)*(x1072)))+(((IkReal(-1.00000000000000))*(sj1)*(x1079)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x1083)))+(((IkReal(-1.00000000000000))*(x1076)*(x1081))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1073)*(x1077)))+(((IkReal(-1.00000000000000))*(sj2)*(x1079)))+(((r20)*(x1082)))+(((r22)*(x1075)))+(((r21)*(x1078)))+(((r21)*(x1085))));
evalcond[4]=((((cj2)*(sj1)*(x1070)))+(x1081)+(((r12)*(x1075)))+(((IkReal(-1.00000000000000))*(x1073)*(x1074)))+(((r10)*(x1082)))+(((r11)*(x1085)))+(((r11)*(x1078))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1071)*(x1073)))+(((r00)*(x1082)))+(((r01)*(x1085)))+(((IkReal(-1.00000000000000))*(x1084)))+(((r01)*(x1078)))+(((cj2)*(x1080)))+(((r02)*(x1075))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1086=((cj6)*(r21));
IkReal x1087=((r20)*(sj6));
IkReal x1088=((cj4)*(sj5));
if( IKabs(((gconst1)*(((((cj5)*(x1087)))+(((cj5)*(x1086)))+(((IkReal(-1.00000000000000))*(r22)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((r21)*(sj4)*(sj6)))+(((x1087)*(x1088)))+(((cj4)*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj4)))+(((x1086)*(x1088))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst1)*(((((cj5)*(x1087)))+(((cj5)*(x1086)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)))))), ((gconst1)*(((((r21)*(sj4)*(sj6)))+(((x1087)*(x1088)))+(((cj4)*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj4)))+(((x1086)*(x1088)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x1089=((r20)*(sj6));
IkReal x1090=((cj4)*(sj5));
IkReal x1091=((IkReal(1.00000000000000))*(cj5));
IkReal x1092=((cj6)*(r21));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1091)*(x1092)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1089)*(x1091)))+(((sj2)*(IKsin(j3)))));
evalcond[1]=((((r21)*(sj4)*(sj6)))+(((x1089)*(x1090)))+(((IkReal(-1.00000000000000))*(sj2)*(IKcos(j3))))+(((cj4)*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj4)))+(((x1090)*(x1092))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((cj3)*(cj3))+((((cj2)*(cj2))*((sj3)*(sj3))))));
dummyeval[0]=(((cj3)*(cj3))+((((cj2)*(cj2))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x1093=(cj3)*(cj3);
IkReal x1094=(sj3)*(sj3);
dummyeval[0]=((((cj2)*(x1094)))+(((cj2)*(x1093))));
dummyeval[1]=((((IkReal(-1.00000000000000))*(x1093)))+(((IkReal(-1.00000000000000))*(x1094))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj2;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1095=((cj5)*(r22));
IkReal x1096=((IkReal(0.0975200000000000))*(cj4));
IkReal x1097=((IkReal(1.00000000000000))*(cj5));
IkReal x1098=((r20)*(sj6));
IkReal x1099=((IkReal(1.00000000000000))*(sj4));
IkReal x1100=((cj6)*(sj5));
IkReal x1101=((sj5)*(sj6));
IkReal x1102=((cj6)*(r20));
IkReal x1103=((IkReal(0.0975200000000000))*(sj4));
IkReal x1104=((cj4)*(sj6));
IkReal x1105=((r21)*(sj6));
IkReal x1106=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1097)*(x1098)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1097))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj4)*(x1102)))+(((IkReal(-1.00000000000000))*(x1095)*(x1099)))+(((r21)*(x1104)))+(((IkReal(-1.00000000000000))*(sj5)*(x1098)*(x1099)))+(((IkReal(-1.00000000000000))*(r21)*(x1099)*(x1100))));
evalcond[3]=((((cj4)*(x1095)))+(((cj4)*(r21)*(x1100)))+(((sj4)*(x1105)))+(((IkReal(-1.00000000000000))*(x1099)*(x1102)))+(((cj4)*(sj5)*(x1098))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x1106)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x1097)))+(((r01)*(x1104)))+(((IkReal(-1.00000000000000))*(r01)*(x1099)*(x1100)))+(((IkReal(-1.00000000000000))*(r00)*(x1099)*(x1101))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r12)*(sj4)*(x1097)))+(((IkReal(-1.00000000000000))*(r10)*(x1099)*(x1101)))+(((IkReal(-1.00000000000000))*(r11)*(x1099)*(x1100)))+(((r11)*(x1104)))+(((IkReal(-1.00000000000000))*(r10)*(x1106))));
evalcond[6]=((((x1095)*(x1096)))+(((IkReal(0.0716400000000000))*(x1095)))+(((IkReal(0.0716400000000000))*(r21)*(x1100)))+(((r21)*(x1096)*(x1100)))+(((IkReal(-1.00000000000000))*(pz)))+(((sj5)*(x1096)*(x1098)))+(((IkReal(0.0716400000000000))*(sj5)*(x1098)))+(((x1103)*(x1105)))+(((IkReal(-1.00000000000000))*(x1102)*(x1103))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1107=((IkReal(1.00000000000000))*(sj6));
IkReal x1108=((sj3)*(sj4));
IkReal x1109=((cj3)*(r10));
IkReal x1110=((cj4)*(sj5));
IkReal x1111=((cj3)*(r11));
IkReal x1112=((cj5)*(cj6));
IkReal x1113=((r12)*(sj5));
IkReal x1114=((r10)*(sj3));
IkReal x1115=((IkReal(1.00000000000000))*(cj3));
IkReal x1116=((IkReal(1.00000000000000))*(cj6));
IkReal x1117=((IkReal(1.00000000000000))*(sj3));
IkReal x1118=((cj4)*(cj5)*(r12));
if( IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(r11)*(x1112)*(x1117)))+(((sj3)*(x1113)))+(((cj6)*(sj4)*(x1109)))+(((IkReal(-1.00000000000000))*(sj4)*(x1107)*(x1111)))+(((IkReal(-1.00000000000000))*(cj5)*(x1107)*(x1114)))+(((IkReal(-1.00000000000000))*(x1107)*(x1109)*(x1110)))+(((IkReal(-1.00000000000000))*(x1115)*(x1118)))+(((IkReal(-1.00000000000000))*(x1110)*(x1111)*(x1116))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((x1111)*(x1112)))+(((cj5)*(sj6)*(x1109)))+(((IkReal(-1.00000000000000))*(r11)*(sj3)*(x1110)*(x1116)))+(((IkReal(-1.00000000000000))*(x1107)*(x1110)*(x1114)))+(((IkReal(-1.00000000000000))*(x1113)*(x1115)))+(((cj6)*(r10)*(x1108)))+(((IkReal(-1.00000000000000))*(r11)*(x1107)*(x1108)))+(((IkReal(-1.00000000000000))*(x1117)*(x1118))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst9)*(((((IkReal(-1.00000000000000))*(r11)*(x1112)*(x1117)))+(((sj3)*(x1113)))+(((cj6)*(sj4)*(x1109)))+(((IkReal(-1.00000000000000))*(sj4)*(x1107)*(x1111)))+(((IkReal(-1.00000000000000))*(cj5)*(x1107)*(x1114)))+(((IkReal(-1.00000000000000))*(x1107)*(x1109)*(x1110)))+(((IkReal(-1.00000000000000))*(x1115)*(x1118)))+(((IkReal(-1.00000000000000))*(x1110)*(x1111)*(x1116)))))), ((gconst9)*(((((x1111)*(x1112)))+(((cj5)*(sj6)*(x1109)))+(((IkReal(-1.00000000000000))*(r11)*(sj3)*(x1110)*(x1116)))+(((IkReal(-1.00000000000000))*(x1107)*(x1110)*(x1114)))+(((IkReal(-1.00000000000000))*(x1113)*(x1115)))+(((cj6)*(r10)*(x1108)))+(((IkReal(-1.00000000000000))*(r11)*(x1107)*(x1108)))+(((IkReal(-1.00000000000000))*(x1117)*(x1118)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1119=IKcos(j1);
IkReal x1120=IKsin(j1);
IkReal x1121=((r00)*(sj6));
IkReal x1122=((IkReal(0.0716400000000000))*(sj5));
IkReal x1123=((IkReal(1.00000000000000))*(cj5));
IkReal x1124=((cj6)*(sj4));
IkReal x1125=((IkReal(0.0975200000000000))*(r10));
IkReal x1126=((cj4)*(cj5));
IkReal x1127=((IkReal(0.0975200000000000))*(r11));
IkReal x1128=((sj4)*(sj6));
IkReal x1129=((cj6)*(r01));
IkReal x1130=((r10)*(sj6));
IkReal x1131=((cj4)*(sj5));
IkReal x1132=((cj6)*(r11));
IkReal x1133=((IkReal(0.0716400000000000))*(cj5));
IkReal x1134=((cj3)*(x1119));
IkReal x1135=((IkReal(1.00000000000000))*(x1120));
IkReal x1136=((sj3)*(x1119));
IkReal x1137=((sj3)*(x1135));
evalcond[0]=((x1134)+(((IkReal(-1.00000000000000))*(x1123)*(x1130)))+(((IkReal(-1.00000000000000))*(x1123)*(x1132)))+(((IkReal(-1.00000000000000))*(x1137)))+(((r12)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1121)*(x1123)))+(((IkReal(-1.00000000000000))*(x1123)*(x1129)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj3)*(x1135)))+(((IkReal(-1.00000000000000))*(x1136))));
evalcond[2]=((x1136)+(((x1130)*(x1131)))+(((x1131)*(x1132)))+(((IkReal(-1.00000000000000))*(r10)*(x1124)))+(((r12)*(x1126)))+(((r11)*(x1128)))+(((cj3)*(x1120))));
evalcond[3]=((x1134)+(((r01)*(x1128)))+(((x1121)*(x1131)))+(((x1129)*(x1131)))+(((IkReal(-1.00000000000000))*(r00)*(x1124)))+(((IkReal(-1.00000000000000))*(x1137)))+(((r02)*(x1126))));
evalcond[4]=((((IkReal(0.0135000000000000))*(x1120)))+(((IkReal(0.0975200000000000))*(r02)*(x1126)))+(((IkReal(0.0975200000000000))*(r01)*(x1128)))+(((x1121)*(x1122)))+(((IkReal(0.0975200000000000))*(x1121)*(x1131)))+(((IkReal(-0.241210000000000))*(x1119)))+(((IkReal(0.0975200000000000))*(x1129)*(x1131)))+(((IkReal(-1.00000000000000))*(px)))+(((x1122)*(x1129)))+(((r02)*(x1133)))+(((IkReal(-0.0975200000000000))*(r00)*(x1124))));
evalcond[5]=((((IkReal(-0.0135000000000000))*(x1119)))+(((x1127)*(x1128)))+(((sj6)*(x1125)*(x1131)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.241210000000000))*(x1120)))+(((r12)*(x1133)))+(((IkReal(0.0975200000000000))*(r12)*(x1126)))+(((x1122)*(x1130)))+(((x1122)*(x1132)))+(((IkReal(-1.00000000000000))*(x1124)*(x1125)))+(((cj6)*(x1127)*(x1131))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1138=((cj3)*(sj5));
IkReal x1139=((sj3)*(sj5));
IkReal x1140=((IkReal(1.00000000000000))*(r01));
IkReal x1141=((IkReal(1.00000000000000))*(cj5)*(sj6));
IkReal x1142=((cj3)*(cj5)*(cj6));
IkReal x1143=((cj5)*(cj6)*(sj3));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(x1140)*(x1142)))+(((IkReal(-1.00000000000000))*(r11)*(x1143)))+(((r12)*(x1139)))+(((r02)*(x1138)))+(((IkReal(-1.00000000000000))*(r10)*(sj3)*(x1141)))+(((IkReal(-1.00000000000000))*(cj3)*(r00)*(x1141))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(x1140)*(x1143)))+(((r11)*(x1142)))+(((IkReal(-1.00000000000000))*(r00)*(sj3)*(x1141)))+(((cj3)*(cj5)*(r10)*(sj6)))+(((r02)*(x1139)))+(((IkReal(-1.00000000000000))*(r12)*(x1138))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(x1140)*(x1142)))+(((IkReal(-1.00000000000000))*(r11)*(x1143)))+(((r12)*(x1139)))+(((r02)*(x1138)))+(((IkReal(-1.00000000000000))*(r10)*(sj3)*(x1141)))+(((IkReal(-1.00000000000000))*(cj3)*(r00)*(x1141)))))), ((gconst8)*(((((IkReal(-1.00000000000000))*(x1140)*(x1143)))+(((r11)*(x1142)))+(((IkReal(-1.00000000000000))*(r00)*(sj3)*(x1141)))+(((cj3)*(cj5)*(r10)*(sj6)))+(((r02)*(x1139)))+(((IkReal(-1.00000000000000))*(r12)*(x1138)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1144=IKcos(j1);
IkReal x1145=IKsin(j1);
IkReal x1146=((r00)*(sj6));
IkReal x1147=((IkReal(0.0716400000000000))*(sj5));
IkReal x1148=((IkReal(1.00000000000000))*(cj5));
IkReal x1149=((cj6)*(sj4));
IkReal x1150=((IkReal(0.0975200000000000))*(r10));
IkReal x1151=((cj4)*(cj5));
IkReal x1152=((IkReal(0.0975200000000000))*(r11));
IkReal x1153=((sj4)*(sj6));
IkReal x1154=((cj6)*(r01));
IkReal x1155=((r10)*(sj6));
IkReal x1156=((cj4)*(sj5));
IkReal x1157=((cj6)*(r11));
IkReal x1158=((IkReal(0.0716400000000000))*(cj5));
IkReal x1159=((cj3)*(x1144));
IkReal x1160=((IkReal(1.00000000000000))*(x1145));
IkReal x1161=((sj3)*(x1144));
IkReal x1162=((sj3)*(x1160));
evalcond[0]=((x1159)+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1148)*(x1155)))+(((IkReal(-1.00000000000000))*(x1148)*(x1157)))+(((IkReal(-1.00000000000000))*(x1162))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1146)*(x1148)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj3)*(x1160)))+(((IkReal(-1.00000000000000))*(x1148)*(x1154)))+(((IkReal(-1.00000000000000))*(x1161))));
evalcond[2]=((x1161)+(((r11)*(x1153)))+(((r12)*(x1151)))+(((cj3)*(x1145)))+(((x1156)*(x1157)))+(((IkReal(-1.00000000000000))*(r10)*(x1149)))+(((x1155)*(x1156))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1149)))+(x1159)+(((x1146)*(x1156)))+(((r02)*(x1151)))+(((IkReal(-1.00000000000000))*(x1162)))+(((x1154)*(x1156)))+(((r01)*(x1153))));
evalcond[4]=((((IkReal(-0.0975200000000000))*(r00)*(x1149)))+(((x1146)*(x1147)))+(((IkReal(0.0975200000000000))*(x1146)*(x1156)))+(((IkReal(0.0975200000000000))*(r01)*(x1153)))+(((IkReal(0.0975200000000000))*(x1154)*(x1156)))+(((r02)*(x1158)))+(((IkReal(0.0975200000000000))*(r02)*(x1151)))+(((IkReal(-1.00000000000000))*(px)))+(((x1147)*(x1154)))+(((IkReal(0.0135000000000000))*(x1145)))+(((IkReal(-0.241210000000000))*(x1144))));
evalcond[5]=((((IkReal(-0.0135000000000000))*(x1144)))+(((sj6)*(x1150)*(x1156)))+(((IkReal(-1.00000000000000))*(x1149)*(x1150)))+(((IkReal(0.0975200000000000))*(r12)*(x1151)))+(((r12)*(x1158)))+(((x1152)*(x1153)))+(((IkReal(-1.00000000000000))*(py)))+(((x1147)*(x1157)))+(((x1147)*(x1155)))+(((cj6)*(x1152)*(x1156)))+(((IkReal(-0.241210000000000))*(x1145))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1163=((cj5)*(r22));
IkReal x1164=((IkReal(0.0975200000000000))*(cj4));
IkReal x1165=((IkReal(1.00000000000000))*(cj5));
IkReal x1166=((r20)*(sj6));
IkReal x1167=((IkReal(1.00000000000000))*(sj4));
IkReal x1168=((cj6)*(sj5));
IkReal x1169=((sj5)*(sj6));
IkReal x1170=((cj6)*(r20));
IkReal x1171=((IkReal(0.0975200000000000))*(sj4));
IkReal x1172=((cj4)*(sj6));
IkReal x1173=((r21)*(sj6));
IkReal x1174=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1165)))+(((IkReal(-1.00000000000000))*(x1165)*(x1166))));
evalcond[2]=((IkReal(-1.00000000000000))+(((r21)*(x1172)))+(((IkReal(-1.00000000000000))*(r21)*(x1167)*(x1168)))+(((IkReal(-1.00000000000000))*(x1163)*(x1167)))+(((IkReal(-1.00000000000000))*(cj4)*(x1170)))+(((IkReal(-1.00000000000000))*(sj5)*(x1166)*(x1167))));
evalcond[3]=((((cj4)*(sj5)*(x1166)))+(((cj4)*(x1163)))+(((sj4)*(x1173)))+(((IkReal(-1.00000000000000))*(x1167)*(x1170)))+(((cj4)*(r21)*(x1168))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r01)*(x1167)*(x1168)))+(((IkReal(-1.00000000000000))*(r00)*(x1167)*(x1169)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x1165)))+(((r01)*(x1172)))+(((IkReal(-1.00000000000000))*(r00)*(x1174))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r11)*(x1167)*(x1168)))+(((IkReal(-1.00000000000000))*(r10)*(x1167)*(x1169)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x1165)))+(((r11)*(x1172)))+(((IkReal(-1.00000000000000))*(r10)*(x1174))));
evalcond[6]=((((sj5)*(x1164)*(x1166)))+(((x1163)*(x1164)))+(((r21)*(x1164)*(x1168)))+(((IkReal(0.0716400000000000))*(sj5)*(x1166)))+(((IkReal(0.0716400000000000))*(x1163)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(x1170)*(x1171)))+(((IkReal(0.0716400000000000))*(r21)*(x1168)))+(((x1171)*(x1173))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1175=((IkReal(1.00000000000000))*(sj3));
IkReal x1176=((r12)*(sj5));
IkReal x1177=((cj3)*(cj6));
IkReal x1178=((cj4)*(sj5));
IkReal x1179=((r10)*(sj4));
IkReal x1180=((cj6)*(sj3));
IkReal x1181=((cj5)*(r11));
IkReal x1182=((r10)*(sj6));
IkReal x1183=((r11)*(sj4)*(sj6));
IkReal x1184=((cj4)*(cj5)*(r12));
if( IKabs(((gconst11)*(((((r11)*(x1177)*(x1178)))+(((x1180)*(x1181)))+(((cj3)*(x1178)*(x1182)))+(((IkReal(-1.00000000000000))*(x1177)*(x1179)))+(((IkReal(-1.00000000000000))*(x1175)*(x1176)))+(((cj5)*(sj3)*(x1182)))+(((cj3)*(x1184)))+(((cj3)*(x1183))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(x1175)*(x1183)))+(((IkReal(-1.00000000000000))*(x1175)*(x1184)))+(((IkReal(-1.00000000000000))*(cj3)*(x1176)))+(((x1179)*(x1180)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1175)*(x1178)))+(((cj3)*(cj5)*(x1182)))+(((x1177)*(x1181)))+(((IkReal(-1.00000000000000))*(x1175)*(x1178)*(x1182))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst11)*(((((r11)*(x1177)*(x1178)))+(((x1180)*(x1181)))+(((cj3)*(x1178)*(x1182)))+(((IkReal(-1.00000000000000))*(x1177)*(x1179)))+(((IkReal(-1.00000000000000))*(x1175)*(x1176)))+(((cj5)*(sj3)*(x1182)))+(((cj3)*(x1184)))+(((cj3)*(x1183)))))), ((gconst11)*(((((IkReal(-1.00000000000000))*(x1175)*(x1183)))+(((IkReal(-1.00000000000000))*(x1175)*(x1184)))+(((IkReal(-1.00000000000000))*(cj3)*(x1176)))+(((x1179)*(x1180)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1175)*(x1178)))+(((cj3)*(cj5)*(x1182)))+(((x1177)*(x1181)))+(((IkReal(-1.00000000000000))*(x1175)*(x1178)*(x1182)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1185=IKcos(j1);
IkReal x1186=IKsin(j1);
IkReal x1187=((cj5)*(r02));
IkReal x1188=((IkReal(1.00000000000000))*(r00));
IkReal x1189=((cj5)*(sj6));
IkReal x1190=((cj6)*(sj4));
IkReal x1191=((IkReal(0.0975200000000000))*(r10));
IkReal x1192=((IkReal(0.0975200000000000))*(cj4));
IkReal x1193=((cj5)*(r12));
IkReal x1194=((IkReal(1.00000000000000))*(r10));
IkReal x1195=((cj4)*(sj5));
IkReal x1196=((sj4)*(sj6));
IkReal x1197=((cj6)*(r01));
IkReal x1198=((sj3)*(x1185));
IkReal x1199=((IkReal(1.00000000000000))*(x1186));
IkReal x1200=((IkReal(0.0975200000000000))*(x1196));
IkReal x1201=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1202=((r10)*(sj5)*(sj6));
IkReal x1203=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x1204=((cj3)*(x1185));
IkReal x1205=((cj6)*(r11)*(sj5));
IkReal x1206=((r00)*(sj5)*(sj6));
IkReal x1207=((cj3)*(x1199));
evalcond[0]=((x1204)+(((IkReal(-1.00000000000000))*(x1189)*(x1194)))+(((sj3)*(x1186)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1203))));
evalcond[1]=((x1198)+(((IkReal(-1.00000000000000))*(x1188)*(x1189)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1207)))+(((IkReal(-1.00000000000000))*(cj5)*(x1197))));
evalcond[2]=((x1198)+(((IkReal(-1.00000000000000))*(x1190)*(x1194)))+(((cj4)*(x1193)))+(((r10)*(sj6)*(x1195)))+(((r11)*(x1196)))+(((IkReal(-1.00000000000000))*(x1207)))+(((cj6)*(r11)*(x1195))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj3)*(x1199)))+(((r01)*(x1196)))+(((x1195)*(x1197)))+(((IkReal(-1.00000000000000))*(x1188)*(x1190)))+(((cj4)*(x1187)))+(((IkReal(-1.00000000000000))*(x1204)))+(((r00)*(sj6)*(x1195))));
evalcond[4]=((((IkReal(-0.0975200000000000))*(r00)*(x1190)))+(((IkReal(0.0716400000000000))*(x1187)))+(((x1187)*(x1192)))+(((IkReal(0.0716400000000000))*(x1206)))+(((x1192)*(x1206)))+(((IkReal(-0.0104500000000000))*(x1185)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0716400000000000))*(sj5)*(x1197)))+(((r01)*(x1200)))+(((sj5)*(x1192)*(x1197)))+(((IkReal(0.0135000000000000))*(x1186))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1190)*(x1191)))+(((IkReal(0.0716400000000000))*(x1193)))+(((IkReal(0.0716400000000000))*(x1202)))+(((x1192)*(x1205)))+(((IkReal(-0.0104500000000000))*(x1186)))+(((IkReal(-0.0135000000000000))*(x1185)))+(((r11)*(x1201)))+(((r11)*(x1200)))+(((sj6)*(x1191)*(x1195)))+(((IkReal(-1.00000000000000))*(py)))+(((x1192)*(x1193))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1208=((r02)*(sj5));
IkReal x1209=((cj3)*(cj5));
IkReal x1210=((r00)*(sj6));
IkReal x1211=((cj6)*(r11));
IkReal x1212=((IkReal(1.00000000000000))*(sj3));
IkReal x1213=((r12)*(sj5));
IkReal x1214=((cj5)*(sj3));
IkReal x1215=((cj6)*(r01));
IkReal x1216=((r10)*(sj6));
if( IKabs(((gconst10)*(((((x1214)*(x1216)))+(((IkReal(-1.00000000000000))*(x1212)*(x1213)))+(((cj3)*(x1208)))+(((x1211)*(x1214)))+(((IkReal(-1.00000000000000))*(x1209)*(x1210)))+(((IkReal(-1.00000000000000))*(x1209)*(x1215))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((x1214)*(x1215)))+(((IkReal(-1.00000000000000))*(x1208)*(x1212)))+(((x1210)*(x1214)))+(((IkReal(-1.00000000000000))*(cj3)*(x1213)))+(((x1209)*(x1211)))+(((x1209)*(x1216))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst10)*(((((x1214)*(x1216)))+(((IkReal(-1.00000000000000))*(x1212)*(x1213)))+(((cj3)*(x1208)))+(((x1211)*(x1214)))+(((IkReal(-1.00000000000000))*(x1209)*(x1210)))+(((IkReal(-1.00000000000000))*(x1209)*(x1215)))))), ((gconst10)*(((((x1214)*(x1215)))+(((IkReal(-1.00000000000000))*(x1208)*(x1212)))+(((x1210)*(x1214)))+(((IkReal(-1.00000000000000))*(cj3)*(x1213)))+(((x1209)*(x1211)))+(((x1209)*(x1216)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1217=IKcos(j1);
IkReal x1218=IKsin(j1);
IkReal x1219=((cj5)*(r02));
IkReal x1220=((IkReal(1.00000000000000))*(r00));
IkReal x1221=((cj5)*(sj6));
IkReal x1222=((cj6)*(sj4));
IkReal x1223=((IkReal(0.0975200000000000))*(r10));
IkReal x1224=((IkReal(0.0975200000000000))*(cj4));
IkReal x1225=((cj5)*(r12));
IkReal x1226=((IkReal(1.00000000000000))*(r10));
IkReal x1227=((cj4)*(sj5));
IkReal x1228=((sj4)*(sj6));
IkReal x1229=((cj6)*(r01));
IkReal x1230=((sj3)*(x1217));
IkReal x1231=((IkReal(1.00000000000000))*(x1218));
IkReal x1232=((IkReal(0.0975200000000000))*(x1228));
IkReal x1233=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1234=((r10)*(sj5)*(sj6));
IkReal x1235=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x1236=((cj3)*(x1217));
IkReal x1237=((cj6)*(r11)*(sj5));
IkReal x1238=((r00)*(sj5)*(sj6));
IkReal x1239=((cj3)*(x1231));
evalcond[0]=((x1236)+(((IkReal(-1.00000000000000))*(x1221)*(x1226)))+(((IkReal(-1.00000000000000))*(r11)*(x1235)))+(((sj3)*(x1218)))+(((r12)*(sj5))));
evalcond[1]=((x1230)+(((IkReal(-1.00000000000000))*(x1239)))+(((IkReal(-1.00000000000000))*(x1220)*(x1221)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x1229))));
evalcond[2]=((x1230)+(((IkReal(-1.00000000000000))*(x1239)))+(((r10)*(sj6)*(x1227)))+(((IkReal(-1.00000000000000))*(x1222)*(x1226)))+(((cj4)*(x1225)))+(((r11)*(x1228)))+(((cj6)*(r11)*(x1227))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1236)))+(((r01)*(x1228)))+(((r00)*(sj6)*(x1227)))+(((cj4)*(x1219)))+(((IkReal(-1.00000000000000))*(x1220)*(x1222)))+(((IkReal(-1.00000000000000))*(sj3)*(x1231)))+(((x1227)*(x1229))));
evalcond[4]=((((IkReal(-0.0104500000000000))*(x1217)))+(((IkReal(-0.0975200000000000))*(r00)*(x1222)))+(((IkReal(0.0716400000000000))*(x1219)))+(((r01)*(x1232)))+(((x1219)*(x1224)))+(((x1224)*(x1238)))+(((IkReal(-1.00000000000000))*(px)))+(((sj5)*(x1224)*(x1229)))+(((IkReal(0.0716400000000000))*(x1238)))+(((IkReal(0.0135000000000000))*(x1218)))+(((IkReal(0.0716400000000000))*(sj5)*(x1229))));
evalcond[5]=((((IkReal(-0.0104500000000000))*(x1218)))+(((sj6)*(x1223)*(x1227)))+(((x1224)*(x1225)))+(((x1224)*(x1237)))+(((IkReal(-1.00000000000000))*(x1222)*(x1223)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0716400000000000))*(x1234)))+(((IkReal(0.0716400000000000))*(x1225)))+(((IkReal(-0.0135000000000000))*(x1217)))+(((r11)*(x1232)))+(((r11)*(x1233))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1240=((cj5)*(r22));
IkReal x1241=((IkReal(0.0975200000000000))*(cj4));
IkReal x1242=((r20)*(sj6));
IkReal x1243=((IkReal(1.00000000000000))*(cj5));
IkReal x1244=((IkReal(1.00000000000000))*(sj4));
IkReal x1245=((cj6)*(r20));
IkReal x1246=((IkReal(0.0975200000000000))*(sj4));
IkReal x1247=((r21)*(sj6));
IkReal x1248=((cj6)*(r21)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((sj2)+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1242)*(x1243)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1243))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj5)*(x1242)*(x1244)))+(((IkReal(-1.00000000000000))*(x1244)*(x1248)))+(cj2)+(((cj4)*(x1247)))+(((IkReal(-1.00000000000000))*(x1240)*(x1244)))+(((IkReal(-1.00000000000000))*(cj4)*(x1245))));
evalcond[3]=((((cj4)*(sj5)*(x1242)))+(((IkReal(-1.00000000000000))*(x1244)*(x1245)))+(((cj4)*(x1240)))+(((cj4)*(x1248)))+(((sj4)*(x1247))));
evalcond[4]=((((IkReal(0.0716400000000000))*(sj5)*(x1242)))+(((IkReal(-1.00000000000000))*(x1245)*(x1246)))+(((x1240)*(x1241)))+(((IkReal(-1.00000000000000))*(pz)))+(((x1246)*(x1247)))+(((x1241)*(x1248)))+(((IkReal(0.115380000000000))*(sj2)))+(((sj5)*(x1241)*(x1242)))+(((IkReal(0.0716400000000000))*(x1240)))+(((IkReal(0.0716400000000000))*(x1248))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(cj2);
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1249=((cj5)*(r22));
IkReal x1250=((IkReal(0.0975200000000000))*(cj4));
IkReal x1251=((IkReal(1.00000000000000))*(sj4));
IkReal x1252=((cj4)*(r20));
IkReal x1253=((sj5)*(sj6));
IkReal x1254=((IkReal(1.00000000000000))*(cj6));
IkReal x1255=((cj6)*(r20));
IkReal x1256=((IkReal(0.0975200000000000))*(sj4));
IkReal x1257=((r21)*(sj6));
IkReal x1258=((IkReal(1.00000000000000))*(cj5)*(sj6));
IkReal x1259=((cj6)*(r21)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r20)*(x1258)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1254)))+(((r22)*(sj5))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1254)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r10)*(x1258))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1258)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1254))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1249)*(x1251)))+(((IkReal(-1.00000000000000))*(r20)*(x1251)*(x1253)))+(((IkReal(-1.00000000000000))*(x1252)*(x1254)))+(((IkReal(-1.00000000000000))*(x1251)*(x1259)))+(((cj4)*(x1257))));
evalcond[5]=((((cj4)*(x1249)))+(((sj4)*(x1257)))+(((x1252)*(x1253)))+(((IkReal(-1.00000000000000))*(x1251)*(x1255)))+(((cj4)*(x1259))));
evalcond[6]=((IkReal(0.115380000000000))+(((r20)*(x1250)*(x1253)))+(((IkReal(0.0716400000000000))*(x1259)))+(((x1256)*(x1257)))+(((IkReal(-1.00000000000000))*(x1255)*(x1256)))+(((IkReal(-1.00000000000000))*(pz)))+(((x1250)*(x1259)))+(((IkReal(0.0716400000000000))*(r20)*(x1253)))+(((x1249)*(x1250)))+(((IkReal(0.0716400000000000))*(x1249))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1260=((cj6)*(sj4));
IkReal x1261=((cj4)*(cj5));
IkReal x1262=((sj4)*(sj6));
IkReal x1263=((IkReal(1.00000000000000))*(r11));
IkReal x1264=((cj4)*(sj5)*(sj6));
IkReal x1265=((cj4)*(cj6)*(sj5));
if( IKabs(((((IkReal(-1.00000000000000))*(r00)*(x1260)))+(((r02)*(x1261)))+(((r00)*(x1264)))+(((r01)*(x1265)))+(((r01)*(x1262))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r10)*(x1264)))+(((r10)*(x1260)))+(((IkReal(-1.00000000000000))*(x1263)*(x1265)))+(((IkReal(-1.00000000000000))*(x1262)*(x1263)))+(((IkReal(-1.00000000000000))*(r12)*(x1261))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r00)*(x1260)))+(((r02)*(x1261)))+(((r00)*(x1264)))+(((r01)*(x1265)))+(((r01)*(x1262)))))+IKsqr(((((IkReal(-1.00000000000000))*(r10)*(x1264)))+(((r10)*(x1260)))+(((IkReal(-1.00000000000000))*(x1263)*(x1265)))+(((IkReal(-1.00000000000000))*(x1262)*(x1263)))+(((IkReal(-1.00000000000000))*(r12)*(x1261)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r00)*(x1260)))+(((r02)*(x1261)))+(((r00)*(x1264)))+(((r01)*(x1265)))+(((r01)*(x1262)))), ((((IkReal(-1.00000000000000))*(r10)*(x1264)))+(((r10)*(x1260)))+(((IkReal(-1.00000000000000))*(x1263)*(x1265)))+(((IkReal(-1.00000000000000))*(x1262)*(x1263)))+(((IkReal(-1.00000000000000))*(r12)*(x1261)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1266=IKcos(j1);
IkReal x1267=IKsin(j1);
IkReal x1268=((IkReal(0.0975200000000000))*(sj4));
IkReal x1269=((cj6)*(r10));
IkReal x1270=((r11)*(sj6));
IkReal x1271=((cj4)*(cj5));
IkReal x1272=((cj6)*(sj5));
IkReal x1273=((IkReal(1.00000000000000))*(sj4));
IkReal x1274=((IkReal(0.0716400000000000))*(cj5));
IkReal x1275=((cj4)*(r11));
IkReal x1276=((IkReal(0.0975200000000000))*(cj4));
IkReal x1277=((r01)*(sj6));
IkReal x1278=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x1279=((cj5)*(x1273));
IkReal x1280=((r10)*(sj5)*(sj6));
IkReal x1281=((r00)*(sj5)*(sj6));
evalcond[0]=((x1266)+(((IkReal(-1.00000000000000))*(x1273)*(x1281)))+(((IkReal(-1.00000000000000))*(r02)*(x1279)))+(((IkReal(-1.00000000000000))*(cj4)*(x1278)))+(((IkReal(-1.00000000000000))*(r01)*(x1272)*(x1273)))+(((cj4)*(x1277))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x1272)*(x1273)))+(x1267)+(((IkReal(-1.00000000000000))*(cj4)*(x1269)))+(((IkReal(-1.00000000000000))*(r12)*(x1279)))+(((IkReal(-1.00000000000000))*(x1273)*(x1280)))+(((cj4)*(x1270))));
evalcond[2]=((x1266)+(((r12)*(x1271)))+(((cj4)*(x1280)))+(((x1272)*(x1275)))+(((sj4)*(x1270)))+(((IkReal(-1.00000000000000))*(x1269)*(x1273))));
evalcond[3]=((((cj4)*(x1281)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1273)))+(((r02)*(x1271)))+(((sj4)*(x1277)))+(((cj4)*(r01)*(x1272)))+(((IkReal(-1.00000000000000))*(x1267))));
evalcond[4]=((((IkReal(0.0716400000000000))*(x1281)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1268)))+(((r02)*(x1274)))+(((r01)*(x1272)*(x1276)))+(((IkReal(0.0975200000000000))*(r02)*(x1271)))+(((IkReal(-1.00000000000000))*(px)))+(((x1276)*(x1281)))+(((x1268)*(x1277)))+(((IkReal(-0.125830000000000))*(x1266)))+(((IkReal(0.0716400000000000))*(r01)*(x1272)))+(((IkReal(0.0135000000000000))*(x1267))));
evalcond[5]=((((IkReal(0.0975200000000000))*(x1272)*(x1275)))+(((r12)*(x1274)))+(((IkReal(-1.00000000000000))*(x1268)*(x1269)))+(((IkReal(0.0716400000000000))*(x1280)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0975200000000000))*(r12)*(x1271)))+(((x1276)*(x1280)))+(((IkReal(-0.0135000000000000))*(x1266)))+(((IkReal(0.0716400000000000))*(r11)*(x1272)))+(((x1268)*(x1270)))+(((IkReal(-0.125830000000000))*(x1267))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1282=((cj5)*(r22));
IkReal x1283=((IkReal(0.0975200000000000))*(cj4));
IkReal x1284=((IkReal(1.00000000000000))*(sj4));
IkReal x1285=((cj4)*(r20));
IkReal x1286=((sj5)*(sj6));
IkReal x1287=((IkReal(1.00000000000000))*(cj6));
IkReal x1288=((cj6)*(r20));
IkReal x1289=((IkReal(0.0975200000000000))*(sj4));
IkReal x1290=((r21)*(sj6));
IkReal x1291=((IkReal(1.00000000000000))*(cj5)*(sj6));
IkReal x1292=((cj6)*(r21)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r20)*(x1291)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1287))));
evalcond[2]=((((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1287)))+(((IkReal(-1.00000000000000))*(r10)*(x1291))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1291)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1287)))+(((r02)*(sj5))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1284)*(x1292)))+(((IkReal(-1.00000000000000))*(x1285)*(x1287)))+(((IkReal(-1.00000000000000))*(r20)*(x1284)*(x1286)))+(((cj4)*(x1290)))+(((IkReal(-1.00000000000000))*(x1282)*(x1284))));
evalcond[5]=((((x1285)*(x1286)))+(((cj4)*(x1282)))+(((IkReal(-1.00000000000000))*(x1284)*(x1288)))+(((sj4)*(x1290)))+(((cj4)*(x1292))));
evalcond[6]=((IkReal(-0.115380000000000))+(((IkReal(0.0716400000000000))*(r20)*(x1286)))+(((r20)*(x1283)*(x1286)))+(((IkReal(0.0716400000000000))*(x1282)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(x1292)))+(((IkReal(-1.00000000000000))*(x1288)*(x1289)))+(((x1282)*(x1283)))+(((x1283)*(x1292)))+(((x1289)*(x1290))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1293=((cj6)*(sj4));
IkReal x1294=((cj4)*(cj5));
IkReal x1295=((sj4)*(sj6));
IkReal x1296=((IkReal(1.00000000000000))*(r11));
IkReal x1297=((cj4)*(sj5)*(sj6));
IkReal x1298=((cj4)*(cj6)*(sj5));
if( IKabs(((((IkReal(-1.00000000000000))*(r00)*(x1293)))+(((r02)*(x1294)))+(((r01)*(x1298)))+(((r01)*(x1295)))+(((r00)*(x1297))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1295)*(x1296)))+(((IkReal(-1.00000000000000))*(r10)*(x1297)))+(((IkReal(-1.00000000000000))*(r12)*(x1294)))+(((IkReal(-1.00000000000000))*(x1296)*(x1298)))+(((r10)*(x1293))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r00)*(x1293)))+(((r02)*(x1294)))+(((r01)*(x1298)))+(((r01)*(x1295)))+(((r00)*(x1297)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1295)*(x1296)))+(((IkReal(-1.00000000000000))*(r10)*(x1297)))+(((IkReal(-1.00000000000000))*(r12)*(x1294)))+(((IkReal(-1.00000000000000))*(x1296)*(x1298)))+(((r10)*(x1293)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r00)*(x1293)))+(((r02)*(x1294)))+(((r01)*(x1298)))+(((r01)*(x1295)))+(((r00)*(x1297)))), ((((IkReal(-1.00000000000000))*(x1295)*(x1296)))+(((IkReal(-1.00000000000000))*(r10)*(x1297)))+(((IkReal(-1.00000000000000))*(r12)*(x1294)))+(((IkReal(-1.00000000000000))*(x1296)*(x1298)))+(((r10)*(x1293)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1299=IKcos(j1);
IkReal x1300=IKsin(j1);
IkReal x1301=((IkReal(0.0975200000000000))*(sj4));
IkReal x1302=((cj6)*(r10));
IkReal x1303=((r11)*(sj6));
IkReal x1304=((cj4)*(cj5));
IkReal x1305=((cj6)*(sj5));
IkReal x1306=((IkReal(1.00000000000000))*(sj4));
IkReal x1307=((IkReal(0.0716400000000000))*(cj5));
IkReal x1308=((cj4)*(r11));
IkReal x1309=((IkReal(0.0975200000000000))*(cj4));
IkReal x1310=((r01)*(sj6));
IkReal x1311=((IkReal(1.00000000000000))*(x1300));
IkReal x1312=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x1313=((cj5)*(x1306));
IkReal x1314=((r10)*(sj5)*(sj6));
IkReal x1315=((r00)*(sj5)*(sj6));
evalcond[0]=((((cj4)*(x1310)))+(((IkReal(-1.00000000000000))*(x1306)*(x1315)))+(((IkReal(-1.00000000000000))*(r01)*(x1305)*(x1306)))+(((IkReal(-1.00000000000000))*(cj4)*(x1312)))+(((IkReal(-1.00000000000000))*(r02)*(x1313)))+(((IkReal(-1.00000000000000))*(x1299))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj4)*(x1302)))+(((IkReal(-1.00000000000000))*(r11)*(x1305)*(x1306)))+(((IkReal(-1.00000000000000))*(x1306)*(x1314)))+(((cj4)*(x1303)))+(((IkReal(-1.00000000000000))*(x1311)))+(((IkReal(-1.00000000000000))*(r12)*(x1313))));
evalcond[2]=((x1299)+(((x1305)*(x1308)))+(((cj4)*(x1314)))+(((r12)*(x1304)))+(((sj4)*(x1303)))+(((IkReal(-1.00000000000000))*(x1302)*(x1306))));
evalcond[3]=((((cj4)*(x1315)))+(((cj4)*(r01)*(x1305)))+(((IkReal(-1.00000000000000))*(x1311)))+(((sj4)*(x1310)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1306)))+(((r02)*(x1304))));
evalcond[4]=((((IkReal(0.0975200000000000))*(r02)*(x1304)))+(((r01)*(x1305)*(x1309)))+(((x1309)*(x1315)))+(((IkReal(0.0716400000000000))*(x1315)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0716400000000000))*(r01)*(x1305)))+(((IkReal(0.0135000000000000))*(x1300)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1301)))+(((r02)*(x1307)))+(((x1301)*(x1310)))+(((IkReal(-0.125830000000000))*(x1299))));
evalcond[5]=((((IkReal(0.0975200000000000))*(x1305)*(x1308)))+(((IkReal(0.0975200000000000))*(r12)*(x1304)))+(((IkReal(0.0716400000000000))*(r11)*(x1305)))+(((IkReal(-0.125830000000000))*(x1300)))+(((r12)*(x1307)))+(((x1309)*(x1314)))+(((IkReal(-0.0135000000000000))*(x1299)))+(((IkReal(0.0716400000000000))*(x1314)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x1301)*(x1302)))+(((x1301)*(x1303))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1316=((IkReal(1.00000000000000))*(sj6));
IkReal x1317=((cj4)*(sj5));
IkReal x1318=((IkReal(1.00000000000000))*(cj5));
IkReal x1319=((cj6)*(r11));
if( IKabs(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj5)*(r10)*(x1316)))+(((IkReal(-1.00000000000000))*(x1318)*(x1319)))+(((r12)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1317)*(x1319)))+(((cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(r10)*(x1316)*(x1317)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1318)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(x1316))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj5)*(r10)*(x1316)))+(((IkReal(-1.00000000000000))*(x1318)*(x1319)))+(((r12)*(sj5)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1317)*(x1319)))+(((cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(r10)*(x1316)*(x1317)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1318)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(x1316)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj5)*(r10)*(x1316)))+(((IkReal(-1.00000000000000))*(x1318)*(x1319)))+(((r12)*(sj5)))))), ((((IkReal(-1.00000000000000))*(x1317)*(x1319)))+(((cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(r10)*(x1316)*(x1317)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1318)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(x1316)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1320=IKcos(j1);
IkReal x1321=IKsin(j1);
IkReal x1322=((IkReal(1.00000000000000))*(cj2));
IkReal x1323=((IkReal(1.00000000000000))*(r00));
IkReal x1324=((cj4)*(cj6));
IkReal x1325=((cj5)*(sj6));
IkReal x1326=((IkReal(0.115380000000000))*(cj2));
IkReal x1327=((cj6)*(sj4));
IkReal x1328=((IkReal(0.0975200000000000))*(r10));
IkReal x1329=((cj5)*(r02));
IkReal x1330=((IkReal(1.00000000000000))*(sj4));
IkReal x1331=((IkReal(0.0975200000000000))*(cj4));
IkReal x1332=((cj5)*(r12));
IkReal x1333=((IkReal(0.0975200000000000))*(r11));
IkReal x1334=((sj4)*(sj6));
IkReal x1335=((IkReal(1.00000000000000))*(sj5));
IkReal x1336=((IkReal(1.00000000000000))*(r10));
IkReal x1337=((cj4)*(sj6));
IkReal x1338=((r00)*(sj5));
IkReal x1339=((IkReal(0.0975200000000000))*(r01));
IkReal x1340=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1341=((r10)*(sj5)*(sj6));
IkReal x1342=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1325)*(x1336)))+(((IkReal(-1.00000000000000))*(r11)*(x1342)))+(((IkReal(-1.00000000000000))*(x1321)*(x1322)))+(((r12)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1323)*(x1325)))+(((IkReal(-1.00000000000000))*(r01)*(x1342)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1320)*(x1322))));
evalcond[2]=((((sj2)*(x1320)))+(((IkReal(-1.00000000000000))*(x1323)*(x1324)))+(((r01)*(x1337)))+(((IkReal(-1.00000000000000))*(r01)*(x1327)*(x1335)))+(((IkReal(-1.00000000000000))*(x1329)*(x1330)))+(((IkReal(-1.00000000000000))*(sj5)*(x1323)*(x1334))));
evalcond[3]=((((sj2)*(x1321)))+(((r11)*(x1337)))+(((IkReal(-1.00000000000000))*(x1324)*(x1336)))+(((IkReal(-1.00000000000000))*(x1330)*(x1332)))+(((IkReal(-1.00000000000000))*(r11)*(x1327)*(x1335)))+(((IkReal(-1.00000000000000))*(x1330)*(x1341))));
evalcond[4]=((((cj4)*(x1332)))+(x1320)+(((IkReal(-1.00000000000000))*(x1327)*(x1336)))+(((r11)*(x1334)))+(((r11)*(sj5)*(x1324)))+(((r10)*(sj5)*(x1337))));
evalcond[5]=((((x1337)*(x1338)))+(((IkReal(-1.00000000000000))*(x1323)*(x1327)))+(((cj4)*(x1329)))+(((r01)*(sj5)*(x1324)))+(((IkReal(-1.00000000000000))*(x1321)))+(((r01)*(x1334))));
evalcond[6]=((((IkReal(-0.0975200000000000))*(r00)*(x1327)))+(((x1329)*(x1331)))+(((IkReal(-0.125830000000000))*(x1320)))+(((IkReal(0.0716400000000000))*(sj6)*(x1338)))+(((sj6)*(x1331)*(x1338)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0135000000000000))*(x1321)))+(((IkReal(0.0716400000000000))*(x1329)))+(((r01)*(x1340)))+(((sj5)*(x1324)*(x1339)))+(((x1334)*(x1339)))+(((IkReal(-1.00000000000000))*(x1320)*(x1326))));
evalcond[7]=((((IkReal(0.0716400000000000))*(x1332)))+(((sj5)*(x1328)*(x1337)))+(((IkReal(-0.125830000000000))*(x1321)))+(((x1331)*(x1332)))+(((IkReal(-1.00000000000000))*(x1327)*(x1328)))+(((IkReal(0.0716400000000000))*(x1341)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x1321)*(x1326)))+(((IkReal(-0.0135000000000000))*(x1320)))+(((r11)*(x1340)))+(((sj5)*(x1324)*(x1333)))+(((x1333)*(x1334))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1343=((r00)*(sj6));
IkReal x1344=((cj4)*(sj5));
IkReal x1345=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((((cj6)*(r01)*(x1344)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x1345)))+(((x1343)*(x1344))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj5)*(x1343)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1345)))+(((r02)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj6)*(r01)*(x1344)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x1345)))+(((x1343)*(x1344)))))+IKsqr(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj5)*(x1343)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1345)))+(((r02)*(sj5)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((cj6)*(r01)*(x1344)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x1345)))+(((x1343)*(x1344)))), ((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj5)*(x1343)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1345)))+(((r02)*(sj5)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1346=IKcos(j1);
IkReal x1347=IKsin(j1);
IkReal x1348=((IkReal(1.00000000000000))*(cj2));
IkReal x1349=((IkReal(1.00000000000000))*(r00));
IkReal x1350=((cj4)*(cj6));
IkReal x1351=((cj5)*(sj6));
IkReal x1352=((IkReal(0.115380000000000))*(cj2));
IkReal x1353=((cj6)*(sj4));
IkReal x1354=((IkReal(0.0975200000000000))*(r10));
IkReal x1355=((cj5)*(r02));
IkReal x1356=((IkReal(1.00000000000000))*(sj4));
IkReal x1357=((IkReal(0.0975200000000000))*(cj4));
IkReal x1358=((cj5)*(r12));
IkReal x1359=((IkReal(0.0975200000000000))*(r11));
IkReal x1360=((sj4)*(sj6));
IkReal x1361=((IkReal(1.00000000000000))*(sj5));
IkReal x1362=((IkReal(1.00000000000000))*(r10));
IkReal x1363=((cj4)*(sj6));
IkReal x1364=((r00)*(sj5));
IkReal x1365=((IkReal(0.0975200000000000))*(r01));
IkReal x1366=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1367=((r10)*(sj5)*(sj6));
IkReal x1368=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x1368)))+(((IkReal(-1.00000000000000))*(x1347)*(x1348)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1351)*(x1362))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1346)*(x1348)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x1368)))+(((IkReal(-1.00000000000000))*(x1349)*(x1351))));
evalcond[2]=((((sj2)*(x1346)))+(((IkReal(-1.00000000000000))*(r01)*(x1353)*(x1361)))+(((IkReal(-1.00000000000000))*(sj5)*(x1349)*(x1360)))+(((IkReal(-1.00000000000000))*(x1355)*(x1356)))+(((r01)*(x1363)))+(((IkReal(-1.00000000000000))*(x1349)*(x1350))));
evalcond[3]=((((sj2)*(x1347)))+(((IkReal(-1.00000000000000))*(x1350)*(x1362)))+(((IkReal(-1.00000000000000))*(x1356)*(x1358)))+(((r11)*(x1363)))+(((IkReal(-1.00000000000000))*(x1356)*(x1367)))+(((IkReal(-1.00000000000000))*(r11)*(x1353)*(x1361))));
evalcond[4]=((x1346)+(((IkReal(-1.00000000000000))*(x1353)*(x1362)))+(((r11)*(sj5)*(x1350)))+(((cj4)*(x1358)))+(((r11)*(x1360)))+(((r10)*(sj5)*(x1363))));
evalcond[5]=((((x1363)*(x1364)))+(((r01)*(sj5)*(x1350)))+(((cj4)*(x1355)))+(((r01)*(x1360)))+(((IkReal(-1.00000000000000))*(x1349)*(x1353)))+(((IkReal(-1.00000000000000))*(x1347))));
evalcond[6]=((((x1355)*(x1357)))+(((IkReal(0.0716400000000000))*(sj6)*(x1364)))+(((IkReal(0.0716400000000000))*(x1355)))+(((x1360)*(x1365)))+(((IkReal(-0.0975200000000000))*(r00)*(x1353)))+(((IkReal(-1.00000000000000))*(x1346)*(x1352)))+(((IkReal(0.0135000000000000))*(x1347)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.125830000000000))*(x1346)))+(((sj6)*(x1357)*(x1364)))+(((sj5)*(x1350)*(x1365)))+(((r01)*(x1366))));
evalcond[7]=((((sj5)*(x1354)*(x1363)))+(((x1357)*(x1358)))+(((IkReal(-0.0135000000000000))*(x1346)))+(((IkReal(0.0716400000000000))*(x1358)))+(((IkReal(0.0716400000000000))*(x1367)))+(((x1359)*(x1360)))+(((IkReal(-1.00000000000000))*(x1347)*(x1352)))+(((IkReal(-1.00000000000000))*(py)))+(((sj5)*(x1350)*(x1359)))+(((IkReal(-0.125830000000000))*(x1347)))+(((r11)*(x1366)))+(((IkReal(-1.00000000000000))*(x1353)*(x1354))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1369=((IkReal(1.00000000000000))*(cj5)*(sj6));
IkReal x1370=((IkReal(1.00000000000000))*(cj5)*(cj6));
if( IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(r11)*(x1370)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r10)*(x1369))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(r01)*(x1370)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(x1369))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst12)*(((((IkReal(-1.00000000000000))*(r11)*(x1370)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r10)*(x1369)))))), ((gconst12)*(((((IkReal(-1.00000000000000))*(r01)*(x1370)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(x1369)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1371=IKcos(j1);
IkReal x1372=IKsin(j1);
IkReal x1373=((IkReal(1.00000000000000))*(cj2));
IkReal x1374=((IkReal(1.00000000000000))*(r00));
IkReal x1375=((cj4)*(cj6));
IkReal x1376=((cj5)*(sj6));
IkReal x1377=((IkReal(0.115380000000000))*(cj2));
IkReal x1378=((cj6)*(sj4));
IkReal x1379=((IkReal(0.0975200000000000))*(r10));
IkReal x1380=((cj5)*(r02));
IkReal x1381=((IkReal(1.00000000000000))*(sj4));
IkReal x1382=((IkReal(0.0975200000000000))*(cj4));
IkReal x1383=((cj5)*(r12));
IkReal x1384=((IkReal(0.0975200000000000))*(r11));
IkReal x1385=((sj4)*(sj6));
IkReal x1386=((IkReal(1.00000000000000))*(sj5));
IkReal x1387=((IkReal(1.00000000000000))*(r10));
IkReal x1388=((cj4)*(sj6));
IkReal x1389=((r00)*(sj5));
IkReal x1390=((IkReal(0.0975200000000000))*(r01));
IkReal x1391=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1392=((r10)*(sj5)*(sj6));
IkReal x1393=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1376)*(x1387)))+(((IkReal(-1.00000000000000))*(x1372)*(x1373)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1393))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1371)*(x1373)))+(((IkReal(-1.00000000000000))*(r01)*(x1393)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1374)*(x1376))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x1378)*(x1386)))+(((sj2)*(x1371)))+(((IkReal(-1.00000000000000))*(x1374)*(x1375)))+(((IkReal(-1.00000000000000))*(x1380)*(x1381)))+(((IkReal(-1.00000000000000))*(sj5)*(x1374)*(x1385)))+(((r01)*(x1388))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1375)*(x1387)))+(((sj2)*(x1372)))+(((IkReal(-1.00000000000000))*(x1381)*(x1392)))+(((IkReal(-1.00000000000000))*(x1381)*(x1383)))+(((r11)*(x1388)))+(((IkReal(-1.00000000000000))*(r11)*(x1378)*(x1386))));
evalcond[4]=((x1371)+(((cj4)*(x1383)))+(((r11)*(x1385)))+(((IkReal(-1.00000000000000))*(x1378)*(x1387)))+(((r11)*(sj5)*(x1375)))+(((r10)*(sj5)*(x1388))));
evalcond[5]=((((r01)*(sj5)*(x1375)))+(((x1388)*(x1389)))+(((IkReal(-1.00000000000000))*(x1372)))+(((IkReal(-1.00000000000000))*(x1374)*(x1378)))+(((cj4)*(x1380)))+(((r01)*(x1385))));
evalcond[6]=((((x1380)*(x1382)))+(((sj6)*(x1382)*(x1389)))+(((IkReal(0.0716400000000000))*(x1380)))+(((IkReal(-1.00000000000000))*(x1371)*(x1377)))+(((sj5)*(x1375)*(x1390)))+(((IkReal(-0.125830000000000))*(x1371)))+(((IkReal(0.0716400000000000))*(sj6)*(x1389)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x1391)))+(((IkReal(0.0135000000000000))*(x1372)))+(((x1385)*(x1390)))+(((IkReal(-0.0975200000000000))*(r00)*(x1378))));
evalcond[7]=((((sj5)*(x1379)*(x1388)))+(((IkReal(0.0716400000000000))*(x1383)))+(((IkReal(0.0716400000000000))*(x1392)))+(((IkReal(-0.125830000000000))*(x1372)))+(((sj5)*(x1375)*(x1384)))+(((IkReal(-1.00000000000000))*(x1372)*(x1377)))+(((IkReal(-0.0135000000000000))*(x1371)))+(((IkReal(-1.00000000000000))*(py)))+(((x1384)*(x1385)))+(((r11)*(x1391)))+(((IkReal(-1.00000000000000))*(x1378)*(x1379)))+(((x1382)*(x1383))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1394=((cj5)*(r22));
IkReal x1395=((IkReal(0.0975200000000000))*(cj4));
IkReal x1396=((r20)*(sj6));
IkReal x1397=((IkReal(1.00000000000000))*(cj5));
IkReal x1398=((IkReal(1.00000000000000))*(sj4));
IkReal x1399=((cj6)*(r20));
IkReal x1400=((IkReal(0.0975200000000000))*(sj4));
IkReal x1401=((r21)*(sj6));
IkReal x1402=((cj6)*(r21)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1397)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1396)*(x1397))));
evalcond[2]=((cj2)+(((IkReal(-1.00000000000000))*(x1394)*(x1398)))+(((IkReal(-1.00000000000000))*(x1398)*(x1402)))+(((cj4)*(x1401)))+(((IkReal(-1.00000000000000))*(sj5)*(x1396)*(x1398)))+(((IkReal(-1.00000000000000))*(cj4)*(x1399))));
evalcond[3]=((((cj4)*(x1402)))+(((cj4)*(x1394)))+(((cj4)*(sj5)*(x1396)))+(((IkReal(-1.00000000000000))*(x1398)*(x1399)))+(((sj4)*(x1401))));
evalcond[4]=((((sj5)*(x1395)*(x1396)))+(((IkReal(-1.00000000000000))*(x1399)*(x1400)))+(((IkReal(0.0716400000000000))*(x1394)))+(((x1394)*(x1395)))+(((x1395)*(x1402)))+(((IkReal(0.0716400000000000))*(sj5)*(x1396)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.115380000000000))*(sj2)))+(((IkReal(0.0716400000000000))*(x1402)))+(((x1400)*(x1401))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign(cj2);
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1403=((cj5)*(r22));
IkReal x1404=((IkReal(0.0975200000000000))*(cj4));
IkReal x1405=((IkReal(1.00000000000000))*(sj4));
IkReal x1406=((cj4)*(r20));
IkReal x1407=((sj5)*(sj6));
IkReal x1408=((IkReal(1.00000000000000))*(cj6));
IkReal x1409=((cj6)*(r20));
IkReal x1410=((IkReal(0.0975200000000000))*(sj4));
IkReal x1411=((r21)*(sj6));
IkReal x1412=((IkReal(1.00000000000000))*(cj5)*(sj6));
IkReal x1413=((cj6)*(r21)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1408)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r20)*(x1412))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x1412)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1408))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1408)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(x1412))));
evalcond[4]=((((cj4)*(x1411)))+(((IkReal(-1.00000000000000))*(x1406)*(x1408)))+(((IkReal(-1.00000000000000))*(r20)*(x1405)*(x1407)))+(((IkReal(-1.00000000000000))*(x1405)*(x1413)))+(((IkReal(-1.00000000000000))*(x1403)*(x1405))));
evalcond[5]=((((cj4)*(x1413)))+(((cj4)*(x1403)))+(((IkReal(-1.00000000000000))*(x1405)*(x1409)))+(((sj4)*(x1411)))+(((x1406)*(x1407))));
evalcond[6]=((IkReal(0.115380000000000))+(((r20)*(x1404)*(x1407)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(x1413)))+(((x1404)*(x1413)))+(((x1403)*(x1404)))+(((x1410)*(x1411)))+(((IkReal(0.0716400000000000))*(r20)*(x1407)))+(((IkReal(-1.00000000000000))*(x1409)*(x1410)))+(((IkReal(0.0716400000000000))*(x1403))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1414=((cj4)*(sj5));
IkReal x1415=((cj4)*(cj5));
IkReal x1416=((cj6)*(sj4));
IkReal x1417=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1417)))+(((r00)*(x1416)))+(((IkReal(-1.00000000000000))*(r02)*(x1415)))+(((IkReal(-1.00000000000000))*(r00)*(x1414)*(x1417)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1414))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r11)*(x1414)))+(((IkReal(-1.00000000000000))*(r10)*(x1416)))+(((r10)*(sj6)*(x1414)))+(((r11)*(sj4)*(sj6)))+(((r12)*(x1415))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1417)))+(((r00)*(x1416)))+(((IkReal(-1.00000000000000))*(r02)*(x1415)))+(((IkReal(-1.00000000000000))*(r00)*(x1414)*(x1417)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1414)))))+IKsqr(((((cj6)*(r11)*(x1414)))+(((IkReal(-1.00000000000000))*(r10)*(x1416)))+(((r10)*(sj6)*(x1414)))+(((r11)*(sj4)*(sj6)))+(((r12)*(x1415)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1417)))+(((r00)*(x1416)))+(((IkReal(-1.00000000000000))*(r02)*(x1415)))+(((IkReal(-1.00000000000000))*(r00)*(x1414)*(x1417)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1414)))), ((((cj6)*(r11)*(x1414)))+(((IkReal(-1.00000000000000))*(r10)*(x1416)))+(((r10)*(sj6)*(x1414)))+(((r11)*(sj4)*(sj6)))+(((r12)*(x1415)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1418=IKcos(j1);
IkReal x1419=IKsin(j1);
IkReal x1420=((IkReal(0.0975200000000000))*(sj4));
IkReal x1421=((cj6)*(r10));
IkReal x1422=((r11)*(sj6));
IkReal x1423=((cj4)*(cj5));
IkReal x1424=((cj6)*(sj5));
IkReal x1425=((IkReal(1.00000000000000))*(sj4));
IkReal x1426=((IkReal(0.0716400000000000))*(cj5));
IkReal x1427=((cj4)*(r11));
IkReal x1428=((IkReal(0.0975200000000000))*(cj4));
IkReal x1429=((r01)*(sj6));
IkReal x1430=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x1431=((cj5)*(x1425));
IkReal x1432=((r10)*(sj5)*(sj6));
IkReal x1433=((r00)*(sj5)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r01)*(x1424)*(x1425)))+(((IkReal(-1.00000000000000))*(r02)*(x1431)))+(x1418)+(((IkReal(-1.00000000000000))*(cj4)*(x1430)))+(((IkReal(-1.00000000000000))*(x1425)*(x1433)))+(((cj4)*(x1429))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x1431)))+(((IkReal(-1.00000000000000))*(r11)*(x1424)*(x1425)))+(((IkReal(-1.00000000000000))*(cj4)*(x1421)))+(x1419)+(((IkReal(-1.00000000000000))*(x1425)*(x1432)))+(((cj4)*(x1422))));
evalcond[2]=((((x1424)*(x1427)))+(((IkReal(-1.00000000000000))*(x1421)*(x1425)))+(((cj4)*(x1432)))+(((sj4)*(x1422)))+(((r12)*(x1423)))+(((IkReal(-1.00000000000000))*(x1418))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1425)))+(((cj4)*(x1433)))+(((sj4)*(x1429)))+(((r02)*(x1423)))+(((cj4)*(r01)*(x1424)))+(x1419));
evalcond[4]=((((x1428)*(x1433)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1420)))+(((IkReal(0.0975200000000000))*(r02)*(x1423)))+(((x1420)*(x1429)))+(((IkReal(0.0716400000000000))*(r01)*(x1424)))+(((IkReal(-1.00000000000000))*(px)))+(((r02)*(x1426)))+(((IkReal(0.0135000000000000))*(x1419)))+(((IkReal(-0.125830000000000))*(x1418)))+(((r01)*(x1424)*(x1428)))+(((IkReal(0.0716400000000000))*(x1433))));
evalcond[5]=((((x1428)*(x1432)))+(((x1420)*(x1422)))+(((IkReal(0.0975200000000000))*(x1424)*(x1427)))+(((IkReal(0.0975200000000000))*(r12)*(x1423)))+(((IkReal(-1.00000000000000))*(x1420)*(x1421)))+(((IkReal(-0.0135000000000000))*(x1418)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0716400000000000))*(r11)*(x1424)))+(((IkReal(-0.125830000000000))*(x1419)))+(((r12)*(x1426)))+(((IkReal(0.0716400000000000))*(x1432))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1434=((cj5)*(r22));
IkReal x1435=((IkReal(0.0975200000000000))*(cj4));
IkReal x1436=((IkReal(1.00000000000000))*(sj4));
IkReal x1437=((cj4)*(r20));
IkReal x1438=((sj5)*(sj6));
IkReal x1439=((IkReal(1.00000000000000))*(cj6));
IkReal x1440=((cj6)*(r20));
IkReal x1441=((IkReal(0.0975200000000000))*(sj4));
IkReal x1442=((r21)*(sj6));
IkReal x1443=((IkReal(1.00000000000000))*(cj5)*(sj6));
IkReal x1444=((cj6)*(r21)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1439)))+(((IkReal(-1.00000000000000))*(r20)*(x1443)))+(((r22)*(sj5))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x1443)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1439))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1439)))+(((IkReal(-1.00000000000000))*(r00)*(x1443)))+(((r02)*(sj5))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1437)*(x1439)))+(((cj4)*(x1442)))+(((IkReal(-1.00000000000000))*(x1434)*(x1436)))+(((IkReal(-1.00000000000000))*(r20)*(x1436)*(x1438)))+(((IkReal(-1.00000000000000))*(x1436)*(x1444))));
evalcond[5]=((((cj4)*(x1444)))+(((sj4)*(x1442)))+(((x1437)*(x1438)))+(((cj4)*(x1434)))+(((IkReal(-1.00000000000000))*(x1436)*(x1440))));
evalcond[6]=((IkReal(-0.115380000000000))+(((IkReal(0.0716400000000000))*(x1444)))+(((x1435)*(x1444)))+(((x1441)*(x1442)))+(((x1434)*(x1435)))+(((r20)*(x1435)*(x1438)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(r20)*(x1438)))+(((IkReal(0.0716400000000000))*(x1434)))+(((IkReal(-1.00000000000000))*(x1440)*(x1441))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1445=((cj4)*(sj5));
IkReal x1446=((cj4)*(cj5));
IkReal x1447=((cj6)*(sj4));
IkReal x1448=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r02)*(x1446)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1445)))+(((IkReal(-1.00000000000000))*(r00)*(x1445)*(x1448)))+(((r00)*(x1447)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1448))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r12)*(x1446)))+(((r11)*(sj4)*(sj6)))+(((cj6)*(r11)*(x1445)))+(((IkReal(-1.00000000000000))*(r10)*(x1447)))+(((r10)*(sj6)*(x1445))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r02)*(x1446)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1445)))+(((IkReal(-1.00000000000000))*(r00)*(x1445)*(x1448)))+(((r00)*(x1447)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1448)))))+IKsqr(((((r12)*(x1446)))+(((r11)*(sj4)*(sj6)))+(((cj6)*(r11)*(x1445)))+(((IkReal(-1.00000000000000))*(r10)*(x1447)))+(((r10)*(sj6)*(x1445)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r02)*(x1446)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1445)))+(((IkReal(-1.00000000000000))*(r00)*(x1445)*(x1448)))+(((r00)*(x1447)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1448)))), ((((r12)*(x1446)))+(((r11)*(sj4)*(sj6)))+(((cj6)*(r11)*(x1445)))+(((IkReal(-1.00000000000000))*(r10)*(x1447)))+(((r10)*(sj6)*(x1445)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1449=IKsin(j1);
IkReal x1450=IKcos(j1);
IkReal x1451=((IkReal(0.0975200000000000))*(sj4));
IkReal x1452=((cj6)*(r10));
IkReal x1453=((r11)*(sj6));
IkReal x1454=((cj4)*(cj5));
IkReal x1455=((cj6)*(sj5));
IkReal x1456=((IkReal(1.00000000000000))*(sj4));
IkReal x1457=((IkReal(0.0716400000000000))*(cj5));
IkReal x1458=((cj4)*(r11));
IkReal x1459=((IkReal(0.0975200000000000))*(cj4));
IkReal x1460=((r01)*(sj6));
IkReal x1461=((IkReal(1.00000000000000))*(x1450));
IkReal x1462=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x1463=((cj5)*(x1456));
IkReal x1464=((r10)*(sj5)*(sj6));
IkReal x1465=((r00)*(sj5)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x1463)))+(((IkReal(-1.00000000000000))*(r01)*(x1455)*(x1456)))+(((IkReal(-1.00000000000000))*(x1461)))+(((IkReal(-1.00000000000000))*(x1456)*(x1465)))+(((cj4)*(x1460)))+(((IkReal(-1.00000000000000))*(cj4)*(x1462))));
evalcond[1]=((((cj4)*(x1453)))+(((IkReal(-1.00000000000000))*(x1456)*(x1464)))+(((IkReal(-1.00000000000000))*(x1449)))+(((IkReal(-1.00000000000000))*(r11)*(x1455)*(x1456)))+(((IkReal(-1.00000000000000))*(cj4)*(x1452)))+(((IkReal(-1.00000000000000))*(r12)*(x1463))));
evalcond[2]=((((x1455)*(x1458)))+(((IkReal(-1.00000000000000))*(x1461)))+(((cj4)*(x1464)))+(((r12)*(x1454)))+(((sj4)*(x1453)))+(((IkReal(-1.00000000000000))*(x1452)*(x1456))));
evalcond[3]=((((cj4)*(r01)*(x1455)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1456)))+(((cj4)*(x1465)))+(x1449)+(((sj4)*(x1460)))+(((r02)*(x1454))));
evalcond[4]=((((x1451)*(x1460)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1451)))+(((x1459)*(x1465)))+(((IkReal(0.0135000000000000))*(x1449)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.125830000000000))*(x1450)))+(((IkReal(0.0716400000000000))*(r01)*(x1455)))+(((IkReal(0.0716400000000000))*(x1465)))+(((r01)*(x1455)*(x1459)))+(((IkReal(0.0975200000000000))*(r02)*(x1454)))+(((r02)*(x1457))));
evalcond[5]=((((IkReal(0.0975200000000000))*(r12)*(x1454)))+(((x1459)*(x1464)))+(((r12)*(x1457)))+(((IkReal(-0.125830000000000))*(x1449)))+(((IkReal(0.0975200000000000))*(x1455)*(x1458)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.0135000000000000))*(x1450)))+(((IkReal(0.0716400000000000))*(x1464)))+(((IkReal(-1.00000000000000))*(x1451)*(x1452)))+(((IkReal(0.0716400000000000))*(r11)*(x1455)))+(((x1451)*(x1453))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1466=((r00)*(sj6));
IkReal x1467=((cj6)*(r01));
IkReal x1468=((IkReal(1.00000000000000))*(r02));
IkReal x1469=((IkReal(1.00000000000000))*(cj4)*(sj5));
if( IKabs(((((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x1468)))+(((IkReal(-1.00000000000000))*(x1467)*(x1469)))+(((cj6)*(r00)*(sj4)))+(((IkReal(-1.00000000000000))*(x1466)*(x1469)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((cj5)*(x1466)))+(((cj5)*(x1467)))+(((IkReal(-1.00000000000000))*(sj5)*(x1468))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x1468)))+(((IkReal(-1.00000000000000))*(x1467)*(x1469)))+(((cj6)*(r00)*(sj4)))+(((IkReal(-1.00000000000000))*(x1466)*(x1469)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(sj6)))))+IKsqr(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((cj5)*(x1466)))+(((cj5)*(x1467)))+(((IkReal(-1.00000000000000))*(sj5)*(x1468)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x1468)))+(((IkReal(-1.00000000000000))*(x1467)*(x1469)))+(((cj6)*(r00)*(sj4)))+(((IkReal(-1.00000000000000))*(x1466)*(x1469)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(sj6)))), ((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((cj5)*(x1466)))+(((cj5)*(x1467)))+(((IkReal(-1.00000000000000))*(sj5)*(x1468)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1470=IKcos(j1);
IkReal x1471=IKsin(j1);
IkReal x1472=((IkReal(1.00000000000000))*(r00));
IkReal x1473=((cj4)*(cj6));
IkReal x1474=((cj5)*(sj6));
IkReal x1475=((IkReal(0.115380000000000))*(cj2));
IkReal x1476=((cj6)*(sj4));
IkReal x1477=((IkReal(0.0975200000000000))*(r10));
IkReal x1478=((cj5)*(r02));
IkReal x1479=((IkReal(1.00000000000000))*(sj4));
IkReal x1480=((IkReal(0.0975200000000000))*(cj4));
IkReal x1481=((cj5)*(r12));
IkReal x1482=((IkReal(0.0975200000000000))*(r11));
IkReal x1483=((sj4)*(sj6));
IkReal x1484=((IkReal(1.00000000000000))*(sj5));
IkReal x1485=((IkReal(1.00000000000000))*(r10));
IkReal x1486=((cj4)*(sj6));
IkReal x1487=((r00)*(sj5));
IkReal x1488=((IkReal(0.0975200000000000))*(r01));
IkReal x1489=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1490=((r10)*(sj5)*(sj6));
IkReal x1491=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x1491)))+(((IkReal(-1.00000000000000))*(x1474)*(x1485)))+(((cj2)*(x1471)))+(((r12)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x1491)))+(((r02)*(sj5)))+(((cj2)*(x1470)))+(((IkReal(-1.00000000000000))*(x1472)*(x1474))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1478)*(x1479)))+(((r01)*(x1486)))+(((IkReal(-1.00000000000000))*(sj5)*(x1472)*(x1483)))+(((IkReal(-1.00000000000000))*(r01)*(x1476)*(x1484)))+(((sj2)*(x1470)))+(((IkReal(-1.00000000000000))*(x1472)*(x1473))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1479)*(x1490)))+(((IkReal(-1.00000000000000))*(x1479)*(x1481)))+(((IkReal(-1.00000000000000))*(r11)*(x1476)*(x1484)))+(((r11)*(x1486)))+(((sj2)*(x1471)))+(((IkReal(-1.00000000000000))*(x1473)*(x1485))));
evalcond[4]=((((r11)*(sj5)*(x1473)))+(((IkReal(-1.00000000000000))*(x1470)))+(((r11)*(x1483)))+(((cj4)*(x1481)))+(((r10)*(sj5)*(x1486)))+(((IkReal(-1.00000000000000))*(x1476)*(x1485))));
evalcond[5]=((((cj4)*(x1478)))+(((r01)*(x1483)))+(((x1486)*(x1487)))+(x1471)+(((r01)*(sj5)*(x1473)))+(((IkReal(-1.00000000000000))*(x1472)*(x1476))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1470)*(x1475)))+(((IkReal(0.0716400000000000))*(x1478)))+(((r01)*(x1489)))+(((IkReal(0.0135000000000000))*(x1471)))+(((IkReal(0.0716400000000000))*(sj6)*(x1487)))+(((IkReal(-0.125830000000000))*(x1470)))+(((sj6)*(x1480)*(x1487)))+(((IkReal(-1.00000000000000))*(px)))+(((x1483)*(x1488)))+(((sj5)*(x1473)*(x1488)))+(((x1478)*(x1480)))+(((IkReal(-0.0975200000000000))*(r00)*(x1476))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1471)*(x1475)))+(((x1482)*(x1483)))+(((x1480)*(x1481)))+(((IkReal(-1.00000000000000))*(x1476)*(x1477)))+(((IkReal(-0.125830000000000))*(x1471)))+(((r11)*(x1489)))+(((IkReal(-1.00000000000000))*(py)))+(((sj5)*(x1473)*(x1482)))+(((IkReal(0.0716400000000000))*(x1490)))+(((sj5)*(x1477)*(x1486)))+(((IkReal(0.0716400000000000))*(x1481)))+(((IkReal(-0.0135000000000000))*(x1470))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1492=((cj6)*(r11));
IkReal x1493=((cj4)*(sj5));
IkReal x1494=((r10)*(sj6));
if( IKabs(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((cj5)*(x1494)))+(((cj5)*(x1492)))+(((IkReal(-1.00000000000000))*(r12)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj4)))+(((cj4)*(cj5)*(r12)))+(((r11)*(sj4)*(sj6)))+(((x1492)*(x1493)))+(((x1493)*(x1494))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((cj5)*(x1494)))+(((cj5)*(x1492)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj4)))+(((cj4)*(cj5)*(r12)))+(((r11)*(sj4)*(sj6)))+(((x1492)*(x1493)))+(((x1493)*(x1494)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((cj5)*(x1494)))+(((cj5)*(x1492)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))), ((((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj4)))+(((cj4)*(cj5)*(r12)))+(((r11)*(sj4)*(sj6)))+(((x1492)*(x1493)))+(((x1493)*(x1494)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1495=IKcos(j1);
IkReal x1496=IKsin(j1);
IkReal x1497=((IkReal(1.00000000000000))*(r00));
IkReal x1498=((cj4)*(cj6));
IkReal x1499=((cj5)*(sj6));
IkReal x1500=((IkReal(0.115380000000000))*(cj2));
IkReal x1501=((cj6)*(sj4));
IkReal x1502=((IkReal(0.0975200000000000))*(r10));
IkReal x1503=((cj5)*(r02));
IkReal x1504=((IkReal(1.00000000000000))*(sj4));
IkReal x1505=((IkReal(0.0975200000000000))*(cj4));
IkReal x1506=((cj5)*(r12));
IkReal x1507=((IkReal(0.0975200000000000))*(r11));
IkReal x1508=((sj4)*(sj6));
IkReal x1509=((IkReal(1.00000000000000))*(sj5));
IkReal x1510=((IkReal(1.00000000000000))*(r10));
IkReal x1511=((cj4)*(sj6));
IkReal x1512=((r00)*(sj5));
IkReal x1513=((IkReal(0.0975200000000000))*(r01));
IkReal x1514=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1515=((r10)*(sj5)*(sj6));
IkReal x1516=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1499)*(x1510)))+(((cj2)*(x1496)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1516))));
evalcond[1]=((((cj2)*(x1495)))+(((IkReal(-1.00000000000000))*(r01)*(x1516)))+(((IkReal(-1.00000000000000))*(x1497)*(x1499)))+(((r02)*(sj5))));
evalcond[2]=((((sj2)*(x1495)))+(((IkReal(-1.00000000000000))*(sj5)*(x1497)*(x1508)))+(((r01)*(x1511)))+(((IkReal(-1.00000000000000))*(x1497)*(x1498)))+(((IkReal(-1.00000000000000))*(x1503)*(x1504)))+(((IkReal(-1.00000000000000))*(r01)*(x1501)*(x1509))));
evalcond[3]=((((sj2)*(x1496)))+(((IkReal(-1.00000000000000))*(x1498)*(x1510)))+(((IkReal(-1.00000000000000))*(x1504)*(x1506)))+(((r11)*(x1511)))+(((IkReal(-1.00000000000000))*(x1504)*(x1515)))+(((IkReal(-1.00000000000000))*(r11)*(x1501)*(x1509))));
evalcond[4]=((((r11)*(x1508)))+(((IkReal(-1.00000000000000))*(x1501)*(x1510)))+(((IkReal(-1.00000000000000))*(x1495)))+(((cj4)*(x1506)))+(((r11)*(sj5)*(x1498)))+(((r10)*(sj5)*(x1511))));
evalcond[5]=((((r01)*(x1508)))+(((cj4)*(x1503)))+(x1496)+(((IkReal(-1.00000000000000))*(x1497)*(x1501)))+(((r01)*(sj5)*(x1498)))+(((x1511)*(x1512))));
evalcond[6]=((((sj6)*(x1505)*(x1512)))+(((x1508)*(x1513)))+(((r01)*(x1514)))+(((IkReal(-0.125830000000000))*(x1495)))+(((IkReal(-1.00000000000000))*(px)))+(((sj5)*(x1498)*(x1513)))+(((IkReal(-0.0975200000000000))*(r00)*(x1501)))+(((IkReal(0.0716400000000000))*(x1503)))+(((IkReal(0.0716400000000000))*(sj6)*(x1512)))+(((x1503)*(x1505)))+(((IkReal(0.0135000000000000))*(x1496)))+(((IkReal(-1.00000000000000))*(x1495)*(x1500))));
evalcond[7]=((((r11)*(x1514)))+(((sj5)*(x1502)*(x1511)))+(((x1507)*(x1508)))+(((IkReal(-1.00000000000000))*(x1501)*(x1502)))+(((IkReal(-0.125830000000000))*(x1496)))+(((sj5)*(x1498)*(x1507)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0716400000000000))*(x1506)))+(((IkReal(0.0716400000000000))*(x1515)))+(((IkReal(-1.00000000000000))*(x1496)*(x1500)))+(((IkReal(-0.0135000000000000))*(x1495)))+(((x1505)*(x1506))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1517=((IkReal(1.00000000000000))*(sj5));
IkReal x1518=((cj5)*(cj6));
IkReal x1519=((cj5)*(sj6));
if( IKabs(((gconst13)*(((((r11)*(x1518)))+(((r10)*(x1519)))+(((IkReal(-1.00000000000000))*(r12)*(x1517))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((r01)*(x1518)))+(((r00)*(x1519)))+(((IkReal(-1.00000000000000))*(r02)*(x1517))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst13)*(((((r11)*(x1518)))+(((r10)*(x1519)))+(((IkReal(-1.00000000000000))*(r12)*(x1517)))))), ((gconst13)*(((((r01)*(x1518)))+(((r00)*(x1519)))+(((IkReal(-1.00000000000000))*(r02)*(x1517)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1520=IKcos(j1);
IkReal x1521=IKsin(j1);
IkReal x1522=((IkReal(1.00000000000000))*(r00));
IkReal x1523=((cj4)*(cj6));
IkReal x1524=((cj5)*(sj6));
IkReal x1525=((IkReal(0.115380000000000))*(cj2));
IkReal x1526=((cj6)*(sj4));
IkReal x1527=((IkReal(0.0975200000000000))*(r10));
IkReal x1528=((cj5)*(r02));
IkReal x1529=((IkReal(1.00000000000000))*(sj4));
IkReal x1530=((IkReal(0.0975200000000000))*(cj4));
IkReal x1531=((cj5)*(r12));
IkReal x1532=((IkReal(0.0975200000000000))*(r11));
IkReal x1533=((sj4)*(sj6));
IkReal x1534=((IkReal(1.00000000000000))*(sj5));
IkReal x1535=((IkReal(1.00000000000000))*(r10));
IkReal x1536=((cj4)*(sj6));
IkReal x1537=((r00)*(sj5));
IkReal x1538=((IkReal(0.0975200000000000))*(r01));
IkReal x1539=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1540=((r10)*(sj5)*(sj6));
IkReal x1541=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1524)*(x1535)))+(((cj2)*(x1521)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1541))));
evalcond[1]=((((cj2)*(x1520)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x1541)))+(((IkReal(-1.00000000000000))*(x1522)*(x1524))));
evalcond[2]=((((sj2)*(x1520)))+(((r01)*(x1536)))+(((IkReal(-1.00000000000000))*(sj5)*(x1522)*(x1533)))+(((IkReal(-1.00000000000000))*(x1528)*(x1529)))+(((IkReal(-1.00000000000000))*(x1522)*(x1523)))+(((IkReal(-1.00000000000000))*(r01)*(x1526)*(x1534))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1529)*(x1531)))+(((sj2)*(x1521)))+(((r11)*(x1536)))+(((IkReal(-1.00000000000000))*(r11)*(x1526)*(x1534)))+(((IkReal(-1.00000000000000))*(x1529)*(x1540)))+(((IkReal(-1.00000000000000))*(x1523)*(x1535))));
evalcond[4]=((((r10)*(sj5)*(x1536)))+(((r11)*(x1533)))+(((r11)*(sj5)*(x1523)))+(((cj4)*(x1531)))+(((IkReal(-1.00000000000000))*(x1526)*(x1535)))+(((IkReal(-1.00000000000000))*(x1520))));
evalcond[5]=((((r01)*(sj5)*(x1523)))+(((r01)*(x1533)))+(((x1536)*(x1537)))+(x1521)+(((IkReal(-1.00000000000000))*(x1522)*(x1526)))+(((cj4)*(x1528))));
evalcond[6]=((((IkReal(-0.125830000000000))*(x1520)))+(((x1528)*(x1530)))+(((r01)*(x1539)))+(((IkReal(-0.0975200000000000))*(r00)*(x1526)))+(((IkReal(-1.00000000000000))*(px)))+(((sj5)*(x1523)*(x1538)))+(((sj6)*(x1530)*(x1537)))+(((IkReal(0.0716400000000000))*(x1528)))+(((x1533)*(x1538)))+(((IkReal(-1.00000000000000))*(x1520)*(x1525)))+(((IkReal(0.0135000000000000))*(x1521)))+(((IkReal(0.0716400000000000))*(sj6)*(x1537))));
evalcond[7]=((((IkReal(-0.125830000000000))*(x1521)))+(((r11)*(x1539)))+(((x1530)*(x1531)))+(((IkReal(-0.0135000000000000))*(x1520)))+(((IkReal(0.0716400000000000))*(x1540)))+(((x1532)*(x1533)))+(((IkReal(-1.00000000000000))*(py)))+(((sj5)*(x1527)*(x1536)))+(((sj5)*(x1523)*(x1532)))+(((IkReal(-1.00000000000000))*(x1526)*(x1527)))+(((IkReal(0.0716400000000000))*(x1531)))+(((IkReal(-1.00000000000000))*(x1521)*(x1525))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1542=((cj5)*(r22));
IkReal x1543=((IkReal(0.0975200000000000))*(cj4));
IkReal x1544=((r20)*(sj6));
IkReal x1545=((IkReal(1.00000000000000))*(cj5));
IkReal x1546=((IkReal(1.00000000000000))*(sj4));
IkReal x1547=((cj6)*(r20));
IkReal x1548=((IkReal(0.0975200000000000))*(sj4));
IkReal x1549=((r21)*(sj6));
IkReal x1550=((cj6)*(r21)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1545)))+(sj3)+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1544)*(x1545))));
evalcond[2]=((((cj4)*(x1549)))+(((IkReal(-1.00000000000000))*(sj5)*(x1544)*(x1546)))+(((IkReal(-1.00000000000000))*(x1546)*(x1550)))+(((IkReal(-1.00000000000000))*(x1542)*(x1546)))+(((IkReal(-1.00000000000000))*(cj4)*(x1547))));
evalcond[3]=((((cj4)*(x1542)))+(((IkReal(-1.00000000000000))*(x1546)*(x1547)))+(((sj4)*(x1549)))+(((cj4)*(sj5)*(x1544)))+(((IkReal(-1.00000000000000))*(cj3)))+(((cj4)*(x1550))));
evalcond[4]=((IkReal(0.115380000000000))+(((sj5)*(x1543)*(x1544)))+(((IkReal(0.0716400000000000))*(x1550)))+(((IkReal(0.0716400000000000))*(sj5)*(x1544)))+(((IkReal(0.0716400000000000))*(x1542)))+(((x1543)*(x1550)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(x1547)*(x1548)))+(((x1548)*(x1549)))+(((x1542)*(x1543))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign(cj3);
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj3;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1551=((cj5)*(r22));
IkReal x1552=((IkReal(0.0975200000000000))*(cj4));
IkReal x1553=((r20)*(sj6));
IkReal x1554=((IkReal(1.00000000000000))*(cj5));
IkReal x1555=((IkReal(1.00000000000000))*(sj4));
IkReal x1556=((cj4)*(cj5));
IkReal x1557=((cj4)*(sj5));
IkReal x1558=((cj6)*(r20));
IkReal x1559=((IkReal(0.0975200000000000))*(sj4));
IkReal x1560=((cj6)*(r21));
IkReal x1561=((r21)*(sj6));
IkReal x1562=((sj4)*(sj6));
IkReal x1563=((sj5)*(x1560));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1553)*(x1554)))+(((IkReal(-1.00000000000000))*(x1554)*(x1560))));
evalcond[2]=((((cj4)*(x1561)))+(((IkReal(-1.00000000000000))*(x1555)*(x1563)))+(((IkReal(-1.00000000000000))*(sj5)*(x1553)*(x1555)))+(((IkReal(-1.00000000000000))*(x1551)*(x1555)))+(((IkReal(-1.00000000000000))*(cj4)*(x1558))));
evalcond[3]=((IkReal(-1.00000000000000))+(((x1553)*(x1557)))+(((sj4)*(x1561)))+(((IkReal(-1.00000000000000))*(x1555)*(x1558)))+(((x1557)*(x1560)))+(((cj4)*(x1551))));
evalcond[4]=((((r10)*(sj6)*(x1557)))+(((cj6)*(r11)*(x1557)))+(((r11)*(x1562)))+(((r12)*(x1556)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1555))));
evalcond[5]=((((r02)*(x1556)))+(((cj6)*(r01)*(x1557)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1555)))+(((r00)*(sj6)*(x1557)))+(((r01)*(x1562))));
evalcond[6]=((IkReal(0.115380000000000))+(((x1551)*(x1552)))+(((IkReal(-1.00000000000000))*(x1558)*(x1559)))+(((IkReal(0.0716400000000000))*(x1551)))+(((x1552)*(x1563)))+(((IkReal(0.0716400000000000))*(x1563)))+(((IkReal(0.0716400000000000))*(sj5)*(x1553)))+(((IkReal(-1.00000000000000))*(pz)))+(((x1559)*(x1561)))+(((sj5)*(x1552)*(x1553))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1564=((cj5)*(sj6));
IkReal x1565=((cj5)*(cj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(x1565)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(x1564))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r11)*(x1565)))+(((r10)*(x1564)))+(((IkReal(-1.00000000000000))*(r12)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(x1565)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(x1564)))))+IKsqr(((((r11)*(x1565)))+(((r10)*(x1564)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(x1565)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(x1564)))), ((((r11)*(x1565)))+(((r10)*(x1564)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1566=IKcos(j1);
IkReal x1567=IKsin(j1);
IkReal x1568=((IkReal(1.00000000000000))*(r00));
IkReal x1569=((sj4)*(sj6));
IkReal x1570=((cj4)*(cj6));
IkReal x1571=((cj5)*(sj6));
IkReal x1572=((cj6)*(sj4));
IkReal x1573=((IkReal(0.0975200000000000))*(r10));
IkReal x1574=((cj5)*(r02));
IkReal x1575=((IkReal(1.00000000000000))*(sj4));
IkReal x1576=((IkReal(0.0975200000000000))*(cj4));
IkReal x1577=((cj5)*(r12));
IkReal x1578=((IkReal(0.0975200000000000))*(r11));
IkReal x1579=((IkReal(1.00000000000000))*(sj5));
IkReal x1580=((IkReal(1.00000000000000))*(r10));
IkReal x1581=((sj5)*(sj6));
IkReal x1582=((cj4)*(sj6));
IkReal x1583=((IkReal(0.0975200000000000))*(r01));
IkReal x1584=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1585=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x1585)))+(((IkReal(-1.00000000000000))*(x1571)*(x1580)))+(x1566)+(((r12)*(sj5))));
evalcond[1]=((((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x1585)))+(((IkReal(-1.00000000000000))*(x1568)*(x1571)))+(((IkReal(-1.00000000000000))*(x1567))));
evalcond[2]=((((r01)*(x1582)))+(((IkReal(-1.00000000000000))*(sj5)*(x1568)*(x1569)))+(((IkReal(-1.00000000000000))*(x1568)*(x1570)))+(x1566)+(((IkReal(-1.00000000000000))*(x1574)*(x1575)))+(((IkReal(-1.00000000000000))*(r01)*(x1572)*(x1579))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1575)*(x1577)))+(((IkReal(-1.00000000000000))*(x1570)*(x1580)))+(((r11)*(x1582)))+(x1567)+(((IkReal(-1.00000000000000))*(r11)*(x1572)*(x1579)))+(((IkReal(-1.00000000000000))*(r10)*(x1569)*(x1579))));
evalcond[4]=((((r01)*(x1584)))+(((IkReal(-0.125830000000000))*(x1566)))+(((IkReal(0.0716400000000000))*(x1574)))+(((IkReal(-1.00000000000000))*(px)))+(((r00)*(x1576)*(x1581)))+(((IkReal(0.0716400000000000))*(r00)*(x1581)))+(((sj5)*(x1570)*(x1583)))+(((IkReal(-0.0975200000000000))*(r00)*(x1572)))+(((IkReal(0.0135000000000000))*(x1567)))+(((x1574)*(x1576)))+(((x1569)*(x1583))));
evalcond[5]=((((x1576)*(x1577)))+(((x1569)*(x1578)))+(((IkReal(-1.00000000000000))*(x1572)*(x1573)))+(((IkReal(-0.125830000000000))*(x1567)))+(((IkReal(0.0716400000000000))*(r10)*(x1581)))+(((IkReal(-0.0135000000000000))*(x1566)))+(((IkReal(0.0716400000000000))*(x1577)))+(((r11)*(x1584)))+(((IkReal(-1.00000000000000))*(py)))+(((sj5)*(x1570)*(x1578)))+(((cj4)*(x1573)*(x1581))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1586=((cj5)*(r22));
IkReal x1587=((IkReal(0.0975200000000000))*(cj4));
IkReal x1588=((r20)*(sj6));
IkReal x1589=((IkReal(1.00000000000000))*(cj5));
IkReal x1590=((IkReal(1.00000000000000))*(sj4));
IkReal x1591=((cj4)*(cj5));
IkReal x1592=((cj4)*(sj5));
IkReal x1593=((cj6)*(r20));
IkReal x1594=((IkReal(0.0975200000000000))*(sj4));
IkReal x1595=((cj6)*(r21));
IkReal x1596=((r21)*(sj6));
IkReal x1597=((sj4)*(sj6));
IkReal x1598=((sj5)*(x1595));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1588)*(x1589)))+(((IkReal(-1.00000000000000))*(x1589)*(x1595))));
evalcond[2]=((((cj4)*(x1596)))+(((IkReal(-1.00000000000000))*(cj4)*(x1593)))+(((IkReal(-1.00000000000000))*(sj5)*(x1588)*(x1590)))+(((IkReal(-1.00000000000000))*(x1590)*(x1598)))+(((IkReal(-1.00000000000000))*(x1586)*(x1590))));
evalcond[3]=((IkReal(1.00000000000000))+(((cj4)*(x1586)))+(((x1592)*(x1595)))+(((x1588)*(x1592)))+(((sj4)*(x1596)))+(((IkReal(-1.00000000000000))*(x1590)*(x1593))));
evalcond[4]=((((r10)*(sj6)*(x1592)))+(((cj6)*(r11)*(x1592)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1590)))+(((r12)*(x1591)))+(((r11)*(x1597))));
evalcond[5]=((((r00)*(sj6)*(x1592)))+(((r01)*(x1597)))+(((cj6)*(r01)*(x1592)))+(((r02)*(x1591)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1590))));
evalcond[6]=((IkReal(0.115380000000000))+(((x1586)*(x1587)))+(((x1587)*(x1598)))+(((x1594)*(x1596)))+(((IkReal(-1.00000000000000))*(x1593)*(x1594)))+(((IkReal(0.0716400000000000))*(sj5)*(x1588)))+(((IkReal(0.0716400000000000))*(x1586)))+(((IkReal(0.0716400000000000))*(x1598)))+(((IkReal(-1.00000000000000))*(pz)))+(((sj5)*(x1587)*(x1588))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1599=((cj5)*(sj6));
IkReal x1600=((cj5)*(cj6));
if( IKabs(((((r00)*(x1599)))+(((r01)*(x1600)))+(((IkReal(-1.00000000000000))*(r02)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r11)*(x1600)))+(((IkReal(-1.00000000000000))*(r10)*(x1599)))+(((r12)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r00)*(x1599)))+(((r01)*(x1600)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)))))+IKsqr(((((IkReal(-1.00000000000000))*(r11)*(x1600)))+(((IkReal(-1.00000000000000))*(r10)*(x1599)))+(((r12)*(sj5)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((r00)*(x1599)))+(((r01)*(x1600)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)))), ((((IkReal(-1.00000000000000))*(r11)*(x1600)))+(((IkReal(-1.00000000000000))*(r10)*(x1599)))+(((r12)*(sj5)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1601=IKcos(j1);
IkReal x1602=IKsin(j1);
IkReal x1603=((IkReal(1.00000000000000))*(r00));
IkReal x1604=((sj4)*(sj6));
IkReal x1605=((cj4)*(cj6));
IkReal x1606=((cj5)*(sj6));
IkReal x1607=((cj6)*(sj4));
IkReal x1608=((IkReal(0.0975200000000000))*(r10));
IkReal x1609=((cj5)*(r02));
IkReal x1610=((IkReal(1.00000000000000))*(sj4));
IkReal x1611=((IkReal(0.0975200000000000))*(cj4));
IkReal x1612=((cj5)*(r12));
IkReal x1613=((IkReal(0.0975200000000000))*(r11));
IkReal x1614=((IkReal(1.00000000000000))*(sj5));
IkReal x1615=((IkReal(1.00000000000000))*(r10));
IkReal x1616=((sj5)*(sj6));
IkReal x1617=((cj4)*(sj6));
IkReal x1618=((IkReal(0.0975200000000000))*(r01));
IkReal x1619=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1620=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1606)*(x1615)))+(((IkReal(-1.00000000000000))*(r11)*(x1620)))+(((IkReal(-1.00000000000000))*(x1601)))+(((r12)*(sj5))));
evalcond[1]=((x1602)+(((IkReal(-1.00000000000000))*(r01)*(x1620)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1603)*(x1606))));
evalcond[2]=((((r01)*(x1617)))+(((IkReal(-1.00000000000000))*(sj5)*(x1603)*(x1604)))+(x1601)+(((IkReal(-1.00000000000000))*(x1609)*(x1610)))+(((IkReal(-1.00000000000000))*(x1603)*(x1605)))+(((IkReal(-1.00000000000000))*(r01)*(x1607)*(x1614))));
evalcond[3]=((x1602)+(((IkReal(-1.00000000000000))*(x1610)*(x1612)))+(((IkReal(-1.00000000000000))*(r11)*(x1607)*(x1614)))+(((r11)*(x1617)))+(((IkReal(-1.00000000000000))*(r10)*(x1604)*(x1614)))+(((IkReal(-1.00000000000000))*(x1605)*(x1615))));
evalcond[4]=((((IkReal(-0.125830000000000))*(x1601)))+(((r01)*(x1619)))+(((sj5)*(x1605)*(x1618)))+(((IkReal(0.0716400000000000))*(x1609)))+(((x1609)*(x1611)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.0975200000000000))*(r00)*(x1607)))+(((x1604)*(x1618)))+(((r00)*(x1611)*(x1616)))+(((IkReal(0.0716400000000000))*(r00)*(x1616)))+(((IkReal(0.0135000000000000))*(x1602))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1607)*(x1608)))+(((IkReal(-0.125830000000000))*(x1602)))+(((IkReal(-0.0135000000000000))*(x1601)))+(((sj5)*(x1605)*(x1613)))+(((IkReal(0.0716400000000000))*(r10)*(x1616)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x1619)))+(((IkReal(0.0716400000000000))*(x1612)))+(((x1604)*(x1613)))+(((cj4)*(x1608)*(x1616)))+(((x1611)*(x1612))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1621=((cj4)*(sj5));
if( IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r01)*(sj4)*(sj6)))+(((r00)*(sj6)*(x1621)))+(((cj4)*(cj5)*(r02)))+(((cj6)*(r01)*(x1621)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(r10)*(sj6)))+(((cj5)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r12)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r01)*(sj4)*(sj6)))+(((r00)*(sj6)*(x1621)))+(((cj4)*(cj5)*(r02)))+(((cj6)*(r01)*(x1621)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj4)))))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(r10)*(sj6)))+(((cj5)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r01)*(sj4)*(sj6)))+(((r00)*(sj6)*(x1621)))+(((cj4)*(cj5)*(r02)))+(((cj6)*(r01)*(x1621)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj4)))))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(r10)*(sj6)))+(((cj5)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1622=IKcos(j1);
IkReal x1623=IKsin(j1);
IkReal x1624=((IkReal(1.00000000000000))*(r00));
IkReal x1625=((cj4)*(cj6));
IkReal x1626=((cj5)*(sj6));
IkReal x1627=((cj6)*(sj4));
IkReal x1628=((IkReal(0.0975200000000000))*(r10));
IkReal x1629=((r11)*(sj6));
IkReal x1630=((cj5)*(r02));
IkReal x1631=((IkReal(1.00000000000000))*(sj4));
IkReal x1632=((IkReal(0.0975200000000000))*(cj4));
IkReal x1633=((cj5)*(r12));
IkReal x1634=((IkReal(0.0975200000000000))*(sj4));
IkReal x1635=((r11)*(sj5));
IkReal x1636=((IkReal(1.00000000000000))*(r10));
IkReal x1637=((IkReal(1.00000000000000))*(r01));
IkReal x1638=((cj5)*(cj6));
IkReal x1639=((sj5)*(sj6));
IkReal x1640=((r01)*(sj6));
IkReal x1641=((r01)*(sj5));
IkReal x1642=((IkReal(1.00000000000000))*(x1623));
IkReal x1643=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1644=((r10)*(x1639));
evalcond[0]=((((r12)*(sj5)))+(((cj3)*(x1622)))+(((IkReal(-1.00000000000000))*(x1626)*(x1636)))+(((IkReal(-1.00000000000000))*(r11)*(x1638))));
evalcond[1]=((((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1637)*(x1638)))+(((IkReal(-1.00000000000000))*(cj3)*(x1642)))+(((IkReal(-1.00000000000000))*(x1624)*(x1626))));
evalcond[2]=((x1622)+(((IkReal(-1.00000000000000))*(sj5)*(x1627)*(x1637)))+(((IkReal(-1.00000000000000))*(x1624)*(x1625)))+(((IkReal(-1.00000000000000))*(x1630)*(x1631)))+(((IkReal(-1.00000000000000))*(sj4)*(x1624)*(x1639)))+(((cj4)*(x1640))));
evalcond[3]=((x1623)+(((IkReal(-1.00000000000000))*(x1625)*(x1636)))+(((IkReal(-1.00000000000000))*(x1627)*(x1635)))+(((cj4)*(x1629)))+(((IkReal(-1.00000000000000))*(x1631)*(x1644)))+(((IkReal(-1.00000000000000))*(x1631)*(x1633))));
evalcond[4]=((((sj3)*(x1622)))+(((x1625)*(x1635)))+(((sj4)*(x1629)))+(((cj4)*(x1633)))+(((IkReal(-1.00000000000000))*(x1627)*(x1636)))+(((cj4)*(x1644))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj3)*(x1642)))+(((cj4)*(r00)*(x1639)))+(((x1625)*(x1641)))+(((IkReal(-1.00000000000000))*(x1624)*(x1627)))+(((sj4)*(x1640)))+(((cj4)*(x1630))));
evalcond[6]=((((IkReal(0.0135000000000000))*(x1623)))+(((IkReal(-0.125830000000000))*(x1622)))+(((IkReal(0.0716400000000000))*(r00)*(x1639)))+(((IkReal(0.0975200000000000))*(x1625)*(x1641)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.0975200000000000))*(r00)*(x1627)))+(((IkReal(0.0716400000000000))*(x1630)))+(((IkReal(0.0716400000000000))*(cj6)*(x1641)))+(((x1630)*(x1632)))+(((x1634)*(x1640)))+(((r00)*(x1632)*(x1639))));
evalcond[7]=((((IkReal(0.0975200000000000))*(x1625)*(x1635)))+(((IkReal(-0.0135000000000000))*(x1622)))+(((IkReal(-0.125830000000000))*(x1623)))+(((x1629)*(x1634)))+(((IkReal(-1.00000000000000))*(py)))+(((cj4)*(x1628)*(x1639)))+(((x1632)*(x1633)))+(((IkReal(0.0716400000000000))*(x1644)))+(((IkReal(-1.00000000000000))*(x1627)*(x1628)))+(((IkReal(0.0716400000000000))*(x1633)))+(((IkReal(0.0716400000000000))*(cj6)*(x1635))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1645=((sj4)*(sj5));
IkReal x1646=((r10)*(sj6));
IkReal x1647=((cj6)*(r11));
if( IKabs(((((cj5)*(r12)*(sj4)))+(((x1645)*(x1646)))+(((x1645)*(x1647)))+(((IkReal(-1.00000000000000))*(cj4)*(r11)*(sj6)))+(((cj4)*(cj6)*(r10))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(x1647)))+(((cj5)*(x1646)))+(((IkReal(-1.00000000000000))*(r12)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj5)*(r12)*(sj4)))+(((x1645)*(x1646)))+(((x1645)*(x1647)))+(((IkReal(-1.00000000000000))*(cj4)*(r11)*(sj6)))+(((cj4)*(cj6)*(r10)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(x1647)))+(((cj5)*(x1646)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((cj5)*(r12)*(sj4)))+(((x1645)*(x1646)))+(((x1645)*(x1647)))+(((IkReal(-1.00000000000000))*(cj4)*(r11)*(sj6)))+(((cj4)*(cj6)*(r10)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(x1647)))+(((cj5)*(x1646)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1648=IKcos(j1);
IkReal x1649=IKsin(j1);
IkReal x1650=((IkReal(1.00000000000000))*(r00));
IkReal x1651=((cj4)*(cj6));
IkReal x1652=((cj5)*(sj6));
IkReal x1653=((cj6)*(sj4));
IkReal x1654=((IkReal(0.0975200000000000))*(r10));
IkReal x1655=((r11)*(sj6));
IkReal x1656=((cj5)*(r02));
IkReal x1657=((IkReal(1.00000000000000))*(sj4));
IkReal x1658=((IkReal(0.0975200000000000))*(cj4));
IkReal x1659=((cj5)*(r12));
IkReal x1660=((IkReal(0.0975200000000000))*(sj4));
IkReal x1661=((r11)*(sj5));
IkReal x1662=((IkReal(1.00000000000000))*(r10));
IkReal x1663=((IkReal(1.00000000000000))*(r01));
IkReal x1664=((cj5)*(cj6));
IkReal x1665=((sj5)*(sj6));
IkReal x1666=((r01)*(sj6));
IkReal x1667=((r01)*(sj5));
IkReal x1668=((IkReal(1.00000000000000))*(x1649));
IkReal x1669=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1670=((r10)*(x1665));
evalcond[0]=((((cj3)*(x1648)))+(((IkReal(-1.00000000000000))*(x1652)*(x1662)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1664))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1650)*(x1652)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1663)*(x1664)))+(((IkReal(-1.00000000000000))*(cj3)*(x1668))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1656)*(x1657)))+(((IkReal(-1.00000000000000))*(sj4)*(x1650)*(x1665)))+(((cj4)*(x1666)))+(x1648)+(((IkReal(-1.00000000000000))*(x1650)*(x1651)))+(((IkReal(-1.00000000000000))*(sj5)*(x1653)*(x1663))));
evalcond[3]=((((cj4)*(x1655)))+(x1649)+(((IkReal(-1.00000000000000))*(x1653)*(x1661)))+(((IkReal(-1.00000000000000))*(x1657)*(x1659)))+(((IkReal(-1.00000000000000))*(x1657)*(x1670)))+(((IkReal(-1.00000000000000))*(x1651)*(x1662))));
evalcond[4]=((((cj4)*(x1659)))+(((IkReal(-1.00000000000000))*(x1653)*(x1662)))+(((sj3)*(x1648)))+(((cj4)*(x1670)))+(((x1651)*(x1661)))+(((sj4)*(x1655))));
evalcond[5]=((((cj4)*(x1656)))+(((IkReal(-1.00000000000000))*(sj3)*(x1668)))+(((cj4)*(r00)*(x1665)))+(((IkReal(-1.00000000000000))*(x1650)*(x1653)))+(((x1651)*(x1667)))+(((sj4)*(x1666))));
evalcond[6]=((((x1656)*(x1658)))+(((x1660)*(x1666)))+(((IkReal(0.0975200000000000))*(x1651)*(x1667)))+(((IkReal(0.0716400000000000))*(r00)*(x1665)))+(((IkReal(0.0135000000000000))*(x1649)))+(((IkReal(-0.0975200000000000))*(r00)*(x1653)))+(((IkReal(-1.00000000000000))*(px)))+(((r00)*(x1658)*(x1665)))+(((IkReal(0.0716400000000000))*(cj6)*(x1667)))+(((IkReal(-0.125830000000000))*(x1648)))+(((IkReal(0.0716400000000000))*(x1656))));
evalcond[7]=((((IkReal(0.0975200000000000))*(x1651)*(x1661)))+(((IkReal(0.0716400000000000))*(x1670)))+(((x1655)*(x1660)))+(((IkReal(-1.00000000000000))*(x1653)*(x1654)))+(((cj4)*(x1654)*(x1665)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0716400000000000))*(cj6)*(x1661)))+(((x1658)*(x1659)))+(((IkReal(-0.0135000000000000))*(x1648)))+(((IkReal(-0.125830000000000))*(x1649)))+(((IkReal(0.0716400000000000))*(x1659))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1671=((cj5)*(sj6));
IkReal x1672=((cj5)*(cj6));
if( IKabs(((gconst14)*(((((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x1672)))+(((IkReal(-1.00000000000000))*(r00)*(x1671))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((r10)*(x1671)))+(((r11)*(x1672)))+(((IkReal(-1.00000000000000))*(r12)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst14)*(((((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x1672)))+(((IkReal(-1.00000000000000))*(r00)*(x1671)))))), ((gconst14)*(((((r10)*(x1671)))+(((r11)*(x1672)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1673=IKcos(j1);
IkReal x1674=IKsin(j1);
IkReal x1675=((IkReal(1.00000000000000))*(r00));
IkReal x1676=((cj4)*(cj6));
IkReal x1677=((cj5)*(sj6));
IkReal x1678=((cj6)*(sj4));
IkReal x1679=((IkReal(0.0975200000000000))*(r10));
IkReal x1680=((r11)*(sj6));
IkReal x1681=((cj5)*(r02));
IkReal x1682=((IkReal(1.00000000000000))*(sj4));
IkReal x1683=((IkReal(0.0975200000000000))*(cj4));
IkReal x1684=((cj5)*(r12));
IkReal x1685=((IkReal(0.0975200000000000))*(sj4));
IkReal x1686=((r11)*(sj5));
IkReal x1687=((IkReal(1.00000000000000))*(r10));
IkReal x1688=((IkReal(1.00000000000000))*(r01));
IkReal x1689=((cj5)*(cj6));
IkReal x1690=((sj5)*(sj6));
IkReal x1691=((r01)*(sj6));
IkReal x1692=((r01)*(sj5));
IkReal x1693=((IkReal(1.00000000000000))*(x1674));
IkReal x1694=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1695=((r10)*(x1690));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1677)*(x1687)))+(((cj3)*(x1673)))+(((IkReal(-1.00000000000000))*(r11)*(x1689)))+(((r12)*(sj5))));
evalcond[1]=((((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj3)*(x1693)))+(((IkReal(-1.00000000000000))*(x1688)*(x1689)))+(((IkReal(-1.00000000000000))*(x1675)*(x1677))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1681)*(x1682)))+(x1673)+(((cj4)*(x1691)))+(((IkReal(-1.00000000000000))*(sj5)*(x1678)*(x1688)))+(((IkReal(-1.00000000000000))*(sj4)*(x1675)*(x1690)))+(((IkReal(-1.00000000000000))*(x1675)*(x1676))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1682)*(x1684)))+(x1674)+(((cj4)*(x1680)))+(((IkReal(-1.00000000000000))*(x1682)*(x1695)))+(((IkReal(-1.00000000000000))*(x1676)*(x1687)))+(((IkReal(-1.00000000000000))*(x1678)*(x1686))));
evalcond[4]=((((cj4)*(x1684)))+(((cj4)*(x1695)))+(((IkReal(-1.00000000000000))*(x1678)*(x1687)))+(((x1676)*(x1686)))+(((sj4)*(x1680)))+(((sj3)*(x1673))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj3)*(x1693)))+(((cj4)*(x1681)))+(((x1676)*(x1692)))+(((cj4)*(r00)*(x1690)))+(((sj4)*(x1691)))+(((IkReal(-1.00000000000000))*(x1675)*(x1678))));
evalcond[6]=((((x1681)*(x1683)))+(((IkReal(-0.0975200000000000))*(r00)*(x1678)))+(((IkReal(0.0135000000000000))*(x1674)))+(((IkReal(0.0716400000000000))*(x1681)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.125830000000000))*(x1673)))+(((x1685)*(x1691)))+(((IkReal(0.0975200000000000))*(x1676)*(x1692)))+(((r00)*(x1683)*(x1690)))+(((IkReal(0.0716400000000000))*(r00)*(x1690)))+(((IkReal(0.0716400000000000))*(cj6)*(x1692))));
evalcond[7]=((((IkReal(0.0716400000000000))*(cj6)*(x1686)))+(((x1680)*(x1685)))+(((IkReal(-1.00000000000000))*(x1678)*(x1679)))+(((IkReal(0.0716400000000000))*(x1684)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.125830000000000))*(x1674)))+(((IkReal(0.0716400000000000))*(x1695)))+(((cj4)*(x1679)*(x1690)))+(((IkReal(-0.0135000000000000))*(x1673)))+(((IkReal(0.0975200000000000))*(x1676)*(x1686)))+(((x1683)*(x1684))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1696=((cj5)*(r22));
IkReal x1697=((IkReal(0.0975200000000000))*(cj4));
IkReal x1698=((r20)*(sj6));
IkReal x1699=((IkReal(1.00000000000000))*(cj5));
IkReal x1700=((IkReal(1.00000000000000))*(sj4));
IkReal x1701=((cj6)*(r20));
IkReal x1702=((IkReal(0.0975200000000000))*(sj4));
IkReal x1703=((r21)*(sj6));
IkReal x1704=((cj6)*(r21)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1698)*(x1699)))+(((IkReal(-1.00000000000000))*(sj3)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1699))));
evalcond[2]=((((cj4)*(x1703)))+(((IkReal(-1.00000000000000))*(x1700)*(x1704)))+(((IkReal(-1.00000000000000))*(cj4)*(x1701)))+(((IkReal(-1.00000000000000))*(x1696)*(x1700)))+(((IkReal(-1.00000000000000))*(sj5)*(x1698)*(x1700))));
evalcond[3]=((((sj4)*(x1703)))+(cj3)+(((cj4)*(x1696)))+(((cj4)*(x1704)))+(((cj4)*(sj5)*(x1698)))+(((IkReal(-1.00000000000000))*(x1700)*(x1701))));
evalcond[4]=((IkReal(-0.115380000000000))+(((IkReal(0.0716400000000000))*(sj5)*(x1698)))+(((x1697)*(x1704)))+(((IkReal(0.0716400000000000))*(x1704)))+(((IkReal(-1.00000000000000))*(pz)))+(((sj5)*(x1697)*(x1698)))+(((IkReal(0.0716400000000000))*(x1696)))+(((x1702)*(x1703)))+(((x1696)*(x1697)))+(((IkReal(-1.00000000000000))*(x1701)*(x1702))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(cj3);
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj3;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1705=((cj5)*(r22));
IkReal x1706=((IkReal(0.0975200000000000))*(cj4));
IkReal x1707=((r20)*(sj6));
IkReal x1708=((IkReal(1.00000000000000))*(cj5));
IkReal x1709=((IkReal(1.00000000000000))*(sj4));
IkReal x1710=((cj4)*(cj5));
IkReal x1711=((cj4)*(sj5));
IkReal x1712=((cj6)*(r20));
IkReal x1713=((IkReal(0.0975200000000000))*(sj4));
IkReal x1714=((cj6)*(r21));
IkReal x1715=((r21)*(sj6));
IkReal x1716=((sj4)*(sj6));
IkReal x1717=((sj5)*(x1714));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1707)*(x1708)))+(((IkReal(-1.00000000000000))*(x1708)*(x1714))));
evalcond[2]=((((cj4)*(x1715)))+(((IkReal(-1.00000000000000))*(x1709)*(x1717)))+(((IkReal(-1.00000000000000))*(x1705)*(x1709)))+(((IkReal(-1.00000000000000))*(cj4)*(x1712)))+(((IkReal(-1.00000000000000))*(sj5)*(x1707)*(x1709))));
evalcond[3]=((IkReal(1.00000000000000))+(((sj4)*(x1715)))+(((IkReal(-1.00000000000000))*(x1709)*(x1712)))+(((cj4)*(x1705)))+(((x1711)*(x1714)))+(((x1707)*(x1711))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1709)))+(((r11)*(x1716)))+(((r12)*(x1710)))+(((cj6)*(r11)*(x1711)))+(((r10)*(sj6)*(x1711))));
evalcond[5]=((((cj6)*(r01)*(x1711)))+(((r02)*(x1710)))+(((r01)*(x1716)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1709)))+(((r00)*(sj6)*(x1711))));
evalcond[6]=((IkReal(-0.115380000000000))+(((IkReal(0.0716400000000000))*(sj5)*(x1707)))+(((IkReal(0.0716400000000000))*(x1705)))+(((IkReal(-1.00000000000000))*(x1712)*(x1713)))+(((x1713)*(x1715)))+(((x1705)*(x1706)))+(((IkReal(-1.00000000000000))*(pz)))+(((sj5)*(x1706)*(x1707)))+(((x1706)*(x1717)))+(((IkReal(0.0716400000000000))*(x1717))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1718=((cj5)*(sj6));
IkReal x1719=((cj5)*(cj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(x1719)))+(((IkReal(-1.00000000000000))*(r00)*(x1718)))+(((r02)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r11)*(x1719)))+(((r10)*(x1718)))+(((IkReal(-1.00000000000000))*(r12)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(x1719)))+(((IkReal(-1.00000000000000))*(r00)*(x1718)))+(((r02)*(sj5)))))+IKsqr(((((r11)*(x1719)))+(((r10)*(x1718)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(x1719)))+(((IkReal(-1.00000000000000))*(r00)*(x1718)))+(((r02)*(sj5)))), ((((r11)*(x1719)))+(((r10)*(x1718)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1720=IKcos(j1);
IkReal x1721=IKsin(j1);
IkReal x1722=((IkReal(1.00000000000000))*(r00));
IkReal x1723=((cj4)*(cj6));
IkReal x1724=((cj5)*(sj6));
IkReal x1725=((IkReal(0.0975200000000000))*(sj4));
IkReal x1726=((cj5)*(r02));
IkReal x1727=((IkReal(1.00000000000000))*(sj4));
IkReal x1728=((IkReal(0.0975200000000000))*(cj4));
IkReal x1729=((cj5)*(r12));
IkReal x1730=((r11)*(sj6));
IkReal x1731=((cj6)*(sj5));
IkReal x1732=((IkReal(1.00000000000000))*(r10));
IkReal x1733=((IkReal(0.0975200000000000))*(sj5));
IkReal x1734=((sj5)*(sj6));
IkReal x1735=((r01)*(sj6));
IkReal x1736=((IkReal(1.00000000000000))*(x1721));
IkReal x1737=((r10)*(x1734));
IkReal x1738=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x1738)))+(x1720)+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1724)*(x1732))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1722)*(x1724)))+(((IkReal(-1.00000000000000))*(r01)*(x1738)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1736))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x1727)*(x1731)))+(((IkReal(-1.00000000000000))*(x1722)*(x1723)))+(((IkReal(-1.00000000000000))*(x1726)*(x1727)))+(((IkReal(-1.00000000000000))*(sj4)*(x1722)*(x1734)))+(((cj4)*(x1735)))+(((IkReal(-1.00000000000000))*(x1720))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1723)*(x1732)))+(((cj4)*(x1730)))+(((IkReal(-1.00000000000000))*(r11)*(x1727)*(x1731)))+(((IkReal(-1.00000000000000))*(x1727)*(x1737)))+(((IkReal(-1.00000000000000))*(x1736)))+(((IkReal(-1.00000000000000))*(x1727)*(x1729))));
evalcond[4]=((((x1725)*(x1735)))+(((x1726)*(x1728)))+(((IkReal(0.0716400000000000))*(r01)*(x1731)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1725)))+(((IkReal(0.0716400000000000))*(r00)*(x1734)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0716400000000000))*(x1726)))+(((r00)*(x1728)*(x1734)))+(((IkReal(-0.125830000000000))*(x1720)))+(((r01)*(x1723)*(x1733)))+(((IkReal(0.0135000000000000))*(x1721))));
evalcond[5]=((((x1728)*(x1737)))+(((x1728)*(x1729)))+(((x1725)*(x1730)))+(((IkReal(0.0716400000000000))*(r11)*(x1731)))+(((r11)*(x1723)*(x1733)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0716400000000000))*(x1729)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1725)))+(((IkReal(0.0716400000000000))*(x1737)))+(((IkReal(-0.0135000000000000))*(x1720)))+(((IkReal(-0.125830000000000))*(x1721))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1739=((cj5)*(r22));
IkReal x1740=((IkReal(0.0975200000000000))*(cj4));
IkReal x1741=((r20)*(sj6));
IkReal x1742=((IkReal(1.00000000000000))*(cj5));
IkReal x1743=((IkReal(1.00000000000000))*(sj4));
IkReal x1744=((cj4)*(cj5));
IkReal x1745=((cj4)*(sj5));
IkReal x1746=((cj6)*(r20));
IkReal x1747=((IkReal(0.0975200000000000))*(sj4));
IkReal x1748=((cj6)*(r21));
IkReal x1749=((r21)*(sj6));
IkReal x1750=((sj4)*(sj6));
IkReal x1751=((sj5)*(x1748));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1741)*(x1742)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1742)*(x1748))));
evalcond[2]=((((cj4)*(x1749)))+(((IkReal(-1.00000000000000))*(cj4)*(x1746)))+(((IkReal(-1.00000000000000))*(x1739)*(x1743)))+(((IkReal(-1.00000000000000))*(x1743)*(x1751)))+(((IkReal(-1.00000000000000))*(sj5)*(x1741)*(x1743))));
evalcond[3]=((IkReal(-1.00000000000000))+(((sj4)*(x1749)))+(((x1745)*(x1748)))+(((cj4)*(x1739)))+(((x1741)*(x1745)))+(((IkReal(-1.00000000000000))*(x1743)*(x1746))));
evalcond[4]=((((r12)*(x1744)))+(((cj6)*(r11)*(x1745)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1743)))+(((r10)*(sj6)*(x1745)))+(((r11)*(x1750))));
evalcond[5]=((((cj6)*(r01)*(x1745)))+(((r02)*(x1744)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1743)))+(((r00)*(sj6)*(x1745)))+(((r01)*(x1750))));
evalcond[6]=((IkReal(-0.115380000000000))+(((x1739)*(x1740)))+(((IkReal(0.0716400000000000))*(x1751)))+(((x1747)*(x1749)))+(((IkReal(0.0716400000000000))*(sj5)*(x1741)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(x1739)))+(((IkReal(-1.00000000000000))*(x1746)*(x1747)))+(((sj5)*(x1740)*(x1741)))+(((x1740)*(x1751))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1752=((cj5)*(sj6));
IkReal x1753=((cj5)*(cj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r02)*(sj5)))+(((r01)*(x1753)))+(((r00)*(x1752))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r10)*(x1752)))+(((IkReal(-1.00000000000000))*(r11)*(x1753)))+(((r12)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r02)*(sj5)))+(((r01)*(x1753)))+(((r00)*(x1752)))))+IKsqr(((((IkReal(-1.00000000000000))*(r10)*(x1752)))+(((IkReal(-1.00000000000000))*(r11)*(x1753)))+(((r12)*(sj5)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r02)*(sj5)))+(((r01)*(x1753)))+(((r00)*(x1752)))), ((((IkReal(-1.00000000000000))*(r10)*(x1752)))+(((IkReal(-1.00000000000000))*(r11)*(x1753)))+(((r12)*(sj5)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1754=IKsin(j1);
IkReal x1755=IKcos(j1);
IkReal x1756=((IkReal(1.00000000000000))*(r00));
IkReal x1757=((cj4)*(cj6));
IkReal x1758=((cj5)*(sj6));
IkReal x1759=((IkReal(0.0975200000000000))*(sj4));
IkReal x1760=((cj5)*(r02));
IkReal x1761=((IkReal(1.00000000000000))*(sj4));
IkReal x1762=((IkReal(0.0975200000000000))*(cj4));
IkReal x1763=((cj5)*(r12));
IkReal x1764=((r11)*(sj6));
IkReal x1765=((cj6)*(sj5));
IkReal x1766=((IkReal(1.00000000000000))*(r10));
IkReal x1767=((IkReal(0.0975200000000000))*(sj5));
IkReal x1768=((sj5)*(sj6));
IkReal x1769=((r01)*(sj6));
IkReal x1770=((IkReal(1.00000000000000))*(x1755));
IkReal x1771=((r10)*(x1768));
IkReal x1772=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1770)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1758)*(x1766)))+(((IkReal(-1.00000000000000))*(r11)*(x1772))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1756)*(x1758)))+(x1754)+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x1772))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1756)*(x1757)))+(((cj4)*(x1769)))+(((IkReal(-1.00000000000000))*(x1770)))+(((IkReal(-1.00000000000000))*(x1760)*(x1761)))+(((IkReal(-1.00000000000000))*(r01)*(x1761)*(x1765)))+(((IkReal(-1.00000000000000))*(sj4)*(x1756)*(x1768))));
evalcond[3]=((((cj4)*(x1764)))+(((IkReal(-1.00000000000000))*(x1761)*(x1763)))+(((IkReal(-1.00000000000000))*(r11)*(x1761)*(x1765)))+(((IkReal(-1.00000000000000))*(x1757)*(x1766)))+(((IkReal(-1.00000000000000))*(x1754)))+(((IkReal(-1.00000000000000))*(x1761)*(x1771))));
evalcond[4]=((((IkReal(-0.125830000000000))*(x1755)))+(((r00)*(x1762)*(x1768)))+(((x1759)*(x1769)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1759)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0716400000000000))*(r01)*(x1765)))+(((IkReal(0.0716400000000000))*(r00)*(x1768)))+(((IkReal(0.0135000000000000))*(x1754)))+(((IkReal(0.0716400000000000))*(x1760)))+(((r01)*(x1757)*(x1767)))+(((x1760)*(x1762))));
evalcond[5]=((((r11)*(x1757)*(x1767)))+(((IkReal(0.0716400000000000))*(r11)*(x1765)))+(((IkReal(-0.125830000000000))*(x1754)))+(((IkReal(0.0716400000000000))*(x1771)))+(((x1759)*(x1764)))+(((IkReal(-1.00000000000000))*(py)))+(((x1762)*(x1771)))+(((x1762)*(x1763)))+(((IkReal(-0.0135000000000000))*(x1755)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1759)))+(((IkReal(0.0716400000000000))*(x1763))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1773=((cj4)*(sj5));
if( IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj6)*(r01)*(x1773)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((r00)*(sj6)*(x1773)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(r10)*(sj6)))+(((cj5)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r12)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj6)*(r01)*(x1773)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((r00)*(sj6)*(x1773)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj4)))))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(r10)*(sj6)))+(((cj5)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj6)*(r01)*(x1773)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((r00)*(sj6)*(x1773)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj4)))))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(r10)*(sj6)))+(((cj5)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1774=IKcos(j1);
IkReal x1775=IKsin(j1);
IkReal x1776=((IkReal(1.00000000000000))*(r00));
IkReal x1777=((cj4)*(cj6));
IkReal x1778=((cj5)*(sj6));
IkReal x1779=((cj6)*(sj4));
IkReal x1780=((IkReal(0.0975200000000000))*(r10));
IkReal x1781=((r11)*(sj6));
IkReal x1782=((cj5)*(r02));
IkReal x1783=((IkReal(1.00000000000000))*(sj4));
IkReal x1784=((IkReal(0.0975200000000000))*(cj4));
IkReal x1785=((cj5)*(r12));
IkReal x1786=((IkReal(0.0975200000000000))*(sj4));
IkReal x1787=((r11)*(sj5));
IkReal x1788=((IkReal(1.00000000000000))*(r10));
IkReal x1789=((IkReal(1.00000000000000))*(r01));
IkReal x1790=((cj5)*(cj6));
IkReal x1791=((sj5)*(sj6));
IkReal x1792=((r01)*(sj6));
IkReal x1793=((r01)*(sj5));
IkReal x1794=((IkReal(1.00000000000000))*(x1775));
IkReal x1795=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1796=((r10)*(x1791));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x1790)))+(((r12)*(sj5)))+(((cj3)*(x1774)))+(((IkReal(-1.00000000000000))*(x1778)*(x1788))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1789)*(x1790)))+(((IkReal(-1.00000000000000))*(x1776)*(x1778)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj3)*(x1794))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1774)))+(((IkReal(-1.00000000000000))*(sj4)*(x1776)*(x1791)))+(((IkReal(-1.00000000000000))*(sj5)*(x1779)*(x1789)))+(((IkReal(-1.00000000000000))*(x1776)*(x1777)))+(((cj4)*(x1792)))+(((IkReal(-1.00000000000000))*(x1782)*(x1783))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1794)))+(((IkReal(-1.00000000000000))*(x1783)*(x1785)))+(((IkReal(-1.00000000000000))*(x1777)*(x1788)))+(((cj4)*(x1781)))+(((IkReal(-1.00000000000000))*(x1779)*(x1787)))+(((IkReal(-1.00000000000000))*(x1783)*(x1796))));
evalcond[4]=((((x1777)*(x1787)))+(((sj3)*(x1774)))+(((sj4)*(x1781)))+(((IkReal(-1.00000000000000))*(x1779)*(x1788)))+(((cj4)*(x1796)))+(((cj4)*(x1785))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj3)*(x1794)))+(((x1777)*(x1793)))+(((IkReal(-1.00000000000000))*(x1776)*(x1779)))+(((cj4)*(r00)*(x1791)))+(((sj4)*(x1792)))+(((cj4)*(x1782))));
evalcond[6]=((((x1782)*(x1784)))+(((r00)*(x1784)*(x1791)))+(((IkReal(0.0716400000000000))*(r00)*(x1791)))+(((IkReal(0.0716400000000000))*(cj6)*(x1793)))+(((IkReal(0.0975200000000000))*(x1777)*(x1793)))+(((IkReal(-0.0975200000000000))*(r00)*(x1779)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.125830000000000))*(x1774)))+(((IkReal(0.0716400000000000))*(x1782)))+(((IkReal(0.0135000000000000))*(x1775)))+(((x1786)*(x1792))));
evalcond[7]=((((IkReal(-0.0135000000000000))*(x1774)))+(((IkReal(0.0716400000000000))*(cj6)*(x1787)))+(((IkReal(-1.00000000000000))*(py)))+(((cj4)*(x1780)*(x1791)))+(((IkReal(-0.125830000000000))*(x1775)))+(((IkReal(0.0975200000000000))*(x1777)*(x1787)))+(((x1784)*(x1785)))+(((IkReal(0.0716400000000000))*(x1785)))+(((IkReal(0.0716400000000000))*(x1796)))+(((IkReal(-1.00000000000000))*(x1779)*(x1780)))+(((x1781)*(x1786))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1797=((IkReal(1.00000000000000))*(sj5));
IkReal x1798=((cj6)*(r11));
IkReal x1799=((r10)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(sj4)*(x1797)*(x1799)))+(((IkReal(-1.00000000000000))*(sj4)*(x1797)*(x1798)))+(((IkReal(-1.00000000000000))*(cj4)*(cj6)*(r10)))+(((IkReal(-1.00000000000000))*(cj5)*(r12)*(sj4)))+(((cj4)*(r11)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r12)*(x1797)))+(((cj5)*(x1799)))+(((cj5)*(x1798))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj4)*(x1797)*(x1799)))+(((IkReal(-1.00000000000000))*(sj4)*(x1797)*(x1798)))+(((IkReal(-1.00000000000000))*(cj4)*(cj6)*(r10)))+(((IkReal(-1.00000000000000))*(cj5)*(r12)*(sj4)))+(((cj4)*(r11)*(sj6)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r12)*(x1797)))+(((cj5)*(x1799)))+(((cj5)*(x1798)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj4)*(x1797)*(x1799)))+(((IkReal(-1.00000000000000))*(sj4)*(x1797)*(x1798)))+(((IkReal(-1.00000000000000))*(cj4)*(cj6)*(r10)))+(((IkReal(-1.00000000000000))*(cj5)*(r12)*(sj4)))+(((cj4)*(r11)*(sj6)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r12)*(x1797)))+(((cj5)*(x1799)))+(((cj5)*(x1798)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1800=IKcos(j1);
IkReal x1801=IKsin(j1);
IkReal x1802=((IkReal(1.00000000000000))*(r00));
IkReal x1803=((cj4)*(cj6));
IkReal x1804=((cj5)*(sj6));
IkReal x1805=((cj6)*(sj4));
IkReal x1806=((IkReal(0.0975200000000000))*(r10));
IkReal x1807=((r11)*(sj6));
IkReal x1808=((cj5)*(r02));
IkReal x1809=((IkReal(1.00000000000000))*(sj4));
IkReal x1810=((IkReal(0.0975200000000000))*(cj4));
IkReal x1811=((cj5)*(r12));
IkReal x1812=((IkReal(0.0975200000000000))*(sj4));
IkReal x1813=((r11)*(sj5));
IkReal x1814=((IkReal(1.00000000000000))*(r10));
IkReal x1815=((IkReal(1.00000000000000))*(r01));
IkReal x1816=((cj5)*(cj6));
IkReal x1817=((sj5)*(sj6));
IkReal x1818=((r01)*(sj6));
IkReal x1819=((r01)*(sj5));
IkReal x1820=((IkReal(1.00000000000000))*(x1801));
IkReal x1821=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1822=((r10)*(x1817));
evalcond[0]=((((cj3)*(x1800)))+(((IkReal(-1.00000000000000))*(x1804)*(x1814)))+(((IkReal(-1.00000000000000))*(r11)*(x1816)))+(((r12)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj3)*(x1820)))+(((IkReal(-1.00000000000000))*(x1802)*(x1804)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1815)*(x1816))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj5)*(x1805)*(x1815)))+(((IkReal(-1.00000000000000))*(sj4)*(x1802)*(x1817)))+(((IkReal(-1.00000000000000))*(x1802)*(x1803)))+(((IkReal(-1.00000000000000))*(x1808)*(x1809)))+(((cj4)*(x1818)))+(((IkReal(-1.00000000000000))*(x1800))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1820)))+(((IkReal(-1.00000000000000))*(x1809)*(x1811)))+(((IkReal(-1.00000000000000))*(x1805)*(x1813)))+(((IkReal(-1.00000000000000))*(x1803)*(x1814)))+(((IkReal(-1.00000000000000))*(x1809)*(x1822)))+(((cj4)*(x1807))));
evalcond[4]=((((sj4)*(x1807)))+(((cj4)*(x1822)))+(((IkReal(-1.00000000000000))*(x1805)*(x1814)))+(((sj3)*(x1800)))+(((x1803)*(x1813)))+(((cj4)*(x1811))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1802)*(x1805)))+(((x1803)*(x1819)))+(((cj4)*(r00)*(x1817)))+(((cj4)*(x1808)))+(((sj4)*(x1818)))+(((IkReal(-1.00000000000000))*(sj3)*(x1820))));
evalcond[6]=((((IkReal(0.0716400000000000))*(cj6)*(x1819)))+(((IkReal(0.0716400000000000))*(x1808)))+(((x1812)*(x1818)))+(((IkReal(-1.00000000000000))*(px)))+(((x1808)*(x1810)))+(((IkReal(0.0135000000000000))*(x1801)))+(((r00)*(x1810)*(x1817)))+(((IkReal(-0.0975200000000000))*(r00)*(x1805)))+(((IkReal(0.0975200000000000))*(x1803)*(x1819)))+(((IkReal(0.0716400000000000))*(r00)*(x1817)))+(((IkReal(-0.125830000000000))*(x1800))));
evalcond[7]=((((IkReal(0.0716400000000000))*(cj6)*(x1813)))+(((IkReal(0.0716400000000000))*(x1822)))+(((IkReal(-1.00000000000000))*(x1805)*(x1806)))+(((x1807)*(x1812)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0975200000000000))*(x1803)*(x1813)))+(((cj4)*(x1806)*(x1817)))+(((IkReal(0.0716400000000000))*(x1811)))+(((IkReal(-0.125830000000000))*(x1801)))+(((IkReal(-0.0135000000000000))*(x1800)))+(((x1810)*(x1811))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1823=((cj5)*(sj6));
IkReal x1824=((cj5)*(cj6));
if( IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(r01)*(x1824)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(x1823))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((r10)*(x1823)))+(((r11)*(x1824)))+(((IkReal(-1.00000000000000))*(r12)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst15)*(((((IkReal(-1.00000000000000))*(r01)*(x1824)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(x1823)))))), ((gconst15)*(((((r10)*(x1823)))+(((r11)*(x1824)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1825=IKcos(j1);
IkReal x1826=IKsin(j1);
IkReal x1827=((IkReal(1.00000000000000))*(r00));
IkReal x1828=((cj4)*(cj6));
IkReal x1829=((cj5)*(sj6));
IkReal x1830=((cj6)*(sj4));
IkReal x1831=((IkReal(0.0975200000000000))*(r10));
IkReal x1832=((r11)*(sj6));
IkReal x1833=((cj5)*(r02));
IkReal x1834=((IkReal(1.00000000000000))*(sj4));
IkReal x1835=((IkReal(0.0975200000000000))*(cj4));
IkReal x1836=((cj5)*(r12));
IkReal x1837=((IkReal(0.0975200000000000))*(sj4));
IkReal x1838=((r11)*(sj5));
IkReal x1839=((IkReal(1.00000000000000))*(r10));
IkReal x1840=((IkReal(1.00000000000000))*(r01));
IkReal x1841=((cj5)*(cj6));
IkReal x1842=((sj5)*(sj6));
IkReal x1843=((r01)*(sj6));
IkReal x1844=((r01)*(sj5));
IkReal x1845=((IkReal(1.00000000000000))*(x1826));
IkReal x1846=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1847=((r10)*(x1842));
evalcond[0]=((((cj3)*(x1825)))+(((IkReal(-1.00000000000000))*(r11)*(x1841)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1829)*(x1839))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj3)*(x1845)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1827)*(x1829)))+(((IkReal(-1.00000000000000))*(x1840)*(x1841))));
evalcond[2]=((((cj4)*(x1843)))+(((IkReal(-1.00000000000000))*(sj4)*(x1827)*(x1842)))+(((IkReal(-1.00000000000000))*(x1833)*(x1834)))+(((IkReal(-1.00000000000000))*(x1825)))+(((IkReal(-1.00000000000000))*(x1827)*(x1828)))+(((IkReal(-1.00000000000000))*(sj5)*(x1830)*(x1840))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1834)*(x1836)))+(((IkReal(-1.00000000000000))*(x1845)))+(((IkReal(-1.00000000000000))*(x1830)*(x1838)))+(((IkReal(-1.00000000000000))*(x1828)*(x1839)))+(((cj4)*(x1832)))+(((IkReal(-1.00000000000000))*(x1834)*(x1847))));
evalcond[4]=((((cj4)*(x1847)))+(((cj4)*(x1836)))+(((sj3)*(x1825)))+(((x1828)*(x1838)))+(((IkReal(-1.00000000000000))*(x1830)*(x1839)))+(((sj4)*(x1832))));
evalcond[5]=((((x1828)*(x1844)))+(((IkReal(-1.00000000000000))*(sj3)*(x1845)))+(((cj4)*(r00)*(x1842)))+(((IkReal(-1.00000000000000))*(x1827)*(x1830)))+(((cj4)*(x1833)))+(((sj4)*(x1843))));
evalcond[6]=((((x1837)*(x1843)))+(((IkReal(0.0975200000000000))*(x1828)*(x1844)))+(((IkReal(0.0135000000000000))*(x1826)))+(((IkReal(-0.125830000000000))*(x1825)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0716400000000000))*(r00)*(x1842)))+(((r00)*(x1835)*(x1842)))+(((x1833)*(x1835)))+(((IkReal(-0.0975200000000000))*(r00)*(x1830)))+(((IkReal(0.0716400000000000))*(cj6)*(x1844)))+(((IkReal(0.0716400000000000))*(x1833))));
evalcond[7]=((((IkReal(0.0975200000000000))*(x1828)*(x1838)))+(((x1835)*(x1836)))+(((cj4)*(x1831)*(x1842)))+(((IkReal(-0.125830000000000))*(x1826)))+(((IkReal(-1.00000000000000))*(py)))+(((x1832)*(x1837)))+(((IkReal(0.0716400000000000))*(cj6)*(x1838)))+(((IkReal(0.0716400000000000))*(x1847)))+(((IkReal(-0.0135000000000000))*(x1825)))+(((IkReal(0.0716400000000000))*(x1836)))+(((IkReal(-1.00000000000000))*(x1830)*(x1831))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1848=((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30);
IkReal x1849=((r10)*(sj6));
IkReal x1850=((cj5)*(sj2));
IkReal x1851=((sj4)*(sj5));
IkReal x1852=((cj6)*(r11));
IkReal x1853=((cj2)*(sj3));
IkReal x1854=((cj5)*(r12)*(sj4));
IkReal x1855=((cj4)*(cj6)*(r10));
IkReal x1856=((IkReal(1.00000000000000))*(cj4)*(r11)*(sj6));
if( IKabs(((x1848)*(((((x1851)*(x1852)))+(((x1849)*(x1851)))+(x1854)+(x1855)+(((IkReal(-1.00000000000000))*(x1856))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1848)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((x1851)*(x1852)*(x1853)))+(((x1850)*(x1852)))+(((x1849)*(x1850)))+(((x1853)*(x1854)))+(((x1853)*(x1855)))+(((x1849)*(x1851)*(x1853)))+(((IkReal(-1.00000000000000))*(x1853)*(x1856)))+(((IkReal(-1.00000000000000))*(r12)*(sj2)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1848)*(((((x1851)*(x1852)))+(((x1849)*(x1851)))+(x1854)+(x1855)+(((IkReal(-1.00000000000000))*(x1856)))))))+IKsqr(((x1848)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((x1851)*(x1852)*(x1853)))+(((x1850)*(x1852)))+(((x1849)*(x1850)))+(((x1853)*(x1854)))+(((x1853)*(x1855)))+(((x1849)*(x1851)*(x1853)))+(((IkReal(-1.00000000000000))*(x1853)*(x1856)))+(((IkReal(-1.00000000000000))*(r12)*(sj2)*(sj5)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((x1848)*(((((x1851)*(x1852)))+(((x1849)*(x1851)))+(x1854)+(x1855)+(((IkReal(-1.00000000000000))*(x1856)))))), ((x1848)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((x1851)*(x1852)*(x1853)))+(((x1850)*(x1852)))+(((x1849)*(x1850)))+(((x1853)*(x1854)))+(((x1853)*(x1855)))+(((x1849)*(x1851)*(x1853)))+(((IkReal(-1.00000000000000))*(x1853)*(x1856)))+(((IkReal(-1.00000000000000))*(r12)*(sj2)*(sj5)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1857=IKcos(j1);
IkReal x1858=IKsin(j1);
IkReal x1859=((IkReal(1.00000000000000))*(r00));
IkReal x1860=((cj4)*(cj6));
IkReal x1861=((cj5)*(sj6));
IkReal x1862=((cj6)*(sj4));
IkReal x1863=((r11)*(sj6));
IkReal x1864=((cj5)*(r02));
IkReal x1865=((IkReal(1.00000000000000))*(sj4));
IkReal x1866=((IkReal(0.0975200000000000))*(cj4));
IkReal x1867=((cj5)*(r12));
IkReal x1868=((IkReal(0.0975200000000000))*(sj4));
IkReal x1869=((IkReal(1.00000000000000))*(sj5));
IkReal x1870=((IkReal(1.00000000000000))*(r10));
IkReal x1871=((r11)*(sj5));
IkReal x1872=((cj2)*(sj3));
IkReal x1873=((sj5)*(sj6));
IkReal x1874=((r01)*(sj6));
IkReal x1875=((r01)*(sj5));
IkReal x1876=((IkReal(1.00000000000000))*(x1858));
IkReal x1877=((cj3)*(x1857));
IkReal x1878=((r10)*(x1862));
IkReal x1879=((cj2)*(x1858));
IkReal x1880=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1881=((r10)*(x1873));
IkReal x1882=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1872)*(x1876)))+(((IkReal(-1.00000000000000))*(r11)*(x1882)))+(x1877)+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1861)*(x1870))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1857)*(x1872)))+(((IkReal(-1.00000000000000))*(cj3)*(x1876)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1859)*(x1861)))+(((IkReal(-1.00000000000000))*(r01)*(x1882))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x1862)*(x1869)))+(((IkReal(-1.00000000000000))*(x1864)*(x1865)))+(((IkReal(-1.00000000000000))*(sj4)*(x1859)*(x1873)))+(((IkReal(-1.00000000000000))*(x1859)*(x1860)))+(((sj2)*(x1857)))+(((cj4)*(x1874))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1865)*(x1867)))+(((cj4)*(x1863)))+(((IkReal(-1.00000000000000))*(x1860)*(x1870)))+(((IkReal(-1.00000000000000))*(x1865)*(x1881)))+(((sj2)*(x1858)))+(((IkReal(-1.00000000000000))*(r11)*(x1862)*(x1869))));
evalcond[4]=((((x1860)*(x1871)))+(((sj4)*(x1863)))+(((cj4)*(x1881)))+(((cj4)*(x1867)))+(((cj3)*(x1879)))+(((sj3)*(x1857)))+(((IkReal(-1.00000000000000))*(x1862)*(x1870))));
evalcond[5]=((((x1860)*(x1875)))+(((cj2)*(x1877)))+(((cj4)*(x1864)))+(((IkReal(-1.00000000000000))*(sj3)*(x1876)))+(((cj4)*(r00)*(x1873)))+(((IkReal(-1.00000000000000))*(x1859)*(x1862)))+(((sj4)*(x1874))));
evalcond[6]=((((IkReal(0.0716400000000000))*(x1864)))+(((x1864)*(x1866)))+(((IkReal(0.0975200000000000))*(x1860)*(x1875)))+(((r00)*(x1866)*(x1873)))+(((IkReal(0.0135000000000000))*(x1858)))+(((IkReal(-0.125830000000000))*(x1857)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0716400000000000))*(r00)*(x1873)))+(((IkReal(-0.115380000000000))*(cj2)*(x1857)))+(((x1868)*(x1874)))+(((IkReal(-0.0975200000000000))*(r00)*(x1862)))+(((IkReal(0.0716400000000000))*(cj6)*(x1875))));
evalcond[7]=((((IkReal(-0.0135000000000000))*(x1857)))+(((IkReal(0.0716400000000000))*(x1867)))+(((IkReal(0.0975200000000000))*(x1860)*(x1871)))+(((x1866)*(x1867)))+(((IkReal(-0.0975200000000000))*(x1878)))+(((IkReal(-0.125830000000000))*(x1858)))+(((IkReal(0.0716400000000000))*(x1881)))+(((x1863)*(x1868)))+(((IkReal(-1.00000000000000))*(py)))+(((x1866)*(x1881)))+(((IkReal(0.0716400000000000))*(cj6)*(x1871)))+(((IkReal(-0.115380000000000))*(x1879))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1883=(cj3)*(cj3);
IkReal x1884=(sj3)*(sj3);
IkReal x1885=((r10)*(sj3));
IkReal x1886=((IkReal(1.00000000000000))*(sj4));
IkReal x1887=((IkReal(1.00000000000000))*(cj3));
IkReal x1888=((IkReal(1.00000000000000))*(cj5));
IkReal x1889=((r11)*(sj6));
IkReal x1890=((cj6)*(r11));
IkReal x1891=((cj4)*(sj5));
IkReal x1892=((r12)*(sj5));
IkReal x1893=((sj6)*(x1891));
IkReal x1894=((cj4)*(cj5)*(r12));
if( IKabs(((((IKabs(((((cj2)*(x1884)))+(((cj2)*(x1883))))) != 0)?((IkReal)1/(((((cj2)*(x1884)))+(((cj2)*(x1883)))))):(IkReal)1.0e30))*(((((sj3)*(x1892)))+(((IkReal(-1.00000000000000))*(x1887)*(x1890)*(x1891)))+(((IkReal(-1.00000000000000))*(r10)*(x1887)*(x1893)))+(((IkReal(-1.00000000000000))*(cj3)*(x1886)*(x1889)))+(((IkReal(-1.00000000000000))*(x1887)*(x1894)))+(((cj3)*(cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(sj3)*(x1888)*(x1890)))+(((IkReal(-1.00000000000000))*(sj6)*(x1885)*(x1888))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-1.00000000000000))*(x1883)))+(((IkReal(-1.00000000000000))*(x1884))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x1883)))+(((IkReal(-1.00000000000000))*(x1884)))))):(IkReal)1.0e30))*(((((x1885)*(x1893)))+(((sj3)*(x1894)))+(((IkReal(-1.00000000000000))*(cj6)*(x1885)*(x1886)))+(((sj3)*(sj4)*(x1889)))+(((cj3)*(x1892)))+(((IkReal(-1.00000000000000))*(cj5)*(r10)*(sj6)*(x1887)))+(((sj3)*(x1890)*(x1891)))+(((IkReal(-1.00000000000000))*(cj5)*(x1887)*(x1890))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((cj2)*(x1884)))+(((cj2)*(x1883))))) != 0)?((IkReal)1/(((((cj2)*(x1884)))+(((cj2)*(x1883)))))):(IkReal)1.0e30))*(((((sj3)*(x1892)))+(((IkReal(-1.00000000000000))*(x1887)*(x1890)*(x1891)))+(((IkReal(-1.00000000000000))*(r10)*(x1887)*(x1893)))+(((IkReal(-1.00000000000000))*(cj3)*(x1886)*(x1889)))+(((IkReal(-1.00000000000000))*(x1887)*(x1894)))+(((cj3)*(cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(sj3)*(x1888)*(x1890)))+(((IkReal(-1.00000000000000))*(sj6)*(x1885)*(x1888)))))))+IKsqr(((((IKabs(((((IkReal(-1.00000000000000))*(x1883)))+(((IkReal(-1.00000000000000))*(x1884))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x1883)))+(((IkReal(-1.00000000000000))*(x1884)))))):(IkReal)1.0e30))*(((((x1885)*(x1893)))+(((sj3)*(x1894)))+(((IkReal(-1.00000000000000))*(cj6)*(x1885)*(x1886)))+(((sj3)*(sj4)*(x1889)))+(((cj3)*(x1892)))+(((IkReal(-1.00000000000000))*(cj5)*(r10)*(sj6)*(x1887)))+(((sj3)*(x1890)*(x1891)))+(((IkReal(-1.00000000000000))*(cj5)*(x1887)*(x1890)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(((((cj2)*(x1884)))+(((cj2)*(x1883))))) != 0)?((IkReal)1/(((((cj2)*(x1884)))+(((cj2)*(x1883)))))):(IkReal)1.0e30))*(((((sj3)*(x1892)))+(((IkReal(-1.00000000000000))*(x1887)*(x1890)*(x1891)))+(((IkReal(-1.00000000000000))*(r10)*(x1887)*(x1893)))+(((IkReal(-1.00000000000000))*(cj3)*(x1886)*(x1889)))+(((IkReal(-1.00000000000000))*(x1887)*(x1894)))+(((cj3)*(cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(sj3)*(x1888)*(x1890)))+(((IkReal(-1.00000000000000))*(sj6)*(x1885)*(x1888)))))), ((((IKabs(((((IkReal(-1.00000000000000))*(x1883)))+(((IkReal(-1.00000000000000))*(x1884))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x1883)))+(((IkReal(-1.00000000000000))*(x1884)))))):(IkReal)1.0e30))*(((((x1885)*(x1893)))+(((sj3)*(x1894)))+(((IkReal(-1.00000000000000))*(cj6)*(x1885)*(x1886)))+(((sj3)*(sj4)*(x1889)))+(((cj3)*(x1892)))+(((IkReal(-1.00000000000000))*(cj5)*(r10)*(sj6)*(x1887)))+(((sj3)*(x1890)*(x1891)))+(((IkReal(-1.00000000000000))*(cj5)*(x1887)*(x1890)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1895=IKcos(j1);
IkReal x1896=IKsin(j1);
IkReal x1897=((IkReal(1.00000000000000))*(r00));
IkReal x1898=((cj4)*(cj6));
IkReal x1899=((cj5)*(sj6));
IkReal x1900=((cj6)*(sj4));
IkReal x1901=((r11)*(sj6));
IkReal x1902=((cj5)*(r02));
IkReal x1903=((IkReal(1.00000000000000))*(sj4));
IkReal x1904=((IkReal(0.0975200000000000))*(cj4));
IkReal x1905=((cj5)*(r12));
IkReal x1906=((IkReal(0.0975200000000000))*(sj4));
IkReal x1907=((IkReal(1.00000000000000))*(sj5));
IkReal x1908=((IkReal(1.00000000000000))*(r10));
IkReal x1909=((r11)*(sj5));
IkReal x1910=((cj2)*(sj3));
IkReal x1911=((sj5)*(sj6));
IkReal x1912=((r01)*(sj6));
IkReal x1913=((r01)*(sj5));
IkReal x1914=((IkReal(1.00000000000000))*(x1896));
IkReal x1915=((cj3)*(x1895));
IkReal x1916=((r10)*(x1900));
IkReal x1917=((cj2)*(x1896));
IkReal x1918=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1919=((r10)*(x1911));
IkReal x1920=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1899)*(x1908)))+(((IkReal(-1.00000000000000))*(r11)*(x1920)))+(((IkReal(-1.00000000000000))*(x1910)*(x1914)))+(x1915)+(((r12)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1897)*(x1899)))+(((IkReal(-1.00000000000000))*(x1895)*(x1910)))+(((IkReal(-1.00000000000000))*(r01)*(x1920)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj3)*(x1914))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1902)*(x1903)))+(((IkReal(-1.00000000000000))*(x1897)*(x1898)))+(((sj2)*(x1895)))+(((IkReal(-1.00000000000000))*(r01)*(x1900)*(x1907)))+(((IkReal(-1.00000000000000))*(sj4)*(x1897)*(x1911)))+(((cj4)*(x1912))));
evalcond[3]=((((cj4)*(x1901)))+(((sj2)*(x1896)))+(((IkReal(-1.00000000000000))*(x1903)*(x1905)))+(((IkReal(-1.00000000000000))*(r11)*(x1900)*(x1907)))+(((IkReal(-1.00000000000000))*(x1903)*(x1919)))+(((IkReal(-1.00000000000000))*(x1898)*(x1908))));
evalcond[4]=((((cj4)*(x1905)))+(((sj3)*(x1895)))+(((cj3)*(x1917)))+(((IkReal(-1.00000000000000))*(x1900)*(x1908)))+(((x1898)*(x1909)))+(((sj4)*(x1901)))+(((cj4)*(x1919))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj3)*(x1914)))+(((cj4)*(x1902)))+(((sj4)*(x1912)))+(((cj2)*(x1915)))+(((cj4)*(r00)*(x1911)))+(((x1898)*(x1913)))+(((IkReal(-1.00000000000000))*(x1897)*(x1900))));
evalcond[6]=((((IkReal(0.0716400000000000))*(r00)*(x1911)))+(((IkReal(0.0135000000000000))*(x1896)))+(((IkReal(0.0975200000000000))*(x1898)*(x1913)))+(((IkReal(0.0716400000000000))*(cj6)*(x1913)))+(((IkReal(-0.125830000000000))*(x1895)))+(((IkReal(0.0716400000000000))*(x1902)))+(((IkReal(-1.00000000000000))*(px)))+(((x1906)*(x1912)))+(((IkReal(-0.115380000000000))*(cj2)*(x1895)))+(((x1902)*(x1904)))+(((r00)*(x1904)*(x1911)))+(((IkReal(-0.0975200000000000))*(r00)*(x1900))));
evalcond[7]=((((x1904)*(x1919)))+(((x1901)*(x1906)))+(((x1904)*(x1905)))+(((IkReal(0.0716400000000000))*(cj6)*(x1909)))+(((IkReal(0.0716400000000000))*(x1919)))+(((IkReal(-0.125830000000000))*(x1896)))+(((IkReal(-0.0135000000000000))*(x1895)))+(((IkReal(0.0975200000000000))*(x1898)*(x1909)))+(((IkReal(0.0716400000000000))*(x1905)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.115380000000000))*(x1917)))+(((IkReal(-0.0975200000000000))*(x1916))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1921=((r02)*(sj5));
IkReal x1922=((cj3)*(cj5));
IkReal x1923=((cj6)*(r11));
IkReal x1924=((cj2)*(sj3));
IkReal x1925=((IkReal(1.00000000000000))*(cj5));
IkReal x1926=((r10)*(sj6));
IkReal x1927=((r12)*(sj5));
IkReal x1928=((cj6)*(r01));
IkReal x1929=((IkReal(1.00000000000000))*(r00)*(sj6));
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(x1923)*(x1924)*(x1925)))+(((IkReal(-1.00000000000000))*(x1922)*(x1929)))+(((cj3)*(x1921)))+(((IkReal(-1.00000000000000))*(x1922)*(x1928)))+(((IkReal(-1.00000000000000))*(x1924)*(x1925)*(x1926)))+(((x1924)*(x1927))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((x1921)*(x1924)))+(((IkReal(-1.00000000000000))*(cj3)*(x1927)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1924)*(x1925)))+(((IkReal(-1.00000000000000))*(x1924)*(x1925)*(x1928)))+(((x1922)*(x1923)))+(((x1922)*(x1926))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(x1923)*(x1924)*(x1925)))+(((IkReal(-1.00000000000000))*(x1922)*(x1929)))+(((cj3)*(x1921)))+(((IkReal(-1.00000000000000))*(x1922)*(x1928)))+(((IkReal(-1.00000000000000))*(x1924)*(x1925)*(x1926)))+(((x1924)*(x1927)))))), ((gconst7)*(((((x1921)*(x1924)))+(((IkReal(-1.00000000000000))*(cj3)*(x1927)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1924)*(x1925)))+(((IkReal(-1.00000000000000))*(x1924)*(x1925)*(x1928)))+(((x1922)*(x1923)))+(((x1922)*(x1926)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1930=IKcos(j1);
IkReal x1931=IKsin(j1);
IkReal x1932=((IkReal(1.00000000000000))*(r00));
IkReal x1933=((cj4)*(cj6));
IkReal x1934=((cj5)*(sj6));
IkReal x1935=((cj6)*(sj4));
IkReal x1936=((r11)*(sj6));
IkReal x1937=((cj5)*(r02));
IkReal x1938=((IkReal(1.00000000000000))*(sj4));
IkReal x1939=((IkReal(0.0975200000000000))*(cj4));
IkReal x1940=((cj5)*(r12));
IkReal x1941=((IkReal(0.0975200000000000))*(sj4));
IkReal x1942=((IkReal(1.00000000000000))*(sj5));
IkReal x1943=((IkReal(1.00000000000000))*(r10));
IkReal x1944=((r11)*(sj5));
IkReal x1945=((cj2)*(sj3));
IkReal x1946=((sj5)*(sj6));
IkReal x1947=((r01)*(sj6));
IkReal x1948=((r01)*(sj5));
IkReal x1949=((IkReal(1.00000000000000))*(x1931));
IkReal x1950=((cj3)*(x1930));
IkReal x1951=((r10)*(x1935));
IkReal x1952=((cj2)*(x1931));
IkReal x1953=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1954=((r10)*(x1946));
IkReal x1955=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1945)*(x1949)))+(x1950)+(((IkReal(-1.00000000000000))*(r11)*(x1955)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1934)*(x1943))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj3)*(x1949)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1932)*(x1934)))+(((IkReal(-1.00000000000000))*(r01)*(x1955)))+(((IkReal(-1.00000000000000))*(x1930)*(x1945))));
evalcond[2]=((((sj2)*(x1930)))+(((IkReal(-1.00000000000000))*(x1937)*(x1938)))+(((IkReal(-1.00000000000000))*(r01)*(x1935)*(x1942)))+(((IkReal(-1.00000000000000))*(sj4)*(x1932)*(x1946)))+(((IkReal(-1.00000000000000))*(x1932)*(x1933)))+(((cj4)*(x1947))));
evalcond[3]=((((sj2)*(x1931)))+(((cj4)*(x1936)))+(((IkReal(-1.00000000000000))*(r11)*(x1935)*(x1942)))+(((IkReal(-1.00000000000000))*(x1938)*(x1940)))+(((IkReal(-1.00000000000000))*(x1938)*(x1954)))+(((IkReal(-1.00000000000000))*(x1933)*(x1943))));
evalcond[4]=((((cj3)*(x1952)))+(((sj4)*(x1936)))+(((IkReal(-1.00000000000000))*(x1935)*(x1943)))+(((cj4)*(x1954)))+(((cj4)*(x1940)))+(((x1933)*(x1944)))+(((sj3)*(x1930))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj3)*(x1949)))+(((cj4)*(x1937)))+(((cj2)*(x1950)))+(((cj4)*(r00)*(x1946)))+(((IkReal(-1.00000000000000))*(x1932)*(x1935)))+(((sj4)*(x1947)))+(((x1933)*(x1948))));
evalcond[6]=((((IkReal(0.0135000000000000))*(x1931)))+(((IkReal(0.0975200000000000))*(x1933)*(x1948)))+(((IkReal(-0.125830000000000))*(x1930)))+(((IkReal(-0.115380000000000))*(cj2)*(x1930)))+(((IkReal(0.0716400000000000))*(x1937)))+(((IkReal(0.0716400000000000))*(r00)*(x1946)))+(((IkReal(-1.00000000000000))*(px)))+(((x1941)*(x1947)))+(((r00)*(x1939)*(x1946)))+(((IkReal(-0.0975200000000000))*(r00)*(x1935)))+(((IkReal(0.0716400000000000))*(cj6)*(x1948)))+(((x1937)*(x1939))));
evalcond[7]=((((IkReal(-0.115380000000000))*(x1952)))+(((IkReal(0.0975200000000000))*(x1933)*(x1944)))+(((IkReal(-0.125830000000000))*(x1931)))+(((x1939)*(x1954)))+(((x1939)*(x1940)))+(((IkReal(-0.0975200000000000))*(x1951)))+(((x1936)*(x1941)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0716400000000000))*(x1940)))+(((IkReal(0.0716400000000000))*(x1954)))+(((IkReal(-0.0135000000000000))*(x1930)))+(((IkReal(0.0716400000000000))*(cj6)*(x1944))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}
    }
}
return solutions.GetNumSolutions()>0;
}

/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly12qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[24*24]) = {0};
    IkReal IKFAST_ALIGNED16(A[12*12]);
    IkReal IKFAST_ALIGNED16(work[24*24*23]);
    int ipiv[12];
    int info, coeffindex;
    const int worksize=24*24*23;
    const int matrixdim = 12;
    const int matrixdim2 = 24;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 3; ++k) {
            A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 6; ++j) {
            for(int k = 0; k < 9; ++k) {
                IkReal a = matcoeffs[coeffindex+108], b = matcoeffs[coeffindex+54], c = matcoeffs[coeffindex];
                A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 3; ++k) {
                A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[24]);
    IkReal IKFAST_ALIGNED16(wi[24]);
    IkReal IKFAST_ALIGNED16(vr[24*24]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency12(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[3]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[5]/ev[2];
                    rawroots[numroots++] = ev[2]/ev[1];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[9]/ev[6];
                    rawroots[numroots++] = ev[10]/ev[9];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[11]/ev[8];
                    rawroots[numroots++] = ev[11]/ev[10];
                }
            }
        }
    }
}
static inline bool checkconsistency12(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 11; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-6*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[0]-Breal[1]) < tol && IKabs(Breal[0]*Breal[2]-Breal[3]) < tol && IKabs(Breal[1]*Breal[2]-Breal[4]) < tol && IKabs(Breal[2]*Breal[2]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol && IKabs(Breal[1]*Breal[5]-Breal[7]) < tol && IKabs(Breal[2]*Breal[5]-Breal[8]) < tol && IKabs(Breal[0]*Breal[8]-Breal[9]) < tol && IKabs(Breal[1]*Breal[8]-Breal[10]) < tol;
}
};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:GenericRobot - robai (75ad083aca68baba5ae42f6b3337da20)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
