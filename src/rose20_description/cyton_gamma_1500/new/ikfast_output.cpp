/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2014-02-13 11:19:55.899566
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45;
x0=IKsin(j[1]);
x1=IKcos(j[1]);
x2=IKcos(j[3]);
x3=IKcos(j[2]);
x4=IKsin(j[3]);
x5=IKcos(j[5]);
x6=IKsin(j[5]);
x7=IKcos(j[4]);
x8=IKsin(j[2]);
x9=IKsin(j[4]);
x10=IKsin(j[0]);
x11=IKcos(j[0]);
x12=((IkReal(0.0716400000000000))*(x10));
x13=((IkReal(0.0310000000000000))*(x2));
x14=((IkReal(1.00000000000000))*(x2));
x15=((IkReal(1.00000000000000))*(x3));
x16=((IkReal(0.115380000000000))*(x1));
x17=((IkReal(0.0310000000000000))*(x11));
x18=((IkReal(0.0716400000000000))*(x11));
x19=((IkReal(1.00000000000000))*(x8));
x20=((IkReal(1.00000000000000))*(x10));
x21=((IkReal(0.0975200000000000))*(x10));
x22=((IkReal(1.00000000000000))*(x11));
x23=((IkReal(0.0310000000000000))*(x10));
x24=((x0)*(x4));
x25=((x1)*(x3));
x26=((x1)*(x8));
x27=((x0)*(x10));
x28=((x1)*(x4));
x29=((x0)*(x9));
x30=((x11)*(x8));
x31=((x0)*(x3));
x32=((x0)*(x11)*(x2));
x33=((x15)*(x24));
x34=((x1)*(x10)*(x19));
x35=((x22)*(x24));
x36=((x30)+(((x10)*(x25))));
x37=((((x11)*(x25)))+(((IkReal(-1.00000000000000))*(x10)*(x19))));
x38=((((x14)*(x31)))+(((IkReal(1.00000000000000))*(x28))));
x39=((((IkReal(-1.00000000000000))*(x10)*(x15)))+(((IkReal(-1.00000000000000))*(x1)*(x11)*(x19))));
x40=((x37)*(x4));
x41=((x36)*(x4));
x42=((((IkReal(-1.00000000000000))*(x14)*(x36)))+(((x20)*(x24))));
x43=((((x0)*(x7)*(x8)))+(((x38)*(x9))));
x44=((((x42)*(x9)))+(((x7)*(((((IkReal(-1.00000000000000))*(x34)))+(((x11)*(x3))))))));
x45=((((IkReal(-1.00000000000000))*(x39)*(x7)))+(((x9)*(((((IkReal(-1.00000000000000))*(x35)))+(((IkReal(1.00000000000000))*(x14)*(x37))))))));
eerot[0]=((((x5)*(((((IkReal(-1.00000000000000))*(x33)))+(((x1)*(x2)))))))+(((x43)*(x6))));
eerot[1]=((((x43)*(x5)))+(((x6)*(((((IkReal(-1.00000000000000))*(x1)*(x14)))+(x33))))));
eerot[2]=((((IkReal(-1.00000000000000))*(x19)*(x29)))+(((x38)*(x7))));
eetrans[0]=((((IkReal(0.0975200000000000))*(x31)))+(((IkReal(-0.0310000000000000))*(x29)*(x8)))+(((IkReal(0.0716400000000000))*(x2)*(x31)))+(((x7)*(((((IkReal(0.0310000000000000))*(x28)))+(((x13)*(x31)))))))+(((IkReal(0.115380000000000))*(x0)))+(((IkReal(0.0716400000000000))*(x28))));
eerot[3]=((((x5)*(((((x2)*(x27)))+(x41)))))+(((x44)*(x6))));
eerot[4]=((((x44)*(x5)))+(((x6)*(((((IkReal(-1.00000000000000))*(x41)))+(((IkReal(-1.00000000000000))*(x14)*(x27))))))));
eerot[5]=((((x42)*(x7)))+(((x9)*(((((IkReal(-1.00000000000000))*(x11)*(x15)))+(x34))))));
IkReal x46=((IkReal(1.00000000000000))*(x25));
eetrans[1]=((((IkReal(-0.0135000000000000))*(x11)))+(((x2)*(((((IkReal(-1.00000000000000))*(x18)*(x8)))+(((IkReal(-1.00000000000000))*(x12)*(x46)))))))+(((IkReal(-1.00000000000000))*(x21)*(x46)))+(((IkReal(-0.125830000000000))*(x10)))+(((x9)*(((((x23)*(x26)))+(((IkReal(-1.00000000000000))*(x17)*(x3)))))))+(((IkReal(-0.0975200000000000))*(x30)))+(((IkReal(-1.00000000000000))*(x10)*(x16)))+(((x12)*(x24)))+(((x7)*(((((x23)*(x24)))+(((IkReal(-1.00000000000000))*(x13)*(x36))))))));
eerot[6]=((((x5)*(((((IkReal(-1.00000000000000))*(x32)))+(((IkReal(-1.00000000000000))*(x40)))))))+(((x45)*(x6))));
eerot[7]=((((x6)*(((x32)+(x40)))))+(((x45)*(x5))));
eerot[8]=((((x7)*(((((IkReal(-1.00000000000000))*(x35)))+(((x2)*(x37)))))))+(((x39)*(x9))));
IkReal x47=((IkReal(1.00000000000000))*(x24));
IkReal x48=((IkReal(1.00000000000000))*(x8));
eetrans[2]=((IkReal(0.103350000000000))+(((IkReal(-0.0135000000000000))*(x10)))+(((x7)*(((((x13)*(x37)))+(((IkReal(-1.00000000000000))*(x17)*(x47)))))))+(((IkReal(0.0975200000000000))*(x11)*(x25)))+(((IkReal(0.125830000000000))*(x11)))+(((IkReal(-1.00000000000000))*(x18)*(x47)))+(((IkReal(-1.00000000000000))*(x21)*(x48)))+(((x9)*(((((IkReal(-1.00000000000000))*(x17)*(x26)))+(((IkReal(-1.00000000000000))*(x23)*(x3)))))))+(((x11)*(x16)))+(((x2)*(((((x18)*(x25)))+(((IkReal(-1.00000000000000))*(x12)*(x48))))))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j1,cj1,sj1,htj1,j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j6,cj6,sj6,htj6,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((IkReal(-1.00000000000000))*(r20));
new_r01=((IkReal(-1.00000000000000))*(r21));
new_r02=((IkReal(-1.00000000000000))*(r22));
new_px=((IkReal(0.103350000000000))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0310000000000000))*(r22))));
new_r10=r10;
new_r11=r11;
new_r12=r12;
new_py=((((IkReal(-0.0310000000000000))*(r12)))+(py));
new_r20=r00;
new_r21=r01;
new_r22=r02;
new_pz=((((IkReal(-0.0310000000000000))*(r02)))+(px));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
IkReal op[162], zeror[48];
int numroots;
IkReal x49=((IkReal(0.169160000000000))*(r21));
IkReal x50=((IkReal(0.107287610267822))*(npx));
IkReal x51=((IkReal(0.338320000000000))*(r22));
IkReal x52=((IkReal(1.00000000000000))*(rxp0_2));
IkReal x53=((IkReal(2.00000000000000))*(rxp1_2));
IkReal x54=((IkReal(0.338320000000000))*(r20));
IkReal x55=((IkReal(0.214575220535643))*(npy));
IkReal x56=((IkReal(0.338320000000000))*(rxp1_2));
IkReal x57=((IkReal(0.000712877700000000))*(r20));
IkReal x58=((IkReal(0.00142575540000000))*(r21));
IkReal x59=((IkReal(0.676640000000000))*(rxp0_2));
IkReal x60=((pp)*(r20));
IkReal x61=((IkReal(0.338320000000000))*(npz));
IkReal x62=((IkReal(0.0290365308000000))*(r20));
IkReal x63=((IkReal(1.00000000000000))*(pp));
IkReal x64=((IkReal(0.916951442422316))*(npx));
IkReal x65=((IkReal(0.169160000000000))*(r22));
IkReal x66=((pp)*(r22));
IkReal x67=((IkReal(0.338320000000000))*(pz));
IkReal x68=((IkReal(0.00311526000000000))*(r21));
IkReal x69=((IkReal(0.0313180001000000))*(r22));
IkReal x70=((IkReal(0.0626360002000000))*(r21));
IkReal x71=((IkReal(0.00623052000000000))*(r22));
IkReal x72=((IkReal(0.338320000000000))*(rxp0_2));
IkReal x73=((IkReal(0.00311526000000000))*(r22));
IkReal x74=((IkReal(0.0259122111000000))*(r21));
IkReal x75=((IkReal(0.0518244222000000))*(r22));
IkReal x76=((IkReal(0.00623052000000000))*(r21));
IkReal x77=((pp)*(r21));
IkReal x78=((IkReal(0.0518244222000000))*(r20));
IkReal x79=((IkReal(0.676640000000000))*(rxp1_2));
IkReal x80=((IkReal(4.00000000000000))*(rxp1_2));
IkReal x81=((IkReal(0.429150441071287))*(npy));
IkReal x82=((IkReal(2.00000000000000))*(rxp2_2));
IkReal x83=((IkReal(0.214575220535643))*(npz));
IkReal x84=((IkReal(0.286560000000000))*(pz));
IkReal x85=((IkReal(0.0499002450000000))*(r22));
IkReal x86=((IkReal(0.390080000000000))*(npx));
IkReal x87=((IkReal(0.0580730616000000))*(r22));
IkReal x88=((IkReal(0.780160000000000))*(npy));
IkReal x89=((IkReal(1.83390288484463))*(npz));
IkReal x90=((IkReal(0.195040000000000))*(r20));
IkReal x91=((IkReal(0.0141615106000000))*(r20));
IkReal x92=((IkReal(0.286560000000000))*(rxp1_2));
IkReal x93=((IkReal(0.573120000000000))*(rxp0_2));
IkReal x94=((IkReal(0.0283230212000000))*(r21));
IkReal x95=((IkReal(0.00623052000000000))*(r20));
IkReal x96=((IkReal(0.390080000000000))*(rxp2_2));
IkReal x97=((IkReal(0.0124610400000000))*(r21));
IkReal x98=((IkReal(0.0517600000000000))*(r22));
IkReal x99=((IkReal(0.0258800000000000))*(r21));
IkReal x100=((IkReal(0.0517600000000000))*(r20));
IkReal x101=((IkReal(0.0286582089000000))*(r20));
IkReal x102=((IkReal(0.0517600000000000))*(rxp1_2));
IkReal x103=((IkReal(0.0573164178000000))*(r21));
IkReal x104=((IkReal(0.103520000000000))*(rxp0_2));
IkReal x105=((IkReal(0.0517600000000000))*(npz));
IkReal x106=((IkReal(0.0580730616000000))*(r21));
IkReal x107=((IkReal(0.0258800000000000))*(r22));
IkReal x108=((IkReal(1.83390288484463))*(npy));
IkReal x109=((IkReal(0.00337266890000000))*(r22));
IkReal x110=((IkReal(0.0517600000000000))*(pz));
IkReal x111=((IkReal(0.00674533780000000))*(r21));
IkReal x112=((IkReal(0.0517600000000000))*(rxp0_2));
IkReal x113=((IkReal(0.00203312010000000))*(r21));
IkReal x114=((IkReal(0.00406624020000000))*(r22));
IkReal x115=((IkReal(0.00406624020000000))*(r20));
IkReal x116=((IkReal(0.103520000000000))*(rxp1_2));
IkReal x117=((npz)*(pz));
IkReal x118=((IkReal(8.00000000000000))*(pz));
IkReal x119=((npy)*(pz));
IkReal x120=((npx)*(pz));
IkReal x121=((IkReal(2.00000000000000))*(x120));
IkReal x122=((IkReal(-0.676640000000000))*(rxp2_2));
IkReal x123=((IkReal(1.00000000000000))*(x60));
IkReal x124=((IkReal(2.00000000000000))*(x77));
IkReal x125=((IkReal(4.00000000000000))*(x119));
IkReal x126=((IkReal(-0.0580730616000000))*(r21));
IkReal x127=((IkReal(-1.83390288484463))*(npy));
IkReal x128=((IkReal(2.00000000000000))*(x117));
IkReal x129=((r22)*(x63));
IkReal x130=((IkReal(2.00000000000000))*(x119));
IkReal x131=((IkReal(2.00000000000000))*(x66));
IkReal x132=((IkReal(4.00000000000000))*(x117));
IkReal x133=((IkReal(2.00000000000000))*(x60));
IkReal x134=((IkReal(4.00000000000000))*(x120));
IkReal x135=((r21)*(x63));
IkReal x136=((IkReal(4.00000000000000))*(x77));
IkReal x137=((IkReal(-0.390080000000000))*(r21));
IkReal x138=((npy)*(x118));
IkReal x139=((IkReal(-0.573120000000000))*(rxp2_2));
IkReal x140=((IkReal(-0.103520000000000))*(rxp2_2));
IkReal x141=((IkReal(0.0290365308000000))+(x60));
IkReal x142=((pz)+(x64));
IkReal x143=((npx)*(x118));
IkReal x144=((IkReal(4.00000000000000))*(x60));
IkReal x145=((IkReal(-0.00623052000000000))*(r20));
IkReal x146=((IkReal(-0.131380802670269))+(x90));
IkReal x147=((IkReal(0.000712877700000000))+(x61));
IkReal x148=((IkReal(0.0286582089000000))+(x105));
IkReal x149=((x49)+(x50));
IkReal x150=((IkReal(-0.0153721687991735))+(x83)+(((IkReal(-1.00000000000000))*(x82))));
IkReal x151=((IkReal(-0.0153721687991735))+(x82)+(((IkReal(-1.00000000000000))*(x83))));
IkReal x152=((x86)+(x87));
IkReal x153=((x95)+(x96));
IkReal x154=((x50)+(x99));
IkReal x155=((x62)+(x63));
IkReal x156=((x73)+(x72));
IkReal x157=((x67)+(x68));
IkReal x158=((x77)+(x74));
IkReal x159=((x105)+(x63));
IkReal x160=((x110)+(x68));
IkReal x161=((x61)+(x63));
IkReal x162=((((IkReal(0.0998004900000000))*(r21)))+(x138));
IkReal x163=((x133)+(x92));
IkReal x164=((x134)+(x91));
IkReal x165=((x129)+(x68));
IkReal x166=((x124)+(x71));
IkReal x167=((x125)+(x71));
IkReal x168=((x138)+(x94));
IkReal x169=((x125)+(x58));
IkReal x170=((x132)+(x85));
IkReal x171=((x133)+(x78));
IkReal x172=((x121)+(x57));
IkReal x173=((x128)+(x69));
IkReal x174=((x134)+(x115));
IkReal x175=((x125)+(x103));
IkReal x176=((x131)+(x75));
IkReal x177=((x128)+(x109));
IkReal x178=((x132)+(x114));
IkReal x179=((x130)+(x113));
IkReal x180=((x121)+(x101));
IkReal x181=((x135)+(x73));
IkReal x182=((x164)+(x92));
IkReal x183=((x179)+(x112));
IkReal x184=((x102)+(x180));
IkReal x185=((x170)+(((IkReal(-1.00000000000000))*(x131)))+(((IkReal(-1.00000000000000))*(x84))));
IkReal x186=((((IkReal(-1.00000000000000))*(x170)))+(x131)+(((IkReal(-1.00000000000000))*(x84))));
op[0]=((((IkReal(-1.00000000000000))*(x49)))+(x50)+(((IkReal(-1.00000000000000))*(x52))));
op[1]=((x53)+(((IkReal(-1.00000000000000))*(x54)))+(((IkReal(-1.00000000000000))*(x55))));
op[2]=((rxp0_2)+(x49)+(((IkReal(-1.00000000000000))*(x50))));
op[3]=x51;
op[4]=IkReal(0);
op[5]=x51;
op[6]=((x149)+(((IkReal(-1.00000000000000))*(x52))));
op[7]=((x54)+(x53)+(((IkReal(-1.00000000000000))*(x55))));
op[8]=((((IkReal(-1.00000000000000))*(x149)))+(rxp0_2));
op[9]=((IkReal(0.0290365308000000))+(((IkReal(-1.00000000000000))*(x123)))+(x172)+(x56));
op[10]=((((IkReal(-1.00000000000000))*(x169)))+(x124)+(x59));
op[11]=((((IkReal(-1.00000000000000))*(x172)))+(x141)+(((IkReal(-1.00000000000000))*(x56))));
op[12]=x122;
op[13]=IkReal(0);
op[14]=x122;
op[15]=((IkReal(0.0290365308000000))+(((IkReal(-1.00000000000000))*(x123)))+(x172)+(((IkReal(-1.00000000000000))*(x56))));
op[16]=((((IkReal(-1.00000000000000))*(x169)))+(x124)+(((IkReal(-1.00000000000000))*(x59))));
op[17]=((((IkReal(-1.00000000000000))*(x172)))+(x141)+(x56));
op[18]=((x147)+(x62)+(((IkReal(-1.00000000000000))*(x63))));
op[19]=x126;
op[20]=((((IkReal(-1.00000000000000))*(x155)))+(x147));
op[21]=((IkReal(0.676640000000000))*(npy));
op[22]=((IkReal(1.35328000000000))*(npx));
op[23]=((IkReal(-0.676640000000000))*(npy));
op[24]=((IkReal(0.000712877700000000))+(((IkReal(-1.00000000000000))*(x161)))+(x62));
op[25]=x126;
op[26]=((IkReal(0.000712877700000000))+(((IkReal(-1.00000000000000))*(x155)))+(((IkReal(-1.00000000000000))*(x61))));
op[27]=((x142)+(((IkReal(-1.00000000000000))*(x65))));
op[28]=x127;
op[29]=((pz)+(((IkReal(-1.00000000000000))*(x65)))+(((IkReal(-1.00000000000000))*(x64))));
op[30]=((IkReal(-0.338320000000000))*(r21));
op[31]=((IkReal(-0.676640000000000))*(r20));
op[32]=((IkReal(0.338320000000000))*(r21));
op[33]=((x142)+(x65));
op[34]=x127;
op[35]=((pz)+(x65)+(((IkReal(-1.00000000000000))*(x64))));
op[36]=((((IkReal(-1.00000000000000))*(x173)))+(x157)+(x66));
op[37]=x95;
op[38]=((((IkReal(-1.00000000000000))*(x173)))+(x66)+(x67)+(((IkReal(-1.00000000000000))*(x68))));
op[39]=((((IkReal(-1.00000000000000))*(x167)))+(((IkReal(-1.00000000000000))*(x70)))+(x124));
op[40]=((((IkReal(-1.00000000000000))*(x143)))+(x144)+(((IkReal(-0.125272000400000))*(r20))));
op[41]=((((IkReal(-1.00000000000000))*(x166)))+(x125)+(x70));
op[42]=((((IkReal(-1.00000000000000))*(x165)))+(x173)+(x67));
op[43]=x145;
op[44]=((((IkReal(-1.00000000000000))*(x129)))+(x173)+(x157));
op[45]=((((IkReal(-1.00000000000000))*(x72)))+(((IkReal(-1.00000000000000))*(x74)))+(x130)+(((IkReal(-1.00000000000000))*(x135)))+(x73));
op[46]=((((IkReal(-1.00000000000000))*(x171)))+(x134)+(x79));
op[47]=((x156)+(x158)+(((IkReal(-1.00000000000000))*(x130))));
op[48]=((x176)+(((IkReal(-1.00000000000000))*(x132)))+(x76));
op[49]=((IkReal(0.0124610400000000))*(r20));
op[50]=((((IkReal(-1.00000000000000))*(x76)))+(x176)+(((IkReal(-1.00000000000000))*(x132))));
op[51]=((((IkReal(-1.00000000000000))*(x156)))+(x158)+(((IkReal(-1.00000000000000))*(x130))));
op[52]=((x171)+(((IkReal(-1.00000000000000))*(x134)))+(x79));
op[53]=((((IkReal(-1.00000000000000))*(x74)))+(((IkReal(-1.00000000000000))*(x181)))+(x130)+(x72));
op[54]=x150;
op[55]=IkReal(0);
op[56]=x150;
op[57]=((x81)+(((IkReal(-1.00000000000000))*(x80))));
op[58]=((((IkReal(-8.00000000000000))*(rxp0_2)))+(((IkReal(0.858300882142573))*(npx))));
op[59]=((x80)+(((IkReal(-1.00000000000000))*(x81))));
op[60]=x151;
op[61]=IkReal(0);
op[62]=x151;
op[63]=x185;
op[64]=IkReal(0);
op[65]=x185;
op[66]=((x162)+(((IkReal(-1.00000000000000))*(x136))));
op[67]=((((IkReal(16.0000000000000))*(x120)))+(((IkReal(0.199600980000000))*(r20)))+(((IkReal(-8.00000000000000))*(x60))));
op[68]=((((IkReal(-1.00000000000000))*(x162)))+(x136));
op[69]=x186;
op[70]=IkReal(0);
op[71]=x186;
op[72]=((x87)+(((IkReal(-1.00000000000000))*(x86))));
op[73]=x88;
op[74]=x152;
op[75]=((IkReal(0.116146123200000))*(r21));
op[76]=((IkReal(0.232292246400000))*(r20));
op[77]=((IkReal(-0.116146123200000))*(r21));
op[78]=((IkReal(-1.00000000000000))*(x152));
op[79]=x88;
op[80]=((x86)+(((IkReal(-1.00000000000000))*(x87))));
op[81]=((x146)+(x89));
op[82]=x137;
op[83]=((IkReal(-0.131380802670269))+(x89)+(((IkReal(-1.00000000000000))*(x90))));
op[84]=((IkReal(3.66780576968926))*(npy));
op[85]=((IkReal(7.33561153937853))*(npx));
op[86]=((IkReal(-3.66780576968926))*(npy));
op[87]=((x146)+(((IkReal(-1.00000000000000))*(x89))));
op[88]=x137;
op[89]=((IkReal(-0.131380802670269))+(((IkReal(-1.00000000000000))*(x90)))+(((IkReal(-1.00000000000000))*(x89))));
op[90]=((x182)+(((IkReal(-1.00000000000000))*(x133))));
op[91]=((((IkReal(-1.00000000000000))*(x168)))+(x136)+(x93));
op[92]=((((IkReal(-1.00000000000000))*(x182)))+(x133));
op[93]=x139;
op[94]=IkReal(0);
op[95]=x139;
op[96]=((((IkReal(-1.00000000000000))*(x163)))+(x164));
op[97]=((((IkReal(-1.00000000000000))*(x168)))+(x136)+(((IkReal(-1.00000000000000))*(x93))));
op[98]=((((IkReal(-1.00000000000000))*(x164)))+(x163));
op[99]=((IkReal(-1.00000000000000))*(x153));
op[100]=x97;
op[101]=((x95)+(((IkReal(-1.00000000000000))*(x96))));
op[102]=((IkReal(-0.780160000000000))*(rxp1_2));
op[103]=((IkReal(-1.56032000000000))*(rxp0_2));
op[104]=((IkReal(0.780160000000000))*(rxp1_2));
op[105]=((x96)+(((IkReal(-1.00000000000000))*(x95))));
op[106]=x97;
op[107]=x153;
op[108]=((((IkReal(-1.00000000000000))*(x154)))+(rxp0_2));
op[109]=((((IkReal(-1.00000000000000))*(x100)))+(x55)+(((IkReal(-1.00000000000000))*(x53))));
op[110]=((x154)+(((IkReal(-1.00000000000000))*(x52))));
op[111]=x98;
op[112]=IkReal(0);
op[113]=x98;
op[114]=((rxp0_2)+(x99)+(((IkReal(-1.00000000000000))*(x50))));
op[115]=((x100)+(x55)+(((IkReal(-1.00000000000000))*(x53))));
op[116]=((x50)+(((IkReal(-1.00000000000000))*(x99)))+(((IkReal(-1.00000000000000))*(x52))));
op[117]=((((IkReal(-1.00000000000000))*(x180)))+(x141)+(x102));
op[118]=((((IkReal(-1.00000000000000))*(x124)))+(x175)+(x104));
op[119]=((IkReal(0.0290365308000000))+(((IkReal(-1.00000000000000))*(x102)))+(((IkReal(-1.00000000000000))*(x123)))+(x180));
op[120]=x140;
op[121]=IkReal(0);
op[122]=x140;
op[123]=((((IkReal(-1.00000000000000))*(x184)))+(x141));
op[124]=((((IkReal(-1.00000000000000))*(x104)))+(((IkReal(-1.00000000000000))*(x124)))+(x175));
op[125]=((IkReal(0.0290365308000000))+(((IkReal(-1.00000000000000))*(x123)))+(x184));
op[126]=((IkReal(0.0286582089000000))+(((IkReal(-1.00000000000000))*(x155)))+(((IkReal(-1.00000000000000))*(x105))));
op[127]=x106;
op[128]=((IkReal(0.0286582089000000))+(((IkReal(-1.00000000000000))*(x159)))+(x62));
op[129]=((IkReal(-0.103520000000000))*(npy));
op[130]=((IkReal(-0.207040000000000))*(npx));
op[131]=((IkReal(0.103520000000000))*(npy));
op[132]=((((IkReal(-1.00000000000000))*(x155)))+(x148));
op[133]=x106;
op[134]=((x148)+(x62)+(((IkReal(-1.00000000000000))*(x63))));
op[135]=((x107)+(pz)+(((IkReal(-1.00000000000000))*(x64))));
op[136]=x108;
op[137]=((x142)+(x107));
op[138]=((IkReal(0.0517600000000000))*(r21));
op[139]=((IkReal(0.103520000000000))*(r20));
op[140]=((IkReal(-0.0517600000000000))*(r21));
op[141]=((((IkReal(-1.00000000000000))*(x107)))+(pz)+(((IkReal(-1.00000000000000))*(x64))));
op[142]=x108;
op[143]=((((IkReal(-1.00000000000000))*(x107)))+(x142));
op[144]=((((IkReal(-1.00000000000000))*(x129)))+(x177)+(x160));
op[145]=x95;
op[146]=((((IkReal(-1.00000000000000))*(x165)))+(x177)+(x110));
op[147]=((((IkReal(-1.00000000000000))*(x166)))+(x125)+(x111));
op[148]=((((IkReal(-1.00000000000000))*(x144)))+(((IkReal(0.0134906756000000))*(r20)))+(x143));
op[149]=((((IkReal(-1.00000000000000))*(x167)))+(((IkReal(-1.00000000000000))*(x111)))+(x124));
op[150]=((((IkReal(-1.00000000000000))*(x177)))+(x110)+(x66)+(((IkReal(-1.00000000000000))*(x68))));
op[151]=x145;
op[152]=((((IkReal(-1.00000000000000))*(x177)))+(x160)+(x66));
op[153]=((((IkReal(-1.00000000000000))*(x181)))+(x183));
op[154]=((((IkReal(-1.00000000000000))*(x116)))+(x174)+(((IkReal(-1.00000000000000))*(x133))));
op[155]=((((IkReal(-1.00000000000000))*(x73)))+(((IkReal(-1.00000000000000))*(x183)))+(x77));
op[156]=((((IkReal(-1.00000000000000))*(x76)))+(((IkReal(-1.00000000000000))*(x178)))+(x131));
op[157]=((IkReal(-0.0124610400000000))*(r20));
op[158]=((((IkReal(-1.00000000000000))*(x178)))+(x131)+(x76));
op[159]=((((IkReal(-1.00000000000000))*(x179)))+(x112)+(x77)+(x73));
op[160]=((((IkReal(-1.00000000000000))*(x174)))+(((IkReal(-1.00000000000000))*(x116)))+(x133));
op[161]=((((IkReal(-1.00000000000000))*(x112)))+(x179)+(((IkReal(-1.00000000000000))*(x135)))+(x73));
solvedialyticpoly12qep(op,zeror,numroots);
IkReal j4array[16], cj4array[16], sj4array[16], j5array[16], cj5array[16], sj5array[16], j6array[16], cj6array[16], sj6array[16];
int numsolutions = 0;
for(int ij4 = 0; ij4 < numroots; ij4 += 3)
{
IkReal htj4 = zeror[ij4+0], htj5 = zeror[ij4+1], htj6 = zeror[ij4+2];
j4array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj4)));
j5array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj5)));
j6array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj6)));
IkReal x187=(htj4)*(htj4);
IkReal x188=(htj5)*(htj5);
IkReal x189=(htj6)*(htj6);
cj4array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x187))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x187)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x187))))));
cj5array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x188))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x188)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x188))))));
cj6array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x189))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x189)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x189))))));
sj4array[numsolutions]=((IkReal(2.00000000000000))*(htj4)*(((IKabs(((IkReal(1.00000000000000))+((htj4)*(htj4)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj4)*(htj4))))):(IkReal)1.0e30)));
sj5array[numsolutions]=((IkReal(2.00000000000000))*(htj5)*(((IKabs(((IkReal(1.00000000000000))+((htj5)*(htj5)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj5)*(htj5))))):(IkReal)1.0e30)));
sj6array[numsolutions]=((IkReal(2.00000000000000))*(htj6)*(((IKabs(((IkReal(1.00000000000000))+((htj6)*(htj6)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj6)*(htj6))))):(IkReal)1.0e30)));
if( j4array[numsolutions] > IKPI )
{
    j4array[numsolutions]-=IK2PI;
}
else if( j4array[numsolutions] < -IKPI )
{
    j4array[numsolutions]+=IK2PI;
}
if( j5array[numsolutions] > IKPI )
{
    j5array[numsolutions]-=IK2PI;
}
else if( j5array[numsolutions] < -IKPI )
{
    j5array[numsolutions]+=IK2PI;
}
if( j6array[numsolutions] > IKPI )
{
    j6array[numsolutions]-=IK2PI;
}
else if( j6array[numsolutions] < -IKPI )
{
    j6array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j4valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj4 = 16;
_nj5 = 1;
_nj6 = 1;
for(int ij4 = 0; ij4 < numsolutions; ++ij4)
    {
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
_ij5[0] = 0; _ij5[1] = -1;
_ij6[0] = 0; _ij6[1] = -1;
for(int iij4 = ij4+1; iij4 < numsolutions; ++iij4)
{
if( !j4valid[iij4] ) { continue; }
if( IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(cj5array[ij4]-cj5array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij4]-sj5array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(cj6array[ij4]-cj6array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij4]-sj6array[iij4]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j4valid[iij4]=false; _ij4[1] = iij4; _ij5[1] = 0; _ij6[1] = 0;  break; 
}
}
    j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];

    j5 = j5array[ij4]; cj5 = cj5array[ij4]; sj5 = sj5array[ij4];

    j6 = j6array[ij4]; cj6 = cj6array[ij4]; sj6 = sj6array[ij4];

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x190=((cj5)*(r22));
IkReal x191=((cj6)*(r20));
IkReal x192=((r21)*(sj6));
IkReal x193=((IkReal(0.845207141618998))*(cj4));
IkReal x194=((IkReal(0.845207141618998))*(sj4));
IkReal x195=((r20)*(sj5)*(sj6));
IkReal x196=((cj6)*(r21)*(sj5));
if( IKabs(((((IkReal(8.66701334720056))*(pz)))+(((IkReal(-0.620904836193448))*(x196)))+(((IkReal(-0.620904836193448))*(x195)))+(((IkReal(-0.620904836193448))*(x190)))+(((IkReal(-1.00000000000000))*(x192)*(x194)))+(((IkReal(-1.00000000000000))*(x190)*(x193)))+(((x191)*(x194)))+(((IkReal(-1.00000000000000))*(x193)*(x196)))+(((IkReal(-1.00000000000000))*(x193)*(x195))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj4)*(x191)))+(((sj4)*(x190)))+(((sj4)*(x195)))+(((sj4)*(x196)))+(((IkReal(-1.00000000000000))*(cj4)*(x192))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(8.66701334720056))*(pz)))+(((IkReal(-0.620904836193448))*(x196)))+(((IkReal(-0.620904836193448))*(x195)))+(((IkReal(-0.620904836193448))*(x190)))+(((IkReal(-1.00000000000000))*(x192)*(x194)))+(((IkReal(-1.00000000000000))*(x190)*(x193)))+(((x191)*(x194)))+(((IkReal(-1.00000000000000))*(x193)*(x196)))+(((IkReal(-1.00000000000000))*(x193)*(x195)))))+IKsqr(((((cj4)*(x191)))+(((sj4)*(x190)))+(((sj4)*(x195)))+(((sj4)*(x196)))+(((IkReal(-1.00000000000000))*(cj4)*(x192)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((IkReal(8.66701334720056))*(pz)))+(((IkReal(-0.620904836193448))*(x196)))+(((IkReal(-0.620904836193448))*(x195)))+(((IkReal(-0.620904836193448))*(x190)))+(((IkReal(-1.00000000000000))*(x192)*(x194)))+(((IkReal(-1.00000000000000))*(x190)*(x193)))+(((x191)*(x194)))+(((IkReal(-1.00000000000000))*(x193)*(x196)))+(((IkReal(-1.00000000000000))*(x193)*(x195)))), ((((cj4)*(x191)))+(((sj4)*(x190)))+(((sj4)*(x195)))+(((sj4)*(x196)))+(((IkReal(-1.00000000000000))*(cj4)*(x192)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x197=((IkReal(0.0975200000000000))*(cj4));
IkReal x198=((IkReal(1.00000000000000))*(sj4));
IkReal x199=((cj5)*(r22));
IkReal x200=((r21)*(sj6));
IkReal x201=((cj6)*(r20));
IkReal x202=((IkReal(0.0975200000000000))*(sj4));
IkReal x203=((cj6)*(r21)*(sj5));
IkReal x204=((r20)*(sj5)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x201)))+(((cj4)*(x200)))+(IKcos(j2))+(((IkReal(-1.00000000000000))*(x198)*(x203)))+(((IkReal(-1.00000000000000))*(x198)*(x204)))+(((IkReal(-1.00000000000000))*(x198)*(x199))));
evalcond[1]=((((IkReal(0.115380000000000))*(IKsin(j2))))+(((IkReal(-1.00000000000000))*(x201)*(x202)))+(((x200)*(x202)))+(((x197)*(x204)))+(((x197)*(x203)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(x199)))+(((IkReal(0.0716400000000000))*(x204)))+(((IkReal(0.0716400000000000))*(x203)))+(((x197)*(x199))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(sj2);
dummyeval[0]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(sj2);
dummyeval[0]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj2)*(sj2)))+(((IkReal(-1.09057028947825))*(sj2))));
dummyeval[1]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x205=((cj5)*(r22));
IkReal x206=((IkReal(0.0975200000000000))*(cj4));
IkReal x207=((IkReal(1.00000000000000))*(cj5));
IkReal x208=((r20)*(sj6));
IkReal x209=((IkReal(1.00000000000000))*(sj4));
IkReal x210=((cj6)*(sj5));
IkReal x211=((sj5)*(sj6));
IkReal x212=((cj6)*(r20));
IkReal x213=((IkReal(0.0975200000000000))*(sj4));
IkReal x214=((cj4)*(sj6));
IkReal x215=((r21)*(sj6));
IkReal x216=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x207)*(x208)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x207))));
evalcond[2]=((IkReal(1.00000000000000))+(((r21)*(x214)))+(((IkReal(-1.00000000000000))*(r21)*(x209)*(x210)))+(((IkReal(-1.00000000000000))*(cj4)*(x212)))+(((IkReal(-1.00000000000000))*(x205)*(x209)))+(((IkReal(-1.00000000000000))*(sj5)*(x208)*(x209))));
evalcond[3]=((((cj4)*(x205)))+(((cj4)*(r21)*(x210)))+(((cj4)*(sj5)*(x208)))+(((IkReal(-1.00000000000000))*(x209)*(x212)))+(((sj4)*(x215))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x209)*(x211)))+(((IkReal(-1.00000000000000))*(r01)*(x209)*(x210)))+(((IkReal(-1.00000000000000))*(r00)*(x216)))+(((r01)*(x214)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x207))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x209)*(x211)))+(((r11)*(x214)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x207)))+(((IkReal(-1.00000000000000))*(r11)*(x209)*(x210)))+(((IkReal(-1.00000000000000))*(r10)*(x216))));
evalcond[6]=((((x205)*(x206)))+(((x213)*(x215)))+(((IkReal(0.0716400000000000))*(r21)*(x210)))+(((r21)*(x206)*(x210)))+(((IkReal(0.0716400000000000))*(sj5)*(x208)))+(((IkReal(-1.00000000000000))*(pz)))+(((sj5)*(x206)*(x208)))+(((IkReal(0.0716400000000000))*(x205)))+(((IkReal(-1.00000000000000))*(x212)*(x213))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x217=((sj4)*(sj6));
IkReal x218=((IkReal(0.0225568570269310))*(r01));
IkReal x219=((IkReal(0.403032554330817))*(r11));
IkReal x220=((sj5)*(sj6));
IkReal x221=((cj4)*(r00));
IkReal x222=((cj5)*(r12));
IkReal x223=((IkReal(0.0225568570269310))*(r11));
IkReal x224=((cj4)*(r10));
IkReal x225=((IkReal(0.403032554330817))*(r01));
IkReal x226=((IkReal(0.403032554330817))*(cj4));
IkReal x227=((cj6)*(sj5));
IkReal x228=((cj5)*(r02));
IkReal x229=((IkReal(0.0225568570269310))*(cj4));
IkReal x230=((cj6)*(r10)*(sj4));
IkReal x231=((cj6)*(r00)*(sj4));
if( IKabs(((((IkReal(0.296075186549013))*(r11)*(x227)))+(((IkReal(0.0225568570269310))*(x231)))+(((x222)*(x226)))+(((IkReal(0.296075186549013))*(x222)))+(((IkReal(0.296075186549013))*(r10)*(x220)))+(((IkReal(-1.00000000000000))*(x228)*(x229)))+(((IkReal(0.231304932597734))*(px)))+(((IkReal(-0.0165706853713017))*(x228)))+(((IkReal(-1.00000000000000))*(x217)*(x218)))+(((IkReal(-1.00000000000000))*(cj4)*(x218)*(x227)))+(((IkReal(-0.0225568570269310))*(x220)*(x221)))+(((IkReal(-0.0165706853713017))*(r01)*(x227)))+(((cj4)*(x219)*(x227)))+(((IkReal(-0.0165706853713017))*(r00)*(x220)))+(((IkReal(-0.403032554330817))*(x230)))+(((IkReal(-4.13281946606662))*(py)))+(((x217)*(x219)))+(((IkReal(0.403032554330817))*(x220)*(x224))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(0.296075186549013))*(r01)*(x227)))+(((cj4)*(x225)*(x227)))+(((cj4)*(x223)*(x227)))+(((x222)*(x229)))+(((IkReal(0.296075186549013))*(x228)))+(((IkReal(-0.231304932597734))*(py)))+(((IkReal(0.0165706853713017))*(x222)))+(((IkReal(0.0165706853713017))*(r10)*(x220)))+(((x217)*(x223)))+(((x217)*(x225)))+(((x226)*(x228)))+(((IkReal(0.0165706853713017))*(r11)*(x227)))+(((IkReal(-0.403032554330817))*(x231)))+(((IkReal(-0.0225568570269310))*(x230)))+(((IkReal(-4.13281946606662))*(px)))+(((IkReal(0.403032554330817))*(x220)*(x221)))+(((IkReal(0.0225568570269310))*(x220)*(x224)))+(((IkReal(0.296075186549013))*(r00)*(x220))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(0.296075186549013))*(r11)*(x227)))+(((IkReal(0.0225568570269310))*(x231)))+(((x222)*(x226)))+(((IkReal(0.296075186549013))*(x222)))+(((IkReal(0.296075186549013))*(r10)*(x220)))+(((IkReal(-1.00000000000000))*(x228)*(x229)))+(((IkReal(0.231304932597734))*(px)))+(((IkReal(-0.0165706853713017))*(x228)))+(((IkReal(-1.00000000000000))*(x217)*(x218)))+(((IkReal(-1.00000000000000))*(cj4)*(x218)*(x227)))+(((IkReal(-0.0225568570269310))*(x220)*(x221)))+(((IkReal(-0.0165706853713017))*(r01)*(x227)))+(((cj4)*(x219)*(x227)))+(((IkReal(-0.0165706853713017))*(r00)*(x220)))+(((IkReal(-0.403032554330817))*(x230)))+(((IkReal(-4.13281946606662))*(py)))+(((x217)*(x219)))+(((IkReal(0.403032554330817))*(x220)*(x224)))))+IKsqr(((((IkReal(0.296075186549013))*(r01)*(x227)))+(((cj4)*(x225)*(x227)))+(((cj4)*(x223)*(x227)))+(((x222)*(x229)))+(((IkReal(0.296075186549013))*(x228)))+(((IkReal(-0.231304932597734))*(py)))+(((IkReal(0.0165706853713017))*(x222)))+(((IkReal(0.0165706853713017))*(r10)*(x220)))+(((x217)*(x223)))+(((x217)*(x225)))+(((x226)*(x228)))+(((IkReal(0.0165706853713017))*(r11)*(x227)))+(((IkReal(-0.403032554330817))*(x231)))+(((IkReal(-0.0225568570269310))*(x230)))+(((IkReal(-4.13281946606662))*(px)))+(((IkReal(0.403032554330817))*(x220)*(x221)))+(((IkReal(0.0225568570269310))*(x220)*(x224)))+(((IkReal(0.296075186549013))*(r00)*(x220)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(0.296075186549013))*(r11)*(x227)))+(((IkReal(0.0225568570269310))*(x231)))+(((x222)*(x226)))+(((IkReal(0.296075186549013))*(x222)))+(((IkReal(0.296075186549013))*(r10)*(x220)))+(((IkReal(-1.00000000000000))*(x228)*(x229)))+(((IkReal(0.231304932597734))*(px)))+(((IkReal(-0.0165706853713017))*(x228)))+(((IkReal(-1.00000000000000))*(x217)*(x218)))+(((IkReal(-1.00000000000000))*(cj4)*(x218)*(x227)))+(((IkReal(-0.0225568570269310))*(x220)*(x221)))+(((IkReal(-0.0165706853713017))*(r01)*(x227)))+(((cj4)*(x219)*(x227)))+(((IkReal(-0.0165706853713017))*(r00)*(x220)))+(((IkReal(-0.403032554330817))*(x230)))+(((IkReal(-4.13281946606662))*(py)))+(((x217)*(x219)))+(((IkReal(0.403032554330817))*(x220)*(x224)))), ((((IkReal(0.296075186549013))*(r01)*(x227)))+(((cj4)*(x225)*(x227)))+(((cj4)*(x223)*(x227)))+(((x222)*(x229)))+(((IkReal(0.296075186549013))*(x228)))+(((IkReal(-0.231304932597734))*(py)))+(((IkReal(0.0165706853713017))*(x222)))+(((IkReal(0.0165706853713017))*(r10)*(x220)))+(((x217)*(x223)))+(((x217)*(x225)))+(((x226)*(x228)))+(((IkReal(0.0165706853713017))*(r11)*(x227)))+(((IkReal(-0.403032554330817))*(x231)))+(((IkReal(-0.0225568570269310))*(x230)))+(((IkReal(-4.13281946606662))*(px)))+(((IkReal(0.403032554330817))*(x220)*(x221)))+(((IkReal(0.0225568570269310))*(x220)*(x224)))+(((IkReal(0.296075186549013))*(r00)*(x220)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[2];
IkReal x232=IKsin(j1);
IkReal x233=IKcos(j1);
IkReal x234=((IkReal(0.0975200000000000))*(sj4));
IkReal x235=((sj5)*(sj6));
IkReal x236=((IkReal(0.0975200000000000))*(cj4));
IkReal x237=((cj6)*(sj5));
IkReal x238=((cj5)*(r02));
IkReal x239=((cj5)*(r12));
IkReal x240=((IkReal(0.0716400000000000))*(x237));
evalcond[0]=((((r00)*(x235)*(x236)))+(((r01)*(x236)*(x237)))+(((IkReal(0.0716400000000000))*(x238)))+(((IkReal(0.0135000000000000))*(x232)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x240)))+(((IkReal(-0.241210000000000))*(x233)))+(((IkReal(0.0716400000000000))*(r00)*(x235)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x234)))+(((x236)*(x238)))+(((r01)*(sj6)*(x234))));
evalcond[1]=((((IkReal(0.0716400000000000))*(x239)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x236)*(x237)))+(((r11)*(sj6)*(x234)))+(((IkReal(0.0716400000000000))*(r10)*(x235)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x234)))+(((IkReal(-0.241210000000000))*(x232)))+(((IkReal(-0.0135000000000000))*(x233)))+(((r11)*(x240)))+(((r10)*(x235)*(x236)))+(((x236)*(x239))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x241=((IkReal(1.00000000000000))*(sj5));
IkReal x242=((cj4)*(sj1));
IkReal x243=((r10)*(sj6));
IkReal x244=((cj1)*(cj6));
IkReal x245=((r10)*(sj4));
IkReal x246=((cj1)*(r12));
IkReal x247=((cj6)*(r11));
IkReal x248=((IkReal(1.00000000000000))*(cj5));
IkReal x249=((IkReal(1.00000000000000))*(r11)*(sj4)*(sj6));
if( IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(sj1)*(x247)*(x248)))+(((IkReal(-1.00000000000000))*(cj1)*(x249)))+(((IkReal(-1.00000000000000))*(cj1)*(cj4)*(x241)*(x243)))+(((IkReal(-1.00000000000000))*(cj4)*(x246)*(x248)))+(((x244)*(x245)))+(((r12)*(sj1)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(r11)*(x241)*(x244)))+(((IkReal(-1.00000000000000))*(sj1)*(x243)*(x248))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(sj1)*(x249)))+(((cj6)*(sj1)*(x245)))+(((IkReal(-1.00000000000000))*(x241)*(x246)))+(((cj5)*(r11)*(x244)))+(((IkReal(-1.00000000000000))*(x241)*(x242)*(x243)))+(((IkReal(-1.00000000000000))*(x241)*(x242)*(x247)))+(((cj1)*(cj5)*(x243)))+(((IkReal(-1.00000000000000))*(r12)*(x242)*(x248))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst17)*(((((IkReal(-1.00000000000000))*(sj1)*(x247)*(x248)))+(((IkReal(-1.00000000000000))*(cj1)*(x249)))+(((IkReal(-1.00000000000000))*(cj1)*(cj4)*(x241)*(x243)))+(((IkReal(-1.00000000000000))*(cj4)*(x246)*(x248)))+(((x244)*(x245)))+(((r12)*(sj1)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(r11)*(x241)*(x244)))+(((IkReal(-1.00000000000000))*(sj1)*(x243)*(x248)))))), ((gconst17)*(((((IkReal(-1.00000000000000))*(sj1)*(x249)))+(((cj6)*(sj1)*(x245)))+(((IkReal(-1.00000000000000))*(x241)*(x246)))+(((cj5)*(r11)*(x244)))+(((IkReal(-1.00000000000000))*(x241)*(x242)*(x243)))+(((IkReal(-1.00000000000000))*(x241)*(x242)*(x247)))+(((cj1)*(cj5)*(x243)))+(((IkReal(-1.00000000000000))*(r12)*(x242)*(x248)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x250=IKsin(j3);
IkReal x251=IKcos(j3);
IkReal x252=((IkReal(1.00000000000000))*(r00));
IkReal x253=((cj6)*(sj4));
IkReal x254=((cj4)*(cj5));
IkReal x255=((cj5)*(sj6));
IkReal x256=((cj4)*(sj5));
IkReal x257=((IkReal(1.00000000000000))*(r10));
IkReal x258=((sj4)*(sj6));
IkReal x259=((cj1)*(x251));
IkReal x260=((cj1)*(x250));
IkReal x261=((sj1)*(x251));
IkReal x262=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x263=((IkReal(1.00000000000000))*(sj1)*(x250));
evalcond[0]=((((IkReal(-1.00000000000000))*(x255)*(x257)))+(((IkReal(-1.00000000000000))*(r11)*(x262)))+(x259)+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x263))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x252)*(x255)))+(((IkReal(-1.00000000000000))*(x260)))+(((IkReal(-1.00000000000000))*(x261)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x262))));
evalcond[2]=((((cj6)*(r11)*(x256)))+(((r11)*(x258)))+(((r12)*(x254)))+(x261)+(x260)+(((IkReal(-1.00000000000000))*(x253)*(x257)))+(((r10)*(sj6)*(x256))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x252)*(x253)))+(((r01)*(x258)))+(((cj6)*(r01)*(x256)))+(x259)+(((IkReal(-1.00000000000000))*(x263)))+(((r02)*(x254)))+(((r00)*(sj6)*(x256))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x264=((IkReal(1.00000000000000))*(r00));
IkReal x265=((sj1)*(sj5));
IkReal x266=((cj1)*(sj5));
IkReal x267=((cj1)*(cj5)*(sj6));
IkReal x268=((cj1)*(cj5)*(cj6));
IkReal x269=((cj5)*(sj1)*(sj6));
IkReal x270=((IkReal(1.00000000000000))*(cj5)*(cj6)*(sj1));
if( IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(r11)*(x270)))+(((r02)*(x266)))+(((IkReal(-1.00000000000000))*(r10)*(x269)))+(((IkReal(-1.00000000000000))*(r01)*(x268)))+(((r12)*(x265)))+(((IkReal(-1.00000000000000))*(x264)*(x267))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((r02)*(x265)))+(((IkReal(-1.00000000000000))*(r12)*(x266)))+(((IkReal(-1.00000000000000))*(r01)*(x270)))+(((r10)*(x267)))+(((r11)*(x268)))+(((IkReal(-1.00000000000000))*(x264)*(x269))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst16)*(((((IkReal(-1.00000000000000))*(r11)*(x270)))+(((r02)*(x266)))+(((IkReal(-1.00000000000000))*(r10)*(x269)))+(((IkReal(-1.00000000000000))*(r01)*(x268)))+(((r12)*(x265)))+(((IkReal(-1.00000000000000))*(x264)*(x267)))))), ((gconst16)*(((((r02)*(x265)))+(((IkReal(-1.00000000000000))*(r12)*(x266)))+(((IkReal(-1.00000000000000))*(r01)*(x270)))+(((r10)*(x267)))+(((r11)*(x268)))+(((IkReal(-1.00000000000000))*(x264)*(x269)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x271=IKsin(j3);
IkReal x272=IKcos(j3);
IkReal x273=((IkReal(1.00000000000000))*(r00));
IkReal x274=((cj6)*(sj4));
IkReal x275=((cj4)*(cj5));
IkReal x276=((cj5)*(sj6));
IkReal x277=((cj4)*(sj5));
IkReal x278=((IkReal(1.00000000000000))*(r10));
IkReal x279=((sj4)*(sj6));
IkReal x280=((cj1)*(x272));
IkReal x281=((cj1)*(x271));
IkReal x282=((sj1)*(x272));
IkReal x283=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x284=((IkReal(1.00000000000000))*(sj1)*(x271));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x283)))+(x280)+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x284)))+(((IkReal(-1.00000000000000))*(x276)*(x278))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x273)*(x276)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x282)))+(((IkReal(-1.00000000000000))*(x281)))+(((IkReal(-1.00000000000000))*(r01)*(x283))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x274)*(x278)))+(x282)+(x281)+(((r12)*(x275)))+(((r10)*(sj6)*(x277)))+(((cj6)*(r11)*(x277)))+(((r11)*(x279))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x273)*(x274)))+(((r02)*(x275)))+(((cj6)*(r01)*(x277)))+(x280)+(((r00)*(sj6)*(x277)))+(((r01)*(x279)))+(((IkReal(-1.00000000000000))*(x284))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x285=((cj5)*(r22));
IkReal x286=((IkReal(0.0975200000000000))*(cj4));
IkReal x287=((IkReal(1.00000000000000))*(cj5));
IkReal x288=((r20)*(sj6));
IkReal x289=((IkReal(1.00000000000000))*(sj4));
IkReal x290=((cj6)*(sj5));
IkReal x291=((sj5)*(sj6));
IkReal x292=((cj6)*(r20));
IkReal x293=((IkReal(0.0975200000000000))*(sj4));
IkReal x294=((cj4)*(sj6));
IkReal x295=((r21)*(sj6));
IkReal x296=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x287)*(x288)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x287))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj4)*(x292)))+(((IkReal(-1.00000000000000))*(r21)*(x289)*(x290)))+(((IkReal(-1.00000000000000))*(sj5)*(x288)*(x289)))+(((IkReal(-1.00000000000000))*(x285)*(x289)))+(((r21)*(x294))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x289)*(x292)))+(((cj4)*(r21)*(x290)))+(((cj4)*(sj5)*(x288)))+(((sj4)*(x295)))+(((cj4)*(x285))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x296)))+(((IkReal(-1.00000000000000))*(r01)*(x289)*(x290)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x287)))+(((r01)*(x294)))+(((IkReal(-1.00000000000000))*(r00)*(x289)*(x291))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x289)*(x291)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x287)))+(((IkReal(-1.00000000000000))*(r10)*(x296)))+(((IkReal(-1.00000000000000))*(r11)*(x289)*(x290)))+(((r11)*(x294))));
evalcond[6]=((((x285)*(x286)))+(((r21)*(x286)*(x290)))+(((IkReal(0.0716400000000000))*(r21)*(x290)))+(((IkReal(-1.00000000000000))*(pz)))+(((sj5)*(x286)*(x288)))+(((x293)*(x295)))+(((IkReal(0.0716400000000000))*(sj5)*(x288)))+(((IkReal(0.0716400000000000))*(x285)))+(((IkReal(-1.00000000000000))*(x292)*(x293))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x297=((cj4)*(cj5));
IkReal x298=((IkReal(2.56864497645414))*(cj5));
IkReal x299=((IkReal(3.31834518489291))*(cj5));
IkReal x300=((IkReal(4.51709969892178))*(r10));
IkReal x301=((cj6)*(sj4));
IkReal x302=((cj4)*(sj5));
IkReal x303=((cj6)*(r01));
IkReal x304=((IkReal(3.49656976694316))*(sj6));
IkReal x305=((IkReal(2.56864497645414))*(sj5));
IkReal x306=((cj6)*(r11));
IkReal x307=((IkReal(3.31834518489291))*(sj5));
IkReal x308=((r10)*(sj6));
IkReal x309=((r00)*(x301));
IkReal x310=((IkReal(4.51709969892178))*(sj4)*(sj6));
IkReal x311=((r00)*(sj5)*(sj6));
if( IKabs(((((IkReal(-35.8548991688182))*(py)))+(((r12)*(x298)))+(((IkReal(-4.51709969892178))*(x302)*(x303)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x307)))+(((IkReal(-3.49656976694316))*(r10)*(x301)))+(((r10)*(x302)*(x304)))+(((IkReal(-1.00000000000000))*(x303)*(x307)))+(((IkReal(-4.51709969892178))*(r02)*(x297)))+(((IkReal(-1.00000000000000))*(r01)*(x310)))+(((IkReal(3.49656976694316))*(r12)*(x297)))+(((IkReal(4.51709969892178))*(x309)))+(((IkReal(-1.00000000000000))*(r02)*(x299)))+(((IkReal(-4.51709969892178))*(r00)*(sj6)*(x302)))+(((r11)*(sj4)*(x304)))+(((x305)*(x308)))+(((x305)*(x306)))+(((IkReal(3.49656976694316))*(x302)*(x306)))+(((IkReal(46.3197261989518))*(px))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-35.8548991688182))*(px)))+(((r11)*(x310)))+(((r12)*(x299)))+(((IkReal(-3.49656976694316))*(x309)))+(((IkReal(4.51709969892178))*(x302)*(x306)))+(((sj6)*(x300)*(x302)))+(((x303)*(x305)))+(((IkReal(3.49656976694316))*(r02)*(x297)))+(((r00)*(sj6)*(x305)))+(((r01)*(sj4)*(x304)))+(((IkReal(3.49656976694316))*(x302)*(x303)))+(((IkReal(-46.3197261989518))*(py)))+(((r02)*(x298)))+(((IkReal(-1.00000000000000))*(x300)*(x301)))+(((x307)*(x308)))+(((r00)*(x302)*(x304)))+(((x306)*(x307)))+(((IkReal(4.51709969892178))*(r12)*(x297))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-35.8548991688182))*(py)))+(((r12)*(x298)))+(((IkReal(-4.51709969892178))*(x302)*(x303)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x307)))+(((IkReal(-3.49656976694316))*(r10)*(x301)))+(((r10)*(x302)*(x304)))+(((IkReal(-1.00000000000000))*(x303)*(x307)))+(((IkReal(-4.51709969892178))*(r02)*(x297)))+(((IkReal(-1.00000000000000))*(r01)*(x310)))+(((IkReal(3.49656976694316))*(r12)*(x297)))+(((IkReal(4.51709969892178))*(x309)))+(((IkReal(-1.00000000000000))*(r02)*(x299)))+(((IkReal(-4.51709969892178))*(r00)*(sj6)*(x302)))+(((r11)*(sj4)*(x304)))+(((x305)*(x308)))+(((x305)*(x306)))+(((IkReal(3.49656976694316))*(x302)*(x306)))+(((IkReal(46.3197261989518))*(px)))))+IKsqr(((((IkReal(-35.8548991688182))*(px)))+(((r11)*(x310)))+(((r12)*(x299)))+(((IkReal(-3.49656976694316))*(x309)))+(((IkReal(4.51709969892178))*(x302)*(x306)))+(((sj6)*(x300)*(x302)))+(((x303)*(x305)))+(((IkReal(3.49656976694316))*(r02)*(x297)))+(((r00)*(sj6)*(x305)))+(((r01)*(sj4)*(x304)))+(((IkReal(3.49656976694316))*(x302)*(x303)))+(((IkReal(-46.3197261989518))*(py)))+(((r02)*(x298)))+(((IkReal(-1.00000000000000))*(x300)*(x301)))+(((x307)*(x308)))+(((r00)*(x302)*(x304)))+(((x306)*(x307)))+(((IkReal(4.51709969892178))*(r12)*(x297)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-35.8548991688182))*(py)))+(((r12)*(x298)))+(((IkReal(-4.51709969892178))*(x302)*(x303)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x307)))+(((IkReal(-3.49656976694316))*(r10)*(x301)))+(((r10)*(x302)*(x304)))+(((IkReal(-1.00000000000000))*(x303)*(x307)))+(((IkReal(-4.51709969892178))*(r02)*(x297)))+(((IkReal(-1.00000000000000))*(r01)*(x310)))+(((IkReal(3.49656976694316))*(r12)*(x297)))+(((IkReal(4.51709969892178))*(x309)))+(((IkReal(-1.00000000000000))*(r02)*(x299)))+(((IkReal(-4.51709969892178))*(r00)*(sj6)*(x302)))+(((r11)*(sj4)*(x304)))+(((x305)*(x308)))+(((x305)*(x306)))+(((IkReal(3.49656976694316))*(x302)*(x306)))+(((IkReal(46.3197261989518))*(px)))), ((((IkReal(-35.8548991688182))*(px)))+(((r11)*(x310)))+(((r12)*(x299)))+(((IkReal(-3.49656976694316))*(x309)))+(((IkReal(4.51709969892178))*(x302)*(x306)))+(((sj6)*(x300)*(x302)))+(((x303)*(x305)))+(((IkReal(3.49656976694316))*(r02)*(x297)))+(((r00)*(sj6)*(x305)))+(((r01)*(sj4)*(x304)))+(((IkReal(3.49656976694316))*(x302)*(x303)))+(((IkReal(-46.3197261989518))*(py)))+(((r02)*(x298)))+(((IkReal(-1.00000000000000))*(x300)*(x301)))+(((x307)*(x308)))+(((r00)*(x302)*(x304)))+(((x306)*(x307)))+(((IkReal(4.51709969892178))*(r12)*(x297)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[2];
IkReal x312=IKsin(j1);
IkReal x313=IKcos(j1);
IkReal x314=((IkReal(0.0975200000000000))*(sj4));
IkReal x315=((sj5)*(sj6));
IkReal x316=((IkReal(0.0975200000000000))*(cj4));
IkReal x317=((cj6)*(sj5));
IkReal x318=((cj5)*(r02));
IkReal x319=((cj5)*(r12));
IkReal x320=((IkReal(0.0716400000000000))*(x317));
evalcond[0]=((((IkReal(0.0716400000000000))*(r00)*(x315)))+(((r01)*(x320)))+(((IkReal(0.0716400000000000))*(x318)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0135000000000000))*(x312)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x314)))+(((r01)*(sj6)*(x314)))+(((r01)*(x316)*(x317)))+(((r00)*(x315)*(x316)))+(((IkReal(-0.0104500000000000))*(x313)))+(((x316)*(x318))));
evalcond[1]=((((IkReal(0.0716400000000000))*(r10)*(x315)))+(((r11)*(x320)))+(((r11)*(x316)*(x317)))+(((IkReal(0.0716400000000000))*(x319)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(sj6)*(x314)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x314)))+(((r10)*(x315)*(x316)))+(((IkReal(-0.0135000000000000))*(x313)))+(((IkReal(-0.0104500000000000))*(x312)))+(((x316)*(x319))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst18;
gconst18=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst19;
gconst19=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x321=((IkReal(1.00000000000000))*(cj6));
IkReal x322=((cj5)*(sj1));
IkReal x323=((cj1)*(cj5));
IkReal x324=((cj4)*(r12));
IkReal x325=((cj1)*(r10));
IkReal x326=((cj1)*(sj5));
IkReal x327=((cj4)*(sj5));
IkReal x328=((IkReal(1.00000000000000))*(r10)*(sj6));
IkReal x329=((r11)*(sj4)*(sj6));
if( IKabs(((gconst19)*(((((sj6)*(x325)*(x327)))+(((cj1)*(x329)))+(((x323)*(x324)))+(((IkReal(-1.00000000000000))*(r11)*(x321)*(x322)))+(((IkReal(-1.00000000000000))*(x322)*(x328)))+(((cj4)*(cj6)*(r11)*(x326)))+(((r12)*(sj1)*(sj5)))+(((IkReal(-1.00000000000000))*(sj4)*(x321)*(x325))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((IkReal(-1.00000000000000))*(x322)*(x324)))+(((IkReal(-1.00000000000000))*(sj1)*(x329)))+(((IkReal(-1.00000000000000))*(sj1)*(x327)*(x328)))+(((IkReal(-1.00000000000000))*(r11)*(x321)*(x323)))+(((r12)*(x326)))+(((IkReal(-1.00000000000000))*(x323)*(x328)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x321)*(x327)))+(((cj6)*(r10)*(sj1)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst19)*(((((sj6)*(x325)*(x327)))+(((cj1)*(x329)))+(((x323)*(x324)))+(((IkReal(-1.00000000000000))*(r11)*(x321)*(x322)))+(((IkReal(-1.00000000000000))*(x322)*(x328)))+(((cj4)*(cj6)*(r11)*(x326)))+(((r12)*(sj1)*(sj5)))+(((IkReal(-1.00000000000000))*(sj4)*(x321)*(x325)))))), ((gconst19)*(((((IkReal(-1.00000000000000))*(x322)*(x324)))+(((IkReal(-1.00000000000000))*(sj1)*(x329)))+(((IkReal(-1.00000000000000))*(sj1)*(x327)*(x328)))+(((IkReal(-1.00000000000000))*(r11)*(x321)*(x323)))+(((r12)*(x326)))+(((IkReal(-1.00000000000000))*(x323)*(x328)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x321)*(x327)))+(((cj6)*(r10)*(sj1)*(sj4)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x330=IKsin(j3);
IkReal x331=IKcos(j3);
IkReal x332=((IkReal(1.00000000000000))*(r00));
IkReal x333=((cj5)*(sj6));
IkReal x334=((cj6)*(sj4));
IkReal x335=((cj4)*(cj5));
IkReal x336=((cj4)*(sj5));
IkReal x337=((IkReal(1.00000000000000))*(r10));
IkReal x338=((sj4)*(sj6));
IkReal x339=((cj1)*(x330));
IkReal x340=((cj1)*(x331));
IkReal x341=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x342=((sj1)*(x330));
IkReal x343=((IkReal(1.00000000000000))*(sj1)*(x331));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x341)))+(((IkReal(-1.00000000000000))*(x333)*(x337)))+(x342)+(x340)+(((r12)*(sj5))));
evalcond[1]=((((r02)*(sj5)))+(x339)+(((IkReal(-1.00000000000000))*(r01)*(x341)))+(((IkReal(-1.00000000000000))*(x332)*(x333)))+(((IkReal(-1.00000000000000))*(x343))));
evalcond[2]=((((r11)*(x338)))+(((r12)*(x335)))+(((r10)*(sj6)*(x336)))+(x339)+(((cj6)*(r11)*(x336)))+(((IkReal(-1.00000000000000))*(x343)))+(((IkReal(-1.00000000000000))*(x334)*(x337))));
evalcond[3]=((((r01)*(x338)))+(((r02)*(x335)))+(((cj6)*(r01)*(x336)))+(((r00)*(sj6)*(x336)))+(((IkReal(-1.00000000000000))*(x332)*(x334)))+(((IkReal(-1.00000000000000))*(x342)))+(((IkReal(-1.00000000000000))*(x340))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x344=((IkReal(1.00000000000000))*(cj5));
IkReal x345=((cj6)*(sj1));
IkReal x346=((cj1)*(sj6));
IkReal x347=((sj1)*(sj5));
IkReal x348=((sj1)*(sj6));
IkReal x349=((cj1)*(cj6));
IkReal x350=((cj1)*(sj5));
if( IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(r10)*(x344)*(x348)))+(((IkReal(-1.00000000000000))*(r11)*(x344)*(x345)))+(((IkReal(-1.00000000000000))*(r01)*(x344)*(x349)))+(((r12)*(x347)))+(((r02)*(x350)))+(((IkReal(-1.00000000000000))*(r00)*(x344)*(x346))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(r10)*(x344)*(x346)))+(((r12)*(x350)))+(((IkReal(-1.00000000000000))*(r11)*(x344)*(x349)))+(((cj5)*(r01)*(x345)))+(((cj5)*(r00)*(x348)))+(((IkReal(-1.00000000000000))*(r02)*(x347))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst18)*(((((IkReal(-1.00000000000000))*(r10)*(x344)*(x348)))+(((IkReal(-1.00000000000000))*(r11)*(x344)*(x345)))+(((IkReal(-1.00000000000000))*(r01)*(x344)*(x349)))+(((r12)*(x347)))+(((r02)*(x350)))+(((IkReal(-1.00000000000000))*(r00)*(x344)*(x346)))))), ((gconst18)*(((((IkReal(-1.00000000000000))*(r10)*(x344)*(x346)))+(((r12)*(x350)))+(((IkReal(-1.00000000000000))*(r11)*(x344)*(x349)))+(((cj5)*(r01)*(x345)))+(((cj5)*(r00)*(x348)))+(((IkReal(-1.00000000000000))*(r02)*(x347)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x351=IKsin(j3);
IkReal x352=IKcos(j3);
IkReal x353=((IkReal(1.00000000000000))*(r00));
IkReal x354=((cj5)*(sj6));
IkReal x355=((cj6)*(sj4));
IkReal x356=((cj4)*(cj5));
IkReal x357=((cj4)*(sj5));
IkReal x358=((IkReal(1.00000000000000))*(r10));
IkReal x359=((sj4)*(sj6));
IkReal x360=((cj1)*(x351));
IkReal x361=((cj1)*(x352));
IkReal x362=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x363=((sj1)*(x351));
IkReal x364=((IkReal(1.00000000000000))*(sj1)*(x352));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x362)))+(x361)+(x363)+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x354)*(x358))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x362)))+(((IkReal(-1.00000000000000))*(x364)))+(((r02)*(sj5)))+(x360)+(((IkReal(-1.00000000000000))*(x353)*(x354))));
evalcond[2]=((((r12)*(x356)))+(((IkReal(-1.00000000000000))*(x364)))+(((r10)*(sj6)*(x357)))+(((r11)*(x359)))+(x360)+(((cj6)*(r11)*(x357)))+(((IkReal(-1.00000000000000))*(x355)*(x358))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x361)))+(((IkReal(-1.00000000000000))*(x363)))+(((r01)*(x359)))+(((cj6)*(r01)*(x357)))+(((r00)*(sj6)*(x357)))+(((IkReal(-1.00000000000000))*(x353)*(x355)))+(((r02)*(x356))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x365=((IkReal(27.0000000000000))*(sj6));
IkReal x366=((sj4)*(sj5));
IkReal x367=((cj4)*(r01));
IkReal x368=((IkReal(143.280000000000))*(sj2));
IkReal x369=((cj5)*(r12));
IkReal x370=((r11)*(sj5));
IkReal x371=((IkReal(27.0000000000000))*(cj6));
IkReal x372=((cj4)*(r00));
IkReal x373=((r10)*(sj5));
IkReal x374=((IkReal(195.040000000000))*(cj6)*(sj2));
IkReal x375=((cj5)*(r02)*(sj4));
IkReal x376=((IkReal(195.040000000000))*(sj2)*(sj6));
if( IKabs(((((IKabs(((((IkReal(-230.760000000000))*(cj2)*(sj2)))+(((IkReal(-251.660000000000))*(sj2))))) != 0)?((IkReal)1/(((((IkReal(-230.760000000000))*(cj2)*(sj2)))+(((IkReal(-251.660000000000))*(sj2)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj4)*(x370)*(x374)))+(((IkReal(-1.00000000000000))*(cj6)*(x368)*(x370)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(x376)))+(((r10)*(sj4)*(x374)))+(((IkReal(2000.00000000000))*(py)*(sj2)))+(((r00)*(x365)*(x366)))+(((r01)*(x366)*(x371)))+(((IkReal(-1.00000000000000))*(sj6)*(x368)*(x373)))+(((IkReal(-1.00000000000000))*(cj4)*(x373)*(x376)))+(((IkReal(-195.040000000000))*(cj4)*(sj2)*(x369)))+(((IkReal(27.0000000000000))*(x375)))+(((IkReal(-1.00000000000000))*(x365)*(x367)))+(((x371)*(x372)))+(((IkReal(-1.00000000000000))*(x368)*(x369))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*(((((r00)*(sj6)*(x366)))+(x375)+(((cj6)*(x372)))+(((cj6)*(r01)*(x366)))+(((IkReal(-1.00000000000000))*(sj6)*(x367))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((IkReal(-230.760000000000))*(cj2)*(sj2)))+(((IkReal(-251.660000000000))*(sj2))))) != 0)?((IkReal)1/(((((IkReal(-230.760000000000))*(cj2)*(sj2)))+(((IkReal(-251.660000000000))*(sj2)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj4)*(x370)*(x374)))+(((IkReal(-1.00000000000000))*(cj6)*(x368)*(x370)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(x376)))+(((r10)*(sj4)*(x374)))+(((IkReal(2000.00000000000))*(py)*(sj2)))+(((r00)*(x365)*(x366)))+(((r01)*(x366)*(x371)))+(((IkReal(-1.00000000000000))*(sj6)*(x368)*(x373)))+(((IkReal(-1.00000000000000))*(cj4)*(x373)*(x376)))+(((IkReal(-195.040000000000))*(cj4)*(sj2)*(x369)))+(((IkReal(27.0000000000000))*(x375)))+(((IkReal(-1.00000000000000))*(x365)*(x367)))+(((x371)*(x372)))+(((IkReal(-1.00000000000000))*(x368)*(x369)))))))+IKsqr(((((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*(((((r00)*(sj6)*(x366)))+(x375)+(((cj6)*(x372)))+(((cj6)*(r01)*(x366)))+(((IkReal(-1.00000000000000))*(sj6)*(x367)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(((((IkReal(-230.760000000000))*(cj2)*(sj2)))+(((IkReal(-251.660000000000))*(sj2))))) != 0)?((IkReal)1/(((((IkReal(-230.760000000000))*(cj2)*(sj2)))+(((IkReal(-251.660000000000))*(sj2)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj4)*(x370)*(x374)))+(((IkReal(-1.00000000000000))*(cj6)*(x368)*(x370)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(x376)))+(((r10)*(sj4)*(x374)))+(((IkReal(2000.00000000000))*(py)*(sj2)))+(((r00)*(x365)*(x366)))+(((r01)*(x366)*(x371)))+(((IkReal(-1.00000000000000))*(sj6)*(x368)*(x373)))+(((IkReal(-1.00000000000000))*(cj4)*(x373)*(x376)))+(((IkReal(-195.040000000000))*(cj4)*(sj2)*(x369)))+(((IkReal(27.0000000000000))*(x375)))+(((IkReal(-1.00000000000000))*(x365)*(x367)))+(((x371)*(x372)))+(((IkReal(-1.00000000000000))*(x368)*(x369)))))), ((((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*(((((r00)*(sj6)*(x366)))+(x375)+(((cj6)*(x372)))+(((cj6)*(r01)*(x366)))+(((IkReal(-1.00000000000000))*(sj6)*(x367)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x377=IKsin(j1);
IkReal x378=IKcos(j1);
IkReal x379=((IkReal(1.00000000000000))*(r00));
IkReal x380=((sj4)*(sj6));
IkReal x381=((cj4)*(cj6));
IkReal x382=((cj6)*(sj4));
IkReal x383=((IkReal(0.0975200000000000))*(r10));
IkReal x384=((IkReal(0.115380000000000))*(cj2));
IkReal x385=((IkReal(0.0975200000000000))*(r11));
IkReal x386=((IkReal(1.00000000000000))*(r10));
IkReal x387=((r01)*(sj5));
IkReal x388=((sj5)*(sj6));
IkReal x389=((cj4)*(sj6));
IkReal x390=((IkReal(0.0975200000000000))*(r00));
IkReal x391=((cj5)*(r02));
IkReal x392=((IkReal(0.0975200000000000))*(cj4));
IkReal x393=((cj5)*(r12));
IkReal x394=((IkReal(1.00000000000000))*(cj5)*(sj4));
IkReal x395=((IkReal(0.0716400000000000))*(cj6)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj5)*(x379)*(x380)))+(((IkReal(-1.00000000000000))*(x382)*(x387)))+(((IkReal(-1.00000000000000))*(x379)*(x381)))+(((IkReal(-1.00000000000000))*(sj4)*(x391)))+(((sj2)*(x378)))+(((r01)*(x389))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj5)*(x380)*(x386)))+(((r11)*(x389)))+(((IkReal(-1.00000000000000))*(x381)*(x386)))+(((IkReal(-1.00000000000000))*(sj4)*(x393)))+(((sj2)*(x377)))+(((IkReal(-1.00000000000000))*(r11)*(sj5)*(x382))));
evalcond[2]=((((IkReal(0.0975200000000000))*(x381)*(x387)))+(((IkReal(0.0975200000000000))*(r01)*(x380)))+(((IkReal(-1.00000000000000))*(x382)*(x390)))+(((IkReal(0.0135000000000000))*(x377)))+(((x391)*(x392)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.125830000000000))*(x378)))+(((IkReal(0.0716400000000000))*(cj6)*(x387)))+(((cj4)*(x388)*(x390)))+(((IkReal(-1.00000000000000))*(x378)*(x384)))+(((IkReal(0.0716400000000000))*(x391)))+(((IkReal(0.0716400000000000))*(r00)*(x388))));
evalcond[3]=((((sj5)*(x381)*(x385)))+(((cj4)*(x383)*(x388)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x395)))+(((IkReal(-0.125830000000000))*(x377)))+(((IkReal(-1.00000000000000))*(x377)*(x384)))+(((x380)*(x385)))+(((IkReal(-0.0135000000000000))*(x378)))+(((IkReal(0.0716400000000000))*(r10)*(x388)))+(((IkReal(0.0716400000000000))*(x393)))+(((x392)*(x393)))+(((IkReal(-1.00000000000000))*(x382)*(x383))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(sj2);
dummyeval[0]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj2;
dummyeval[1]=cj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj2;
dummyeval[1]=sj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x396=((cj5)*(r22));
IkReal x397=((IkReal(0.0975200000000000))*(cj4));
IkReal x398=((IkReal(1.00000000000000))*(cj5));
IkReal x399=((r20)*(sj6));
IkReal x400=((IkReal(1.00000000000000))*(sj4));
IkReal x401=((cj5)*(r12));
IkReal x402=((IkReal(0.0975200000000000))*(sj4));
IkReal x403=((r11)*(sj6));
IkReal x404=((cj6)*(sj5));
IkReal x405=((cj6)*(r20));
IkReal x406=((cj4)*(r21));
IkReal x407=((r01)*(sj6));
IkReal x408=((r21)*(sj6));
IkReal x409=((cj5)*(r02));
IkReal x410=((IkReal(1.00000000000000))*(cj4)*(cj6));
IkReal x411=((r10)*(sj5)*(sj6));
IkReal x412=((r00)*(sj5)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x398)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x398)*(x399))));
evalcond[2]=((IkReal(1.00000000000000))+(((sj6)*(x406)))+(((IkReal(-1.00000000000000))*(r21)*(x400)*(x404)))+(((IkReal(-1.00000000000000))*(x396)*(x400)))+(((IkReal(-1.00000000000000))*(sj5)*(x399)*(x400)))+(((IkReal(-1.00000000000000))*(cj4)*(x405))));
evalcond[3]=((((x404)*(x406)))+(((cj4)*(x396)))+(((IkReal(-1.00000000000000))*(x400)*(x405)))+(((sj4)*(x408)))+(((cj4)*(sj5)*(x399))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r01)*(x400)*(x404)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x398)))+(((cj4)*(x407)))+(((IkReal(-1.00000000000000))*(x400)*(x412)))+(((IkReal(-1.00000000000000))*(r00)*(x410))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r12)*(sj4)*(x398)))+(((IkReal(-1.00000000000000))*(r11)*(x400)*(x404)))+(((IkReal(-1.00000000000000))*(r10)*(x410)))+(((cj4)*(x403)))+(((IkReal(-1.00000000000000))*(x400)*(x411))));
evalcond[6]=((((IkReal(0.0716400000000000))*(sj5)*(x399)))+(((sj5)*(x397)*(x399)))+(((x396)*(x397)))+(((IkReal(0.0716400000000000))*(r21)*(x404)))+(((IkReal(-1.00000000000000))*(x402)*(x405)))+(((IkReal(-1.00000000000000))*(pz)))+(((x402)*(x408)))+(((IkReal(0.0716400000000000))*(x396)))+(((r21)*(x397)*(x404))));
evalcond[7]=((((x397)*(x409)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x402)))+(((IkReal(0.0135000000000000))*(sj1)))+(((IkReal(0.0716400000000000))*(r01)*(x404)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.241210000000000))*(cj1)))+(((r01)*(x397)*(x404)))+(((IkReal(0.0716400000000000))*(x409)))+(((x402)*(x407)))+(((IkReal(0.0716400000000000))*(x412)))+(((x397)*(x412))));
evalcond[8]=((((x397)*(x401)))+(((IkReal(-0.0135000000000000))*(cj1)))+(((r11)*(x397)*(x404)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0716400000000000))*(r11)*(x404)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x402)))+(((IkReal(-0.241210000000000))*(sj1)))+(((IkReal(0.0716400000000000))*(x401)))+(((x402)*(x403)))+(((IkReal(0.0716400000000000))*(x411)))+(((x397)*(x411))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x413=((cj4)*(cj5));
IkReal x414=((cj1)*(cj6));
IkReal x415=((r10)*(sj4));
IkReal x416=((cj4)*(sj5));
IkReal x417=((IkReal(1.00000000000000))*(sj1));
IkReal x418=((IkReal(1.00000000000000))*(r11));
IkReal x419=((cj1)*(sj6));
IkReal x420=((IkReal(1.00000000000000))*(cj1)*(r12));
IkReal x421=((cj5)*(r10)*(sj6));
IkReal x422=((cj6)*(r11)*(x417));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r10)*(x416)*(x419)))+(((IkReal(-1.00000000000000))*(sj4)*(x418)*(x419)))+(((x414)*(x415)))+(((IkReal(-1.00000000000000))*(x414)*(x416)*(x418)))+(((r12)*(sj1)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x422)))+(((IkReal(-1.00000000000000))*(x417)*(x421)))+(((IkReal(-1.00000000000000))*(x413)*(x420))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj5)*(r11)*(x414)))+(((IkReal(-1.00000000000000))*(sj5)*(x420)))+(((IkReal(-1.00000000000000))*(x416)*(x422)))+(((cj6)*(sj1)*(x415)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x416)*(x417)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6)*(x417)))+(((cj5)*(r10)*(x419)))+(((IkReal(-1.00000000000000))*(r12)*(x413)*(x417))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(r10)*(x416)*(x419)))+(((IkReal(-1.00000000000000))*(sj4)*(x418)*(x419)))+(((x414)*(x415)))+(((IkReal(-1.00000000000000))*(x414)*(x416)*(x418)))+(((r12)*(sj1)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x422)))+(((IkReal(-1.00000000000000))*(x417)*(x421)))+(((IkReal(-1.00000000000000))*(x413)*(x420)))))), ((gconst4)*(((((cj5)*(r11)*(x414)))+(((IkReal(-1.00000000000000))*(sj5)*(x420)))+(((IkReal(-1.00000000000000))*(x416)*(x422)))+(((cj6)*(sj1)*(x415)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x416)*(x417)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6)*(x417)))+(((cj5)*(r10)*(x419)))+(((IkReal(-1.00000000000000))*(r12)*(x413)*(x417)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x423=IKsin(j3);
IkReal x424=IKcos(j3);
IkReal x425=((IkReal(1.00000000000000))*(r00));
IkReal x426=((cj6)*(sj4));
IkReal x427=((cj4)*(cj5));
IkReal x428=((cj5)*(sj6));
IkReal x429=((cj4)*(sj5));
IkReal x430=((IkReal(1.00000000000000))*(r10));
IkReal x431=((sj4)*(sj6));
IkReal x432=((cj1)*(x424));
IkReal x433=((cj1)*(x423));
IkReal x434=((sj1)*(x424));
IkReal x435=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x436=((IkReal(1.00000000000000))*(sj1)*(x423));
evalcond[0]=((((IkReal(-1.00000000000000))*(x436)))+(((IkReal(-1.00000000000000))*(r11)*(x435)))+(x432)+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x428)*(x430))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x433)))+(((IkReal(-1.00000000000000))*(x434)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x425)*(x428)))+(((IkReal(-1.00000000000000))*(r01)*(x435))));
evalcond[2]=((((cj6)*(r11)*(x429)))+(((r10)*(sj6)*(x429)))+(x433)+(x434)+(((IkReal(-1.00000000000000))*(x426)*(x430)))+(((r11)*(x431)))+(((r12)*(x427))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x436)))+(((cj6)*(r01)*(x429)))+(((r02)*(x427)))+(x432)+(((IkReal(-1.00000000000000))*(x425)*(x426)))+(((r01)*(x431)))+(((r00)*(sj6)*(x429))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x437=((sj1)*(sj5));
IkReal x438=((IkReal(1.00000000000000))*(cj5));
IkReal x439=((cj6)*(r11));
IkReal x440=((r00)*(sj6));
IkReal x441=((cj1)*(sj5));
IkReal x442=((cj6)*(r01));
IkReal x443=((cj1)*(cj5));
IkReal x444=((r10)*(sj6));
if( IKabs(((gconst3)*(((((r12)*(x437)))+(((r02)*(x441)))+(((IkReal(-1.00000000000000))*(sj1)*(x438)*(x439)))+(((IkReal(-1.00000000000000))*(sj1)*(x438)*(x444)))+(((IkReal(-1.00000000000000))*(cj1)*(x438)*(x440)))+(((IkReal(-1.00000000000000))*(cj1)*(x438)*(x442))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((x439)*(x443)))+(((IkReal(-1.00000000000000))*(r12)*(x441)))+(((r02)*(x437)))+(((IkReal(-1.00000000000000))*(sj1)*(x438)*(x440)))+(((IkReal(-1.00000000000000))*(sj1)*(x438)*(x442)))+(((x443)*(x444))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst3)*(((((r12)*(x437)))+(((r02)*(x441)))+(((IkReal(-1.00000000000000))*(sj1)*(x438)*(x439)))+(((IkReal(-1.00000000000000))*(sj1)*(x438)*(x444)))+(((IkReal(-1.00000000000000))*(cj1)*(x438)*(x440)))+(((IkReal(-1.00000000000000))*(cj1)*(x438)*(x442)))))), ((gconst3)*(((((x439)*(x443)))+(((IkReal(-1.00000000000000))*(r12)*(x441)))+(((r02)*(x437)))+(((IkReal(-1.00000000000000))*(sj1)*(x438)*(x440)))+(((IkReal(-1.00000000000000))*(sj1)*(x438)*(x442)))+(((x443)*(x444)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x445=IKsin(j3);
IkReal x446=IKcos(j3);
IkReal x447=((IkReal(1.00000000000000))*(r00));
IkReal x448=((cj6)*(sj4));
IkReal x449=((cj4)*(cj5));
IkReal x450=((cj5)*(sj6));
IkReal x451=((cj4)*(sj5));
IkReal x452=((IkReal(1.00000000000000))*(r10));
IkReal x453=((sj4)*(sj6));
IkReal x454=((cj1)*(x446));
IkReal x455=((cj1)*(x445));
IkReal x456=((sj1)*(x446));
IkReal x457=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x458=((IkReal(1.00000000000000))*(sj1)*(x445));
evalcond[0]=((((IkReal(-1.00000000000000))*(x458)))+(x454)+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x450)*(x452)))+(((IkReal(-1.00000000000000))*(r11)*(x457))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x455)))+(((IkReal(-1.00000000000000))*(x456)))+(((IkReal(-1.00000000000000))*(r01)*(x457)))+(((IkReal(-1.00000000000000))*(x447)*(x450)))+(((r02)*(sj5))));
evalcond[2]=((((r10)*(sj6)*(x451)))+(x456)+(x455)+(((cj6)*(r11)*(x451)))+(((r11)*(x453)))+(((r12)*(x449)))+(((IkReal(-1.00000000000000))*(x448)*(x452))));
evalcond[3]=((((r02)*(x449)))+(((r00)*(sj6)*(x451)))+(((cj6)*(r01)*(x451)))+(((IkReal(-1.00000000000000))*(x458)))+(x454)+(((IkReal(-1.00000000000000))*(x447)*(x448)))+(((r01)*(x453))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x459=((cj5)*(r22));
IkReal x460=((IkReal(0.0975200000000000))*(cj4));
IkReal x461=((IkReal(1.00000000000000))*(cj5));
IkReal x462=((r20)*(sj6));
IkReal x463=((IkReal(1.00000000000000))*(sj4));
IkReal x464=((cj5)*(r12));
IkReal x465=((IkReal(0.0975200000000000))*(sj4));
IkReal x466=((r11)*(sj6));
IkReal x467=((cj6)*(sj5));
IkReal x468=((cj6)*(r20));
IkReal x469=((cj4)*(r21));
IkReal x470=((r01)*(sj6));
IkReal x471=((r21)*(sj6));
IkReal x472=((cj5)*(r02));
IkReal x473=((IkReal(1.00000000000000))*(cj4)*(cj6));
IkReal x474=((r10)*(sj5)*(sj6));
IkReal x475=((r00)*(sj5)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x461)))+(((IkReal(-1.00000000000000))*(x461)*(x462))));
evalcond[2]=((IkReal(-1.00000000000000))+(((sj6)*(x469)))+(((IkReal(-1.00000000000000))*(cj4)*(x468)))+(((IkReal(-1.00000000000000))*(x459)*(x463)))+(((IkReal(-1.00000000000000))*(r21)*(x463)*(x467)))+(((IkReal(-1.00000000000000))*(sj5)*(x462)*(x463))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x463)*(x468)))+(((cj4)*(x459)))+(((sj4)*(x471)))+(((cj4)*(sj5)*(x462)))+(((x467)*(x469))));
evalcond[4]=((((cj4)*(x470)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x461)))+(((IkReal(-1.00000000000000))*(r00)*(x473)))+(((IkReal(-1.00000000000000))*(r01)*(x463)*(x467)))+(((IkReal(-1.00000000000000))*(x463)*(x475))));
evalcond[5]=((((cj4)*(x466)))+(((IkReal(-1.00000000000000))*(r11)*(x463)*(x467)))+(((IkReal(-1.00000000000000))*(r10)*(x473)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x461)))+(((IkReal(-1.00000000000000))*(x463)*(x474))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x465)*(x468)))+(((IkReal(0.0716400000000000))*(r21)*(x467)))+(((x465)*(x471)))+(((IkReal(0.0716400000000000))*(x459)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(sj5)*(x462)))+(((x459)*(x460)))+(((sj5)*(x460)*(x462)))+(((r21)*(x460)*(x467))));
evalcond[7]=((((r01)*(x460)*(x467)))+(((IkReal(0.0716400000000000))*(r01)*(x467)))+(((IkReal(0.0716400000000000))*(x472)))+(((IkReal(0.0716400000000000))*(x475)))+(((x465)*(x470)))+(((IkReal(0.0135000000000000))*(sj1)))+(((x460)*(x475)))+(((x460)*(x472)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.0104500000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x465))));
evalcond[8]=((((IkReal(-0.0135000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x465)))+(((x465)*(x466)))+(((IkReal(0.0716400000000000))*(x474)))+(((IkReal(0.0716400000000000))*(r11)*(x467)))+(((x460)*(x474)))+(((IkReal(0.0716400000000000))*(x464)))+(((IkReal(-1.00000000000000))*(py)))+(((x460)*(x464)))+(((r11)*(x460)*(x467)))+(((IkReal(-0.0104500000000000))*(sj1))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x476=((IkReal(1.00000000000000))*(cj6));
IkReal x477=((cj5)*(sj1));
IkReal x478=((cj1)*(cj5));
IkReal x479=((cj4)*(r12));
IkReal x480=((r10)*(sj4));
IkReal x481=((r10)*(sj6));
IkReal x482=((cj1)*(sj5));
IkReal x483=((cj4)*(r11));
IkReal x484=((IkReal(1.00000000000000))*(sj1));
IkReal x485=((sj1)*(sj5));
IkReal x486=((r11)*(sj4)*(sj6));
if( IKabs(((gconst6)*(((((x478)*(x479)))+(((IkReal(-1.00000000000000))*(x477)*(x481)))+(((IkReal(-1.00000000000000))*(r11)*(x476)*(x477)))+(((r12)*(x485)))+(((IkReal(-1.00000000000000))*(cj1)*(x476)*(x480)))+(((cj1)*(x486)))+(((cj6)*(x482)*(x483)))+(((cj4)*(x481)*(x482))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(x484)*(x486)))+(((IkReal(-1.00000000000000))*(x477)*(x479)))+(((IkReal(-1.00000000000000))*(cj4)*(sj5)*(x481)*(x484)))+(((cj6)*(sj1)*(x480)))+(((IkReal(-1.00000000000000))*(r11)*(x476)*(x478)))+(((r12)*(x482)))+(((IkReal(-1.00000000000000))*(x478)*(x481)))+(((IkReal(-1.00000000000000))*(x476)*(x483)*(x485))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst6)*(((((x478)*(x479)))+(((IkReal(-1.00000000000000))*(x477)*(x481)))+(((IkReal(-1.00000000000000))*(r11)*(x476)*(x477)))+(((r12)*(x485)))+(((IkReal(-1.00000000000000))*(cj1)*(x476)*(x480)))+(((cj1)*(x486)))+(((cj6)*(x482)*(x483)))+(((cj4)*(x481)*(x482)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(x484)*(x486)))+(((IkReal(-1.00000000000000))*(x477)*(x479)))+(((IkReal(-1.00000000000000))*(cj4)*(sj5)*(x481)*(x484)))+(((cj6)*(sj1)*(x480)))+(((IkReal(-1.00000000000000))*(r11)*(x476)*(x478)))+(((r12)*(x482)))+(((IkReal(-1.00000000000000))*(x478)*(x481)))+(((IkReal(-1.00000000000000))*(x476)*(x483)*(x485)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x487=IKsin(j3);
IkReal x488=IKcos(j3);
IkReal x489=((IkReal(1.00000000000000))*(r00));
IkReal x490=((cj5)*(sj6));
IkReal x491=((cj6)*(sj4));
IkReal x492=((cj4)*(cj5));
IkReal x493=((cj4)*(sj5));
IkReal x494=((IkReal(1.00000000000000))*(r10));
IkReal x495=((sj4)*(sj6));
IkReal x496=((cj1)*(x487));
IkReal x497=((cj1)*(x488));
IkReal x498=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x499=((sj1)*(x487));
IkReal x500=((IkReal(1.00000000000000))*(sj1)*(x488));
evalcond[0]=((((IkReal(-1.00000000000000))*(x490)*(x494)))+(x499)+(x497)+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x498))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x498)))+(((IkReal(-1.00000000000000))*(x489)*(x490)))+(((IkReal(-1.00000000000000))*(x500)))+(((r02)*(sj5)))+(x496));
evalcond[2]=((((IkReal(-1.00000000000000))*(x491)*(x494)))+(((IkReal(-1.00000000000000))*(x500)))+(((r10)*(sj6)*(x493)))+(((r11)*(x495)))+(((r12)*(x492)))+(x496)+(((cj6)*(r11)*(x493))));
evalcond[3]=((((r02)*(x492)))+(((IkReal(-1.00000000000000))*(x489)*(x491)))+(((r00)*(sj6)*(x493)))+(((IkReal(-1.00000000000000))*(x497)))+(((IkReal(-1.00000000000000))*(x499)))+(((cj6)*(r01)*(x493)))+(((r01)*(x495))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x501=((IkReal(1.00000000000000))*(cj5));
IkReal x502=((cj6)*(sj1));
IkReal x503=((cj1)*(sj6));
IkReal x504=((sj1)*(sj5));
IkReal x505=((sj1)*(sj6));
IkReal x506=((cj1)*(cj6));
IkReal x507=((cj1)*(sj5));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r01)*(x501)*(x506)))+(((IkReal(-1.00000000000000))*(r11)*(x501)*(x502)))+(((IkReal(-1.00000000000000))*(r10)*(x501)*(x505)))+(((r12)*(x504)))+(((IkReal(-1.00000000000000))*(r00)*(x501)*(x503)))+(((r02)*(x507))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r11)*(x501)*(x506)))+(((IkReal(-1.00000000000000))*(r10)*(x501)*(x503)))+(((r12)*(x507)))+(((cj5)*(r01)*(x502)))+(((cj5)*(r00)*(x505)))+(((IkReal(-1.00000000000000))*(r02)*(x504))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(r01)*(x501)*(x506)))+(((IkReal(-1.00000000000000))*(r11)*(x501)*(x502)))+(((IkReal(-1.00000000000000))*(r10)*(x501)*(x505)))+(((r12)*(x504)))+(((IkReal(-1.00000000000000))*(r00)*(x501)*(x503)))+(((r02)*(x507)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(r11)*(x501)*(x506)))+(((IkReal(-1.00000000000000))*(r10)*(x501)*(x503)))+(((r12)*(x507)))+(((cj5)*(r01)*(x502)))+(((cj5)*(r00)*(x505)))+(((IkReal(-1.00000000000000))*(r02)*(x504)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x508=IKsin(j3);
IkReal x509=IKcos(j3);
IkReal x510=((IkReal(1.00000000000000))*(r00));
IkReal x511=((cj5)*(sj6));
IkReal x512=((cj6)*(sj4));
IkReal x513=((cj4)*(cj5));
IkReal x514=((cj4)*(sj5));
IkReal x515=((IkReal(1.00000000000000))*(r10));
IkReal x516=((sj4)*(sj6));
IkReal x517=((cj1)*(x508));
IkReal x518=((cj1)*(x509));
IkReal x519=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x520=((sj1)*(x508));
IkReal x521=((IkReal(1.00000000000000))*(sj1)*(x509));
evalcond[0]=((((IkReal(-1.00000000000000))*(x511)*(x515)))+(((IkReal(-1.00000000000000))*(r11)*(x519)))+(x520)+(x518)+(((r12)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x519)))+(((IkReal(-1.00000000000000))*(x521)))+(((r02)*(sj5)))+(x517)+(((IkReal(-1.00000000000000))*(x510)*(x511))));
evalcond[2]=((((r11)*(x516)))+(((IkReal(-1.00000000000000))*(x521)))+(((IkReal(-1.00000000000000))*(x512)*(x515)))+(((r10)*(sj6)*(x514)))+(x517)+(((cj6)*(r11)*(x514)))+(((r12)*(x513))));
evalcond[3]=((((r01)*(x516)))+(((IkReal(-1.00000000000000))*(x520)))+(((IkReal(-1.00000000000000))*(x518)))+(((r02)*(x513)))+(((cj6)*(r01)*(x514)))+(((r00)*(sj6)*(x514)))+(((IkReal(-1.00000000000000))*(x510)*(x512))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x522=((IkReal(1.00000000000000))*(cj6));
IkReal x523=((cj4)*(r00));
IkReal x524=((cj5)*(r22));
IkReal x525=((IkReal(0.0975200000000000))*(cj4));
IkReal x526=((IkReal(1.00000000000000))*(sj4));
IkReal x527=((cj5)*(r02));
IkReal x528=((cj5)*(r12));
IkReal x529=((r11)*(sj4));
IkReal x530=((IkReal(0.0975200000000000))*(sj6));
IkReal x531=((sj4)*(sj5));
IkReal x532=((cj6)*(sj5));
IkReal x533=((cj4)*(sj6));
IkReal x534=((sj5)*(sj6));
IkReal x535=((IkReal(0.0716400000000000))*(x532));
IkReal x536=((r10)*(x534));
IkReal x537=((IkReal(0.0975200000000000))*(cj6)*(sj4));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x524)*(x526)))+(cj2)+(((IkReal(-1.00000000000000))*(cj4)*(r20)*(x522)))+(((IkReal(-1.00000000000000))*(r21)*(x522)*(x531)))+(((IkReal(-1.00000000000000))*(r20)*(x526)*(x534)))+(((r21)*(x533))));
evalcond[2]=((sj2)+(((IkReal(-1.00000000000000))*(x526)*(x527)))+(((IkReal(-1.00000000000000))*(r01)*(x522)*(x531)))+(((IkReal(-1.00000000000000))*(r00)*(x526)*(x534)))+(((IkReal(-1.00000000000000))*(x522)*(x523)))+(((r01)*(x533))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r10)*(x522)))+(((IkReal(-1.00000000000000))*(x526)*(x536)))+(((IkReal(-1.00000000000000))*(x526)*(x528)))+(((r11)*(x533)))+(((IkReal(-1.00000000000000))*(sj5)*(x522)*(x529))));
evalcond[4]=((((r21)*(sj4)*(x530)))+(((IkReal(-1.00000000000000))*(r20)*(x537)))+(((r20)*(x525)*(x534)))+(((IkReal(-1.00000000000000))*(pz)))+(((x524)*(x525)))+(((r21)*(x525)*(x532)))+(((IkReal(0.115380000000000))*(sj2)))+(((IkReal(0.0716400000000000))*(r20)*(x534)))+(((IkReal(0.0716400000000000))*(x524)))+(((r21)*(x535))));
evalcond[5]=((IkReal(-0.125830000000000))+(((r01)*(sj4)*(x530)))+(((r01)*(x525)*(x532)))+(((IkReal(-1.00000000000000))*(r00)*(x537)))+(((sj5)*(x523)*(x530)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.115380000000000))*(cj2)))+(((x525)*(x527)))+(((IkReal(0.0716400000000000))*(r00)*(x534)))+(((IkReal(0.0716400000000000))*(x527)))+(((r01)*(x535))));
evalcond[6]=((IkReal(-0.0135000000000000))+(((r11)*(x525)*(x532)))+(((r11)*(x535)))+(((IkReal(-1.00000000000000))*(r10)*(x537)))+(((IkReal(-1.00000000000000))*(py)))+(((x525)*(x528)))+(((x525)*(x536)))+(((x529)*(x530)))+(((IkReal(0.0716400000000000))*(x536)))+(((IkReal(0.0716400000000000))*(x528))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x538=((IkReal(1.00000000000000))*(sj5));
IkReal x539=((r10)*(sj6));
IkReal x540=((cj6)*(r11));
if( IKabs(((((IkReal(-1.00000000000000))*(cj4)*(x538)*(x539)))+(((IkReal(-1.00000000000000))*(cj4)*(x538)*(x540)))+(((cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj5)*(x540)))+(((cj5)*(x539)))+(((IkReal(-1.00000000000000))*(r12)*(x538))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj4)*(x538)*(x539)))+(((IkReal(-1.00000000000000))*(cj4)*(x538)*(x540)))+(((cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6)))))+IKsqr(((((cj5)*(x540)))+(((cj5)*(x539)))+(((IkReal(-1.00000000000000))*(r12)*(x538)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj4)*(x538)*(x539)))+(((IkReal(-1.00000000000000))*(cj4)*(x538)*(x540)))+(((cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6)))), ((((cj5)*(x540)))+(((cj5)*(x539)))+(((IkReal(-1.00000000000000))*(r12)*(x538)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x541=IKsin(j3);
IkReal x542=IKcos(j3);
IkReal x543=((IkReal(1.00000000000000))*(r00));
IkReal x544=((cj5)*(sj6));
IkReal x545=((cj6)*(sj4));
IkReal x546=((IkReal(1.00000000000000))*(r10));
IkReal x547=((cj4)*(cj5));
IkReal x548=((IkReal(1.00000000000000))*(r20));
IkReal x549=((sj4)*(sj6));
IkReal x550=((cj4)*(sj5)*(sj6));
IkReal x551=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x552=((cj4)*(cj6)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(x544)*(x548)))+(((IkReal(-1.00000000000000))*(r21)*(x551)))+(((r22)*(sj5)))+(((sj2)*(x541))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x551)))+(((IkReal(-1.00000000000000))*(x544)*(x546)))+(x542)+(((r12)*(sj5))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x551)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj2)*(x541)))+(((IkReal(-1.00000000000000))*(x543)*(x544))));
evalcond[3]=((((r21)*(x549)))+(((IkReal(-1.00000000000000))*(sj2)*(x542)))+(((IkReal(-1.00000000000000))*(x545)*(x548)))+(((r20)*(x550)))+(((r22)*(x547)))+(((r21)*(x552))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x545)*(x546)))+(((r11)*(x549)))+(((r12)*(x547)))+(((r10)*(x550)))+(((r11)*(x552)))+(x541));
evalcond[5]=((((r02)*(x547)))+(((r01)*(x552)))+(((r00)*(x550)))+(((cj2)*(x542)))+(((IkReal(-1.00000000000000))*(x543)*(x545)))+(((r01)*(x549))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x553=((IkReal(1.00000000000000))*(cj6));
IkReal x554=((cj4)*(r00));
IkReal x555=((cj5)*(r22));
IkReal x556=((IkReal(0.0975200000000000))*(cj4));
IkReal x557=((IkReal(1.00000000000000))*(sj4));
IkReal x558=((cj5)*(r02));
IkReal x559=((cj5)*(r12));
IkReal x560=((r11)*(sj4));
IkReal x561=((IkReal(0.0975200000000000))*(sj6));
IkReal x562=((sj4)*(sj5));
IkReal x563=((cj6)*(sj5));
IkReal x564=((cj4)*(sj6));
IkReal x565=((sj5)*(sj6));
IkReal x566=((IkReal(0.0716400000000000))*(x563));
IkReal x567=((r10)*(x565));
IkReal x568=((IkReal(0.0975200000000000))*(cj6)*(sj4));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x557)*(x565)))+(((IkReal(-1.00000000000000))*(x555)*(x557)))+(((IkReal(-1.00000000000000))*(cj4)*(r20)*(x553)))+(cj2)+(((r21)*(x564)))+(((IkReal(-1.00000000000000))*(r21)*(x553)*(x562))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj2)))+(((r01)*(x564)))+(((IkReal(-1.00000000000000))*(r01)*(x553)*(x562)))+(((IkReal(-1.00000000000000))*(x553)*(x554)))+(((IkReal(-1.00000000000000))*(x557)*(x558)))+(((IkReal(-1.00000000000000))*(r00)*(x557)*(x565))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r10)*(x553)))+(((IkReal(-1.00000000000000))*(sj5)*(x553)*(x560)))+(((IkReal(-1.00000000000000))*(x557)*(x567)))+(((r11)*(x564)))+(((IkReal(-1.00000000000000))*(x557)*(x559))));
evalcond[4]=((((IkReal(0.0716400000000000))*(x555)))+(((r20)*(x556)*(x565)))+(((r21)*(x566)))+(((x555)*(x556)))+(((IkReal(-1.00000000000000))*(pz)))+(((r21)*(sj4)*(x561)))+(((IkReal(0.0716400000000000))*(r20)*(x565)))+(((IkReal(0.115380000000000))*(sj2)))+(((r21)*(x556)*(x563)))+(((IkReal(-1.00000000000000))*(r20)*(x568))));
evalcond[5]=((IkReal(0.125830000000000))+(((IkReal(0.0716400000000000))*(x558)))+(((r01)*(x556)*(x563)))+(((r01)*(x566)))+(((r01)*(sj4)*(x561)))+(((IkReal(0.0716400000000000))*(r00)*(x565)))+(((IkReal(-1.00000000000000))*(px)))+(((sj5)*(x554)*(x561)))+(((x556)*(x558)))+(((IkReal(-1.00000000000000))*(r00)*(x568)))+(((IkReal(0.115380000000000))*(cj2))));
evalcond[6]=((IkReal(0.0135000000000000))+(((IkReal(0.0716400000000000))*(x559)))+(((x556)*(x567)))+(((r11)*(x556)*(x563)))+(((IkReal(0.0716400000000000))*(x567)))+(((x560)*(x561)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(r10)*(x568)))+(((x556)*(x559)))+(((r11)*(x566))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x569=((cj4)*(sj5));
IkReal x570=((cj6)*(r11));
IkReal x571=((r10)*(sj6));
IkReal x572=((IkReal(1.00000000000000))*(cj5));
if( IKabs(((((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj4)))+(((cj4)*(cj5)*(r12)))+(((r11)*(sj4)*(sj6)))+(((x569)*(x571)))+(((x569)*(x570))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x570)*(x572)))+(((IkReal(-1.00000000000000))*(x571)*(x572)))+(((r12)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj4)))+(((cj4)*(cj5)*(r12)))+(((r11)*(sj4)*(sj6)))+(((x569)*(x571)))+(((x569)*(x570)))))+IKsqr(((((IkReal(-1.00000000000000))*(x570)*(x572)))+(((IkReal(-1.00000000000000))*(x571)*(x572)))+(((r12)*(sj5)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj4)))+(((cj4)*(cj5)*(r12)))+(((r11)*(sj4)*(sj6)))+(((x569)*(x571)))+(((x569)*(x570)))), ((((IkReal(-1.00000000000000))*(x570)*(x572)))+(((IkReal(-1.00000000000000))*(x571)*(x572)))+(((r12)*(sj5)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x573=IKsin(j3);
IkReal x574=IKcos(j3);
IkReal x575=((IkReal(1.00000000000000))*(r00));
IkReal x576=((cj5)*(sj6));
IkReal x577=((cj6)*(sj4));
IkReal x578=((IkReal(1.00000000000000))*(r10));
IkReal x579=((cj4)*(cj5));
IkReal x580=((IkReal(1.00000000000000))*(r20));
IkReal x581=((sj4)*(sj6));
IkReal x582=((IkReal(1.00000000000000))*(x574));
IkReal x583=((cj4)*(sj5)*(sj6));
IkReal x584=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x585=((cj4)*(cj6)*(sj5));
evalcond[0]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r21)*(x584)))+(((sj2)*(x573)))+(((IkReal(-1.00000000000000))*(x576)*(x580))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x576)*(x578)))+(((IkReal(-1.00000000000000))*(r11)*(x584)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x582))));
evalcond[2]=((((r02)*(sj5)))+(((cj2)*(x573)))+(((IkReal(-1.00000000000000))*(x575)*(x576)))+(((IkReal(-1.00000000000000))*(r01)*(x584))));
evalcond[3]=((((r20)*(x583)))+(((IkReal(-1.00000000000000))*(sj2)*(x582)))+(((IkReal(-1.00000000000000))*(x577)*(x580)))+(((r22)*(x579)))+(((r21)*(x585)))+(((r21)*(x581))));
evalcond[4]=((((r12)*(x579)))+(((r11)*(x581)))+(((r11)*(x585)))+(((r10)*(x583)))+(((IkReal(-1.00000000000000))*(x577)*(x578)))+(((IkReal(-1.00000000000000))*(x573))));
evalcond[5]=((((r02)*(x579)))+(((IkReal(-1.00000000000000))*(x575)*(x577)))+(((r01)*(x585)))+(((r01)*(x581)))+(((r00)*(x583)))+(((IkReal(-1.00000000000000))*(cj2)*(x582))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x586=((IkReal(1.00000000000000))*(cj6));
IkReal x587=((cj4)*(r00));
IkReal x588=((cj5)*(r22));
IkReal x589=((IkReal(0.0975200000000000))*(cj4));
IkReal x590=((IkReal(1.00000000000000))*(sj4));
IkReal x591=((cj5)*(r02));
IkReal x592=((cj5)*(r12));
IkReal x593=((r11)*(sj4));
IkReal x594=((IkReal(0.0975200000000000))*(sj6));
IkReal x595=((sj4)*(sj5));
IkReal x596=((cj6)*(sj5));
IkReal x597=((cj4)*(sj6));
IkReal x598=((sj5)*(sj6));
IkReal x599=((IkReal(0.0716400000000000))*(x596));
IkReal x600=((r10)*(x598));
IkReal x601=((IkReal(0.0975200000000000))*(cj6)*(sj4));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x588)*(x590)))+(cj2)+(((r21)*(x597)))+(((IkReal(-1.00000000000000))*(cj4)*(r20)*(x586)))+(((IkReal(-1.00000000000000))*(r21)*(x586)*(x595)))+(((IkReal(-1.00000000000000))*(r20)*(x590)*(x598))));
evalcond[2]=((((r01)*(x597)))+(((IkReal(-1.00000000000000))*(x586)*(x587)))+(((IkReal(-1.00000000000000))*(x590)*(x591)))+(((IkReal(-1.00000000000000))*(r00)*(x590)*(x598)))+(((IkReal(-1.00000000000000))*(r01)*(x586)*(x595))));
evalcond[3]=((sj2)+(((IkReal(-1.00000000000000))*(x590)*(x600)))+(((IkReal(-1.00000000000000))*(sj5)*(x586)*(x593)))+(((IkReal(-1.00000000000000))*(x590)*(x592)))+(((r11)*(x597)))+(((IkReal(-1.00000000000000))*(cj4)*(r10)*(x586))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x601)))+(((x588)*(x589)))+(((r20)*(x589)*(x598)))+(((r21)*(x589)*(x596)))+(((IkReal(-1.00000000000000))*(pz)))+(((r21)*(x599)))+(((IkReal(0.0716400000000000))*(r20)*(x598)))+(((r21)*(sj4)*(x594)))+(((IkReal(0.115380000000000))*(sj2)))+(((IkReal(0.0716400000000000))*(x588))));
evalcond[5]=((IkReal(0.0135000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x601)))+(((r01)*(x589)*(x596)))+(((r01)*(x599)))+(((IkReal(0.0716400000000000))*(x591)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(sj4)*(x594)))+(((IkReal(0.0716400000000000))*(r00)*(x598)))+(((sj5)*(x587)*(x594)))+(((x589)*(x591))));
evalcond[6]=((IkReal(-0.125830000000000))+(((IkReal(-1.00000000000000))*(r10)*(x601)))+(((x589)*(x600)))+(((IkReal(0.0716400000000000))*(x600)))+(((IkReal(0.0716400000000000))*(x592)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.115380000000000))*(cj2)))+(((r11)*(x599)))+(((r11)*(x589)*(x596)))+(((x589)*(x592)))+(((x593)*(x594))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x602=((r00)*(sj6));
IkReal x603=((cj4)*(sj5));
IkReal x604=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r00)*(sj4)*(x604)))+(((cj6)*(r01)*(x603)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((x602)*(x603))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x604)))+(((IkReal(-1.00000000000000))*(cj5)*(x602)))+(((r02)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r00)*(sj4)*(x604)))+(((cj6)*(r01)*(x603)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((x602)*(x603)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x604)))+(((IkReal(-1.00000000000000))*(cj5)*(x602)))+(((r02)*(sj5)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r00)*(sj4)*(x604)))+(((cj6)*(r01)*(x603)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((x602)*(x603)))), ((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x604)))+(((IkReal(-1.00000000000000))*(cj5)*(x602)))+(((r02)*(sj5)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x605=IKsin(j3);
IkReal x606=IKcos(j3);
IkReal x607=((IkReal(1.00000000000000))*(r00));
IkReal x608=((cj5)*(sj6));
IkReal x609=((cj6)*(sj4));
IkReal x610=((IkReal(1.00000000000000))*(r10));
IkReal x611=((cj4)*(cj5));
IkReal x612=((IkReal(1.00000000000000))*(r20));
IkReal x613=((sj4)*(sj6));
IkReal x614=((IkReal(1.00000000000000))*(x606));
IkReal x615=((cj4)*(sj5)*(sj6));
IkReal x616=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x617=((cj4)*(cj6)*(sj5));
IkReal x618=((IkReal(1.00000000000000))*(x605));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x616)))+(((r22)*(sj5)))+(((sj2)*(x605)))+(((IkReal(-1.00000000000000))*(x608)*(x612))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj2)*(x618)))+(((IkReal(-1.00000000000000))*(r11)*(x616)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x608)*(x610))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x616)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x614)))+(((IkReal(-1.00000000000000))*(x607)*(x608))));
evalcond[3]=((((r20)*(x615)))+(((IkReal(-1.00000000000000))*(sj2)*(x614)))+(((IkReal(-1.00000000000000))*(x609)*(x612)))+(((r21)*(x613)))+(((r21)*(x617)))+(((r22)*(x611))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x609)*(x610)))+(((cj2)*(x606)))+(((r11)*(x613)))+(((r11)*(x617)))+(((r12)*(x611)))+(((r10)*(x615))));
evalcond[5]=((((r00)*(x615)))+(((r01)*(x617)))+(((r01)*(x613)))+(((r02)*(x611)))+(((IkReal(-1.00000000000000))*(x618)))+(((IkReal(-1.00000000000000))*(x607)*(x609))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x619=((IkReal(1.00000000000000))*(cj6));
IkReal x620=((cj4)*(r00));
IkReal x621=((cj5)*(r22));
IkReal x622=((IkReal(0.0975200000000000))*(cj4));
IkReal x623=((IkReal(1.00000000000000))*(sj4));
IkReal x624=((cj5)*(r02));
IkReal x625=((cj5)*(r12));
IkReal x626=((r11)*(sj4));
IkReal x627=((IkReal(0.0975200000000000))*(sj6));
IkReal x628=((sj4)*(sj5));
IkReal x629=((cj6)*(sj5));
IkReal x630=((cj4)*(sj6));
IkReal x631=((sj5)*(sj6));
IkReal x632=((IkReal(0.0716400000000000))*(x629));
IkReal x633=((r10)*(x631));
IkReal x634=((IkReal(0.0975200000000000))*(cj6)*(sj4));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((r21)*(x630)))+(((IkReal(-1.00000000000000))*(x621)*(x623)))+(cj2)+(((IkReal(-1.00000000000000))*(cj4)*(r20)*(x619)))+(((IkReal(-1.00000000000000))*(r21)*(x619)*(x628)))+(((IkReal(-1.00000000000000))*(r20)*(x623)*(x631))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x619)*(x628)))+(((IkReal(-1.00000000000000))*(x623)*(x624)))+(((IkReal(-1.00000000000000))*(r00)*(x623)*(x631)))+(((r01)*(x630)))+(((IkReal(-1.00000000000000))*(x619)*(x620))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj4)*(r10)*(x619)))+(((IkReal(-1.00000000000000))*(x623)*(x633)))+(((IkReal(-1.00000000000000))*(x623)*(x625)))+(((IkReal(-1.00000000000000))*(sj5)*(x619)*(x626)))+(((r11)*(x630))));
evalcond[4]=((((IkReal(0.0716400000000000))*(x621)))+(((r21)*(x632)))+(((r20)*(x622)*(x631)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(r20)*(x634)))+(((r21)*(x622)*(x629)))+(((r21)*(sj4)*(x627)))+(((x621)*(x622)))+(((IkReal(0.115380000000000))*(sj2)))+(((IkReal(0.0716400000000000))*(r20)*(x631))));
evalcond[5]=((IkReal(-0.0135000000000000))+(((IkReal(0.0716400000000000))*(x624)))+(((r01)*(sj4)*(x627)))+(((IkReal(-1.00000000000000))*(r00)*(x634)))+(((sj5)*(x620)*(x627)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x632)))+(((IkReal(0.0716400000000000))*(r00)*(x631)))+(((x622)*(x624)))+(((r01)*(x622)*(x629))));
evalcond[6]=((IkReal(0.125830000000000))+(((IkReal(0.0716400000000000))*(x625)))+(((IkReal(0.0716400000000000))*(x633)))+(((r11)*(x622)*(x629)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(r10)*(x634)))+(((x622)*(x633)))+(((x622)*(x625)))+(((IkReal(0.115380000000000))*(cj2)))+(((x626)*(x627)))+(((r11)*(x632))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x635=((r00)*(sj6));
IkReal x636=((cj6)*(r01));
IkReal x637=((IkReal(1.00000000000000))*(r02));
IkReal x638=((IkReal(1.00000000000000))*(cj4)*(sj5));
if( IKabs(((((cj6)*(r00)*(sj4)))+(((IkReal(-1.00000000000000))*(x636)*(x638)))+(((IkReal(-1.00000000000000))*(x635)*(x638)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x637))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj5)*(x636)))+(((cj5)*(x635)))+(((IkReal(-1.00000000000000))*(sj5)*(x637))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj6)*(r00)*(sj4)))+(((IkReal(-1.00000000000000))*(x636)*(x638)))+(((IkReal(-1.00000000000000))*(x635)*(x638)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x637)))))+IKsqr(((((cj5)*(x636)))+(((cj5)*(x635)))+(((IkReal(-1.00000000000000))*(sj5)*(x637)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj6)*(r00)*(sj4)))+(((IkReal(-1.00000000000000))*(x636)*(x638)))+(((IkReal(-1.00000000000000))*(x635)*(x638)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x637)))), ((((cj5)*(x636)))+(((cj5)*(x635)))+(((IkReal(-1.00000000000000))*(sj5)*(x637)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x639=IKsin(j3);
IkReal x640=IKcos(j3);
IkReal x641=((IkReal(1.00000000000000))*(r00));
IkReal x642=((cj5)*(sj6));
IkReal x643=((cj6)*(sj4));
IkReal x644=((IkReal(1.00000000000000))*(r10));
IkReal x645=((cj4)*(cj5));
IkReal x646=((IkReal(1.00000000000000))*(r20));
IkReal x647=((sj4)*(sj6));
IkReal x648=((IkReal(1.00000000000000))*(x640));
IkReal x649=((cj4)*(sj5)*(sj6));
IkReal x650=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x651=((cj4)*(cj6)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(x642)*(x646)))+(((r22)*(sj5)))+(((sj2)*(x639)))+(((IkReal(-1.00000000000000))*(r21)*(x650))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x642)*(x644)))+(((IkReal(-1.00000000000000))*(r11)*(x650)))+(((r12)*(sj5)))+(((cj2)*(x639))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x641)*(x642)))+(((IkReal(-1.00000000000000))*(r01)*(x650)))+(((r02)*(sj5)))+(x640));
evalcond[3]=((((r20)*(x649)))+(((IkReal(-1.00000000000000))*(sj2)*(x648)))+(((r21)*(x647)))+(((IkReal(-1.00000000000000))*(x643)*(x646)))+(((r22)*(x645)))+(((r21)*(x651))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj2)*(x648)))+(((r11)*(x651)))+(((r10)*(x649)))+(((r12)*(x645)))+(((IkReal(-1.00000000000000))*(x643)*(x644)))+(((r11)*(x647))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x641)*(x643)))+(((r02)*(x645)))+(x639)+(((r01)*(x647)))+(((r00)*(x649)))+(((r01)*(x651))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x652=((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30);
IkReal x653=((r22)*(sj5));
IkReal x654=((cj5)*(cj6)*(r21));
IkReal x655=((IkReal(1.00000000000000))*(cj1)*(cj2));
IkReal x656=((IkReal(1.00000000000000))*(cj5)*(sj2));
IkReal x657=((cj5)*(r20)*(sj6));
if( IKabs(((x652)*(((((IkReal(-1.00000000000000))*(x653)))+(x654)+(x657))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x652)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x655)*(x657)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x656)))+(((cj1)*(cj2)*(x653)))+(((r02)*(sj2)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x656)))+(((IkReal(-1.00000000000000))*(x654)*(x655))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x652)*(((((IkReal(-1.00000000000000))*(x653)))+(x654)+(x657)))))+IKsqr(((x652)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x655)*(x657)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x656)))+(((cj1)*(cj2)*(x653)))+(((r02)*(sj2)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x656)))+(((IkReal(-1.00000000000000))*(x654)*(x655)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x652)*(((((IkReal(-1.00000000000000))*(x653)))+(x654)+(x657)))), ((x652)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x655)*(x657)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x656)))+(((cj1)*(cj2)*(x653)))+(((r02)*(sj2)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x656)))+(((IkReal(-1.00000000000000))*(x654)*(x655)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x658=IKsin(j3);
IkReal x659=IKcos(j3);
IkReal x660=((IkReal(1.00000000000000))*(r00));
IkReal x661=((cj5)*(sj6));
IkReal x662=((cj6)*(sj4));
IkReal x663=((IkReal(1.00000000000000))*(r10));
IkReal x664=((cj4)*(cj5));
IkReal x665=((IkReal(1.00000000000000))*(cj2));
IkReal x666=((IkReal(1.00000000000000))*(r20));
IkReal x667=((sj4)*(sj6));
IkReal x668=((IkReal(1.00000000000000))*(x659));
IkReal x669=((cj1)*(x659));
IkReal x670=((cj1)*(x658));
IkReal x671=((cj4)*(sj5)*(sj6));
IkReal x672=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x673=((sj1)*(x658));
IkReal x674=((cj4)*(cj6)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x672)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x661)*(x666)))+(((sj2)*(x658))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x661)*(x663)))+(((IkReal(-1.00000000000000))*(x665)*(x673)))+(((r12)*(sj5)))+(x669)+(((IkReal(-1.00000000000000))*(r11)*(x672))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj1)*(x668)))+(((IkReal(-1.00000000000000))*(x660)*(x661)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x665)*(x670)))+(((IkReal(-1.00000000000000))*(r01)*(x672))));
evalcond[3]=((((r21)*(x674)))+(((IkReal(-1.00000000000000))*(x662)*(x666)))+(((IkReal(-1.00000000000000))*(sj2)*(x668)))+(((r21)*(x667)))+(((r20)*(x671)))+(((r22)*(x664))));
evalcond[4]=((((r10)*(x671)))+(((IkReal(-1.00000000000000))*(x662)*(x663)))+(((cj2)*(sj1)*(x659)))+(((r11)*(x674)))+(((r11)*(x667)))+(((r12)*(x664)))+(x670));
evalcond[5]=((((r01)*(x667)))+(((cj2)*(x669)))+(((r01)*(x674)))+(((r00)*(x671)))+(((IkReal(-1.00000000000000))*(x660)*(x662)))+(((r02)*(x664)))+(((IkReal(-1.00000000000000))*(x673))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x675=((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30);
IkReal x676=((cj5)*(cj6));
IkReal x677=((IkReal(1.00000000000000))*(sj5));
IkReal x678=((cj5)*(sj6));
IkReal x679=((cj2)*(sj1));
if( IKabs(((x675)*(((((r21)*(x676)))+(((IkReal(-1.00000000000000))*(r22)*(x677)))+(((r20)*(x678))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x675)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((r20)*(x678)*(x679)))+(((r21)*(x676)*(x679)))+(((r10)*(sj2)*(x678)))+(((IkReal(-1.00000000000000))*(r22)*(x677)*(x679)))+(((IkReal(-1.00000000000000))*(r12)*(sj2)*(x677)))+(((r11)*(sj2)*(x676))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x675)*(((((r21)*(x676)))+(((IkReal(-1.00000000000000))*(r22)*(x677)))+(((r20)*(x678)))))))+IKsqr(((x675)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((r20)*(x678)*(x679)))+(((r21)*(x676)*(x679)))+(((r10)*(sj2)*(x678)))+(((IkReal(-1.00000000000000))*(r22)*(x677)*(x679)))+(((IkReal(-1.00000000000000))*(r12)*(sj2)*(x677)))+(((r11)*(sj2)*(x676)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x675)*(((((r21)*(x676)))+(((IkReal(-1.00000000000000))*(r22)*(x677)))+(((r20)*(x678)))))), ((x675)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((r20)*(x678)*(x679)))+(((r21)*(x676)*(x679)))+(((r10)*(sj2)*(x678)))+(((IkReal(-1.00000000000000))*(r22)*(x677)*(x679)))+(((IkReal(-1.00000000000000))*(r12)*(sj2)*(x677)))+(((r11)*(sj2)*(x676)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x680=IKsin(j3);
IkReal x681=IKcos(j3);
IkReal x682=((IkReal(1.00000000000000))*(r00));
IkReal x683=((cj5)*(sj6));
IkReal x684=((cj6)*(sj4));
IkReal x685=((IkReal(1.00000000000000))*(r10));
IkReal x686=((cj4)*(cj5));
IkReal x687=((IkReal(1.00000000000000))*(cj2));
IkReal x688=((IkReal(1.00000000000000))*(r20));
IkReal x689=((sj4)*(sj6));
IkReal x690=((IkReal(1.00000000000000))*(x681));
IkReal x691=((cj1)*(x681));
IkReal x692=((cj1)*(x680));
IkReal x693=((cj4)*(sj5)*(sj6));
IkReal x694=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x695=((sj1)*(x680));
IkReal x696=((cj4)*(cj6)*(sj5));
evalcond[0]=((((r22)*(sj5)))+(((sj2)*(x680)))+(((IkReal(-1.00000000000000))*(x683)*(x688)))+(((IkReal(-1.00000000000000))*(r21)*(x694))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x687)*(x695)))+(((IkReal(-1.00000000000000))*(r11)*(x694)))+(((r12)*(sj5)))+(x691)+(((IkReal(-1.00000000000000))*(x683)*(x685))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x687)*(x692)))+(((IkReal(-1.00000000000000))*(r01)*(x694)))+(((IkReal(-1.00000000000000))*(sj1)*(x690)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x682)*(x683))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x690)))+(((r21)*(x689)))+(((r22)*(x686)))+(((r20)*(x693)))+(((IkReal(-1.00000000000000))*(x684)*(x688)))+(((r21)*(x696))));
evalcond[4]=((((cj2)*(sj1)*(x681)))+(((IkReal(-1.00000000000000))*(x684)*(x685)))+(((r10)*(x693)))+(((r11)*(x696)))+(x692)+(((r11)*(x689)))+(((r12)*(x686))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x682)*(x684)))+(((r01)*(x689)))+(((cj2)*(x691)))+(((r00)*(x693)))+(((r02)*(x686)))+(((IkReal(-1.00000000000000))*(x695)))+(((r01)*(x696))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x697=((r20)*(sj6));
IkReal x698=((cj4)*(sj5));
IkReal x699=((cj6)*(r21));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)))+(((cj5)*(x699)))+(((cj5)*(x697))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((r21)*(sj4)*(sj6)))+(((x697)*(x698)))+(((cj4)*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj4)))+(((x698)*(x699))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)))+(((cj5)*(x699)))+(((cj5)*(x697)))))), ((gconst2)*(((((r21)*(sj4)*(sj6)))+(((x697)*(x698)))+(((cj4)*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj4)))+(((x698)*(x699)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x700=IKsin(j3);
IkReal x701=IKcos(j3);
IkReal x702=((IkReal(1.00000000000000))*(r00));
IkReal x703=((cj5)*(sj6));
IkReal x704=((cj6)*(sj4));
IkReal x705=((IkReal(1.00000000000000))*(r10));
IkReal x706=((cj4)*(cj5));
IkReal x707=((IkReal(1.00000000000000))*(cj2));
IkReal x708=((IkReal(1.00000000000000))*(r20));
IkReal x709=((sj4)*(sj6));
IkReal x710=((IkReal(1.00000000000000))*(x701));
IkReal x711=((cj1)*(x701));
IkReal x712=((cj1)*(x700));
IkReal x713=((cj4)*(sj5)*(sj6));
IkReal x714=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x715=((sj1)*(x700));
IkReal x716=((cj4)*(cj6)*(sj5));
evalcond[0]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x703)*(x708)))+(((IkReal(-1.00000000000000))*(r21)*(x714)))+(((sj2)*(x700))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x714)))+(((IkReal(-1.00000000000000))*(x707)*(x715)))+(((IkReal(-1.00000000000000))*(x703)*(x705)))+(((r12)*(sj5)))+(x711));
evalcond[2]=((((IkReal(-1.00000000000000))*(x707)*(x712)))+(((IkReal(-1.00000000000000))*(x702)*(x703)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x714)))+(((IkReal(-1.00000000000000))*(sj1)*(x710))));
evalcond[3]=((((r22)*(x706)))+(((r20)*(x713)))+(((IkReal(-1.00000000000000))*(x704)*(x708)))+(((r21)*(x716)))+(((r21)*(x709)))+(((IkReal(-1.00000000000000))*(sj2)*(x710))));
evalcond[4]=((((r11)*(x716)))+(((IkReal(-1.00000000000000))*(x704)*(x705)))+(x712)+(((r12)*(x706)))+(((cj2)*(sj1)*(x701)))+(((r10)*(x713)))+(((r11)*(x709))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x702)*(x704)))+(((r01)*(x709)))+(((r01)*(x716)))+(((r00)*(x713)))+(((IkReal(-1.00000000000000))*(x715)))+(((cj2)*(x711)))+(((r02)*(x706))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x717=((sj4)*(sj5));
IkReal x718=((cj5)*(sj4));
IkReal x719=((cj4)*(cj6));
IkReal x720=((IkReal(1.00000000000000))*(cj4)*(sj6));
if( IKabs(((gconst0)*(((((r10)*(sj6)*(x717)))+(((cj6)*(r11)*(x717)))+(((r12)*(x718)))+(((IkReal(-1.00000000000000))*(r11)*(x720)))+(((r10)*(x719))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((r00)*(x719)))+(((cj6)*(r01)*(x717)))+(((r00)*(sj6)*(x717)))+(((r02)*(x718)))+(((IkReal(-1.00000000000000))*(r01)*(x720))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst0)*(((((r10)*(sj6)*(x717)))+(((cj6)*(r11)*(x717)))+(((r12)*(x718)))+(((IkReal(-1.00000000000000))*(r11)*(x720)))+(((r10)*(x719)))))), ((gconst0)*(((((r00)*(x719)))+(((cj6)*(r01)*(x717)))+(((r00)*(sj6)*(x717)))+(((r02)*(x718)))+(((IkReal(-1.00000000000000))*(r01)*(x720)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x721=IKsin(j1);
IkReal x722=IKcos(j1);
IkReal x723=((IkReal(1.00000000000000))*(r00));
IkReal x724=((sj4)*(sj6));
IkReal x725=((cj4)*(cj6));
IkReal x726=((cj6)*(sj4));
IkReal x727=((IkReal(0.0975200000000000))*(r10));
IkReal x728=((IkReal(0.115380000000000))*(cj2));
IkReal x729=((IkReal(0.0975200000000000))*(r11));
IkReal x730=((IkReal(1.00000000000000))*(r10));
IkReal x731=((r01)*(sj5));
IkReal x732=((sj5)*(sj6));
IkReal x733=((cj4)*(sj6));
IkReal x734=((IkReal(0.0975200000000000))*(r00));
IkReal x735=((cj5)*(r02));
IkReal x736=((IkReal(0.0975200000000000))*(cj4));
IkReal x737=((cj5)*(r12));
IkReal x738=((IkReal(1.00000000000000))*(cj5)*(sj4));
IkReal x739=((IkReal(0.0716400000000000))*(cj6)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj5)*(x723)*(x724)))+(((IkReal(-1.00000000000000))*(x723)*(x725)))+(((sj2)*(x722)))+(((r01)*(x733)))+(((IkReal(-1.00000000000000))*(sj4)*(x735)))+(((IkReal(-1.00000000000000))*(x726)*(x731))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj5)*(x724)*(x730)))+(((sj2)*(x721)))+(((IkReal(-1.00000000000000))*(x725)*(x730)))+(((IkReal(-1.00000000000000))*(sj4)*(x737)))+(((r11)*(x733)))+(((IkReal(-1.00000000000000))*(r11)*(sj5)*(x726))));
evalcond[2]=((((IkReal(-0.125830000000000))*(x722)))+(((IkReal(0.0975200000000000))*(x725)*(x731)))+(((x735)*(x736)))+(((IkReal(0.0716400000000000))*(r00)*(x732)))+(((IkReal(0.0135000000000000))*(x721)))+(((IkReal(-1.00000000000000))*(x722)*(x728)))+(((IkReal(0.0716400000000000))*(cj6)*(x731)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0975200000000000))*(r01)*(x724)))+(((IkReal(-1.00000000000000))*(x726)*(x734)))+(((IkReal(0.0716400000000000))*(x735)))+(((cj4)*(x732)*(x734))));
evalcond[3]=((((IkReal(-0.125830000000000))*(x721)))+(((IkReal(0.0716400000000000))*(r10)*(x732)))+(((cj4)*(x727)*(x732)))+(((IkReal(-0.0135000000000000))*(x722)))+(((x736)*(x737)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x721)*(x728)))+(((sj5)*(x725)*(x729)))+(((IkReal(-1.00000000000000))*(x726)*(x727)))+(((r11)*(x739)))+(((x724)*(x729)))+(((IkReal(0.0716400000000000))*(x737))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(sj2);
dummyeval[0]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj2;
dummyeval[1]=cj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj2;
dummyeval[1]=sj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x740=((cj5)*(r22));
IkReal x741=((IkReal(0.0975200000000000))*(cj4));
IkReal x742=((IkReal(1.00000000000000))*(cj5));
IkReal x743=((r20)*(sj6));
IkReal x744=((IkReal(1.00000000000000))*(sj4));
IkReal x745=((cj5)*(r12));
IkReal x746=((IkReal(0.0975200000000000))*(sj4));
IkReal x747=((r11)*(sj6));
IkReal x748=((cj6)*(sj5));
IkReal x749=((cj6)*(r20));
IkReal x750=((cj4)*(r21));
IkReal x751=((r01)*(sj6));
IkReal x752=((r21)*(sj6));
IkReal x753=((cj5)*(r02));
IkReal x754=((IkReal(1.00000000000000))*(cj4)*(cj6));
IkReal x755=((r10)*(sj5)*(sj6));
IkReal x756=((r00)*(sj5)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x742)*(x743)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x742))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x744)*(x748)))+(((sj6)*(x750)))+(((IkReal(-1.00000000000000))*(cj4)*(x749)))+(((IkReal(-1.00000000000000))*(x740)*(x744)))+(((IkReal(-1.00000000000000))*(sj5)*(x743)*(x744))));
evalcond[3]=((((sj4)*(x752)))+(((IkReal(-1.00000000000000))*(x744)*(x749)))+(((cj4)*(sj5)*(x743)))+(((cj4)*(x740)))+(((x748)*(x750))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r01)*(x744)*(x748)))+(((IkReal(-1.00000000000000))*(x744)*(x756)))+(((IkReal(-1.00000000000000))*(r00)*(x754)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x742)))+(((cj4)*(x751))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x754)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x742)))+(((IkReal(-1.00000000000000))*(x744)*(x755)))+(((IkReal(-1.00000000000000))*(r11)*(x744)*(x748)))+(((cj4)*(x747))));
evalcond[6]=((((IkReal(0.0716400000000000))*(x740)))+(((IkReal(-1.00000000000000))*(x746)*(x749)))+(((x740)*(x741)))+(((x746)*(x752)))+(((IkReal(-1.00000000000000))*(pz)))+(((r21)*(x741)*(x748)))+(((sj5)*(x741)*(x743)))+(((IkReal(0.0716400000000000))*(sj5)*(x743)))+(((IkReal(0.0716400000000000))*(r21)*(x748))));
evalcond[7]=((((IkReal(0.0716400000000000))*(x756)))+(((IkReal(0.0716400000000000))*(x753)))+(((IkReal(0.0135000000000000))*(sj1)))+(((IkReal(0.0716400000000000))*(r01)*(x748)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x746)))+(((x746)*(x751)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x741)*(x748)))+(((x741)*(x756)))+(((x741)*(x753)))+(((IkReal(-0.241210000000000))*(cj1))));
evalcond[8]=((((IkReal(0.0716400000000000))*(x745)))+(((IkReal(-0.0135000000000000))*(cj1)))+(((IkReal(0.0716400000000000))*(x755)))+(((x746)*(x747)))+(((IkReal(-1.00000000000000))*(py)))+(((x741)*(x745)))+(((x741)*(x755)))+(((IkReal(-0.241210000000000))*(sj1)))+(((r11)*(x741)*(x748)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x746)))+(((IkReal(0.0716400000000000))*(r11)*(x748))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x757=((cj4)*(cj5));
IkReal x758=((cj1)*(cj6));
IkReal x759=((r10)*(sj4));
IkReal x760=((cj4)*(sj5));
IkReal x761=((IkReal(1.00000000000000))*(sj1));
IkReal x762=((IkReal(1.00000000000000))*(r11));
IkReal x763=((cj1)*(sj6));
IkReal x764=((IkReal(1.00000000000000))*(cj1)*(r12));
IkReal x765=((cj5)*(r10)*(sj6));
IkReal x766=((cj6)*(r11)*(x761));
if( IKabs(((gconst4)*(((((x758)*(x759)))+(((IkReal(-1.00000000000000))*(x758)*(x760)*(x762)))+(((r12)*(sj1)*(sj5)))+(((IkReal(-1.00000000000000))*(x757)*(x764)))+(((IkReal(-1.00000000000000))*(r10)*(x760)*(x763)))+(((IkReal(-1.00000000000000))*(sj4)*(x762)*(x763)))+(((IkReal(-1.00000000000000))*(cj5)*(x766)))+(((IkReal(-1.00000000000000))*(x761)*(x765))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj6)*(sj1)*(x759)))+(((cj5)*(r10)*(x763)))+(((IkReal(-1.00000000000000))*(r12)*(x757)*(x761)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6)*(x761)))+(((cj5)*(r11)*(x758)))+(((IkReal(-1.00000000000000))*(x760)*(x766)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x760)*(x761)))+(((IkReal(-1.00000000000000))*(sj5)*(x764))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst4)*(((((x758)*(x759)))+(((IkReal(-1.00000000000000))*(x758)*(x760)*(x762)))+(((r12)*(sj1)*(sj5)))+(((IkReal(-1.00000000000000))*(x757)*(x764)))+(((IkReal(-1.00000000000000))*(r10)*(x760)*(x763)))+(((IkReal(-1.00000000000000))*(sj4)*(x762)*(x763)))+(((IkReal(-1.00000000000000))*(cj5)*(x766)))+(((IkReal(-1.00000000000000))*(x761)*(x765)))))), ((gconst4)*(((((cj6)*(sj1)*(x759)))+(((cj5)*(r10)*(x763)))+(((IkReal(-1.00000000000000))*(r12)*(x757)*(x761)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6)*(x761)))+(((cj5)*(r11)*(x758)))+(((IkReal(-1.00000000000000))*(x760)*(x766)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x760)*(x761)))+(((IkReal(-1.00000000000000))*(sj5)*(x764)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x767=IKsin(j3);
IkReal x768=IKcos(j3);
IkReal x769=((IkReal(1.00000000000000))*(r00));
IkReal x770=((cj6)*(sj4));
IkReal x771=((cj4)*(cj5));
IkReal x772=((cj5)*(sj6));
IkReal x773=((cj4)*(sj5));
IkReal x774=((IkReal(1.00000000000000))*(r10));
IkReal x775=((sj4)*(sj6));
IkReal x776=((cj1)*(x768));
IkReal x777=((cj1)*(x767));
IkReal x778=((sj1)*(x768));
IkReal x779=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x780=((IkReal(1.00000000000000))*(sj1)*(x767));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x779)))+(((IkReal(-1.00000000000000))*(x780)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x772)*(x774)))+(x776));
evalcond[1]=((((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x779)))+(((IkReal(-1.00000000000000))*(x769)*(x772)))+(((IkReal(-1.00000000000000))*(x778)))+(((IkReal(-1.00000000000000))*(x777))));
evalcond[2]=((((cj6)*(r11)*(x773)))+(((r10)*(sj6)*(x773)))+(((r11)*(x775)))+(((r12)*(x771)))+(x777)+(x778)+(((IkReal(-1.00000000000000))*(x770)*(x774))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x780)))+(((r00)*(sj6)*(x773)))+(((cj6)*(r01)*(x773)))+(((IkReal(-1.00000000000000))*(x769)*(x770)))+(((r01)*(x775)))+(x776)+(((r02)*(x771))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x781=((sj1)*(sj5));
IkReal x782=((IkReal(1.00000000000000))*(cj5));
IkReal x783=((cj6)*(r11));
IkReal x784=((r00)*(sj6));
IkReal x785=((cj1)*(sj5));
IkReal x786=((cj6)*(r01));
IkReal x787=((cj1)*(cj5));
IkReal x788=((r10)*(sj6));
if( IKabs(((gconst3)*(((((r02)*(x785)))+(((IkReal(-1.00000000000000))*(sj1)*(x782)*(x788)))+(((IkReal(-1.00000000000000))*(sj1)*(x782)*(x783)))+(((IkReal(-1.00000000000000))*(cj1)*(x782)*(x786)))+(((IkReal(-1.00000000000000))*(cj1)*(x782)*(x784)))+(((r12)*(x781))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(r12)*(x785)))+(((x783)*(x787)))+(((x787)*(x788)))+(((r02)*(x781)))+(((IkReal(-1.00000000000000))*(sj1)*(x782)*(x784)))+(((IkReal(-1.00000000000000))*(sj1)*(x782)*(x786))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst3)*(((((r02)*(x785)))+(((IkReal(-1.00000000000000))*(sj1)*(x782)*(x788)))+(((IkReal(-1.00000000000000))*(sj1)*(x782)*(x783)))+(((IkReal(-1.00000000000000))*(cj1)*(x782)*(x786)))+(((IkReal(-1.00000000000000))*(cj1)*(x782)*(x784)))+(((r12)*(x781)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(r12)*(x785)))+(((x783)*(x787)))+(((x787)*(x788)))+(((r02)*(x781)))+(((IkReal(-1.00000000000000))*(sj1)*(x782)*(x784)))+(((IkReal(-1.00000000000000))*(sj1)*(x782)*(x786)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x789=IKsin(j3);
IkReal x790=IKcos(j3);
IkReal x791=((IkReal(1.00000000000000))*(r00));
IkReal x792=((cj6)*(sj4));
IkReal x793=((cj4)*(cj5));
IkReal x794=((cj5)*(sj6));
IkReal x795=((cj4)*(sj5));
IkReal x796=((IkReal(1.00000000000000))*(r10));
IkReal x797=((sj4)*(sj6));
IkReal x798=((cj1)*(x790));
IkReal x799=((cj1)*(x789));
IkReal x800=((sj1)*(x790));
IkReal x801=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x802=((IkReal(1.00000000000000))*(sj1)*(x789));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x801)))+(((IkReal(-1.00000000000000))*(x794)*(x796)))+(((r12)*(sj5)))+(x798)+(((IkReal(-1.00000000000000))*(x802))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x800)))+(((IkReal(-1.00000000000000))*(r01)*(x801)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x791)*(x794)))+(((IkReal(-1.00000000000000))*(x799))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x792)*(x796)))+(((r10)*(sj6)*(x795)))+(((cj6)*(r11)*(x795)))+(((r11)*(x797)))+(x799)+(x800)+(((r12)*(x793))));
evalcond[3]=((((r01)*(x797)))+(((r00)*(sj6)*(x795)))+(((IkReal(-1.00000000000000))*(x791)*(x792)))+(((r02)*(x793)))+(x798)+(((IkReal(-1.00000000000000))*(x802)))+(((cj6)*(r01)*(x795))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x803=((cj5)*(r22));
IkReal x804=((IkReal(0.0975200000000000))*(cj4));
IkReal x805=((IkReal(1.00000000000000))*(cj5));
IkReal x806=((r20)*(sj6));
IkReal x807=((IkReal(1.00000000000000))*(sj4));
IkReal x808=((cj5)*(r12));
IkReal x809=((IkReal(0.0975200000000000))*(sj4));
IkReal x810=((r11)*(sj6));
IkReal x811=((cj6)*(sj5));
IkReal x812=((cj6)*(r20));
IkReal x813=((cj4)*(r21));
IkReal x814=((r01)*(sj6));
IkReal x815=((r21)*(sj6));
IkReal x816=((cj5)*(r02));
IkReal x817=((IkReal(1.00000000000000))*(cj4)*(cj6));
IkReal x818=((r10)*(sj5)*(sj6));
IkReal x819=((r00)*(sj5)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x805)))+(((IkReal(-1.00000000000000))*(x805)*(x806)))+(((r22)*(sj5))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x807)*(x811)))+(((IkReal(-1.00000000000000))*(sj5)*(x806)*(x807)))+(((IkReal(-1.00000000000000))*(cj4)*(x812)))+(((sj6)*(x813)))+(((IkReal(-1.00000000000000))*(x803)*(x807))));
evalcond[3]=((((sj4)*(x815)))+(((cj4)*(x803)))+(((x811)*(x813)))+(((IkReal(-1.00000000000000))*(x807)*(x812)))+(((cj4)*(sj5)*(x806))));
evalcond[4]=((((cj4)*(x814)))+(((IkReal(-1.00000000000000))*(r01)*(x807)*(x811)))+(((IkReal(-1.00000000000000))*(x807)*(x819)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x805)))+(((IkReal(-1.00000000000000))*(r00)*(x817))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x817)))+(((cj4)*(x810)))+(((IkReal(-1.00000000000000))*(r11)*(x807)*(x811)))+(((IkReal(-1.00000000000000))*(x807)*(x818)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x805))));
evalcond[6]=((((x809)*(x815)))+(((IkReal(0.0716400000000000))*(r21)*(x811)))+(((IkReal(-1.00000000000000))*(x809)*(x812)))+(((x803)*(x804)))+(((r21)*(x804)*(x811)))+(((sj5)*(x804)*(x806)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(x803)))+(((IkReal(0.0716400000000000))*(sj5)*(x806))));
evalcond[7]=((((IkReal(0.0716400000000000))*(x819)))+(((IkReal(0.0716400000000000))*(x816)))+(((x809)*(x814)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x809)))+(((IkReal(0.0135000000000000))*(sj1)))+(((r01)*(x804)*(x811)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.0104500000000000))*(cj1)))+(((x804)*(x816)))+(((x804)*(x819)))+(((IkReal(0.0716400000000000))*(r01)*(x811))));
evalcond[8]=((((r11)*(x804)*(x811)))+(((IkReal(0.0716400000000000))*(r11)*(x811)))+(((x804)*(x808)))+(((IkReal(-0.0135000000000000))*(cj1)))+(((IkReal(0.0716400000000000))*(x818)))+(((x809)*(x810)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x809)))+(((IkReal(0.0716400000000000))*(x808)))+(((x804)*(x818)))+(((IkReal(-0.0104500000000000))*(sj1))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x820=((IkReal(1.00000000000000))*(cj6));
IkReal x821=((cj5)*(sj1));
IkReal x822=((cj1)*(cj5));
IkReal x823=((cj4)*(r12));
IkReal x824=((r10)*(sj4));
IkReal x825=((r10)*(sj6));
IkReal x826=((cj1)*(sj5));
IkReal x827=((cj4)*(r11));
IkReal x828=((IkReal(1.00000000000000))*(sj1));
IkReal x829=((sj1)*(sj5));
IkReal x830=((r11)*(sj4)*(sj6));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(cj1)*(x820)*(x824)))+(((r12)*(x829)))+(((cj6)*(x826)*(x827)))+(((x822)*(x823)))+(((IkReal(-1.00000000000000))*(x821)*(x825)))+(((cj4)*(x825)*(x826)))+(((IkReal(-1.00000000000000))*(r11)*(x820)*(x821)))+(((cj1)*(x830))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(x820)*(x827)*(x829)))+(((r12)*(x826)))+(((IkReal(-1.00000000000000))*(x828)*(x830)))+(((IkReal(-1.00000000000000))*(x822)*(x825)))+(((cj6)*(sj1)*(x824)))+(((IkReal(-1.00000000000000))*(x821)*(x823)))+(((IkReal(-1.00000000000000))*(cj4)*(sj5)*(x825)*(x828)))+(((IkReal(-1.00000000000000))*(r11)*(x820)*(x822))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(cj1)*(x820)*(x824)))+(((r12)*(x829)))+(((cj6)*(x826)*(x827)))+(((x822)*(x823)))+(((IkReal(-1.00000000000000))*(x821)*(x825)))+(((cj4)*(x825)*(x826)))+(((IkReal(-1.00000000000000))*(r11)*(x820)*(x821)))+(((cj1)*(x830)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(x820)*(x827)*(x829)))+(((r12)*(x826)))+(((IkReal(-1.00000000000000))*(x828)*(x830)))+(((IkReal(-1.00000000000000))*(x822)*(x825)))+(((cj6)*(sj1)*(x824)))+(((IkReal(-1.00000000000000))*(x821)*(x823)))+(((IkReal(-1.00000000000000))*(cj4)*(sj5)*(x825)*(x828)))+(((IkReal(-1.00000000000000))*(r11)*(x820)*(x822)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x831=IKsin(j3);
IkReal x832=IKcos(j3);
IkReal x833=((IkReal(1.00000000000000))*(r00));
IkReal x834=((cj5)*(sj6));
IkReal x835=((cj6)*(sj4));
IkReal x836=((cj4)*(cj5));
IkReal x837=((cj4)*(sj5));
IkReal x838=((IkReal(1.00000000000000))*(r10));
IkReal x839=((sj4)*(sj6));
IkReal x840=((cj1)*(x831));
IkReal x841=((cj1)*(x832));
IkReal x842=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x843=((sj1)*(x831));
IkReal x844=((IkReal(1.00000000000000))*(sj1)*(x832));
evalcond[0]=((((IkReal(-1.00000000000000))*(x834)*(x838)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x842)))+(x841)+(x843));
evalcond[1]=((((IkReal(-1.00000000000000))*(x833)*(x834)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x844)))+(((IkReal(-1.00000000000000))*(r01)*(x842)))+(x840));
evalcond[2]=((((r10)*(sj6)*(x837)))+(((IkReal(-1.00000000000000))*(x835)*(x838)))+(((IkReal(-1.00000000000000))*(x844)))+(((cj6)*(r11)*(x837)))+(((r12)*(x836)))+(((r11)*(x839)))+(x840));
evalcond[3]=((((r02)*(x836)))+(((IkReal(-1.00000000000000))*(x833)*(x835)))+(((cj6)*(r01)*(x837)))+(((r01)*(x839)))+(((r00)*(sj6)*(x837)))+(((IkReal(-1.00000000000000))*(x841)))+(((IkReal(-1.00000000000000))*(x843))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x845=((IkReal(1.00000000000000))*(cj5));
IkReal x846=((cj6)*(sj1));
IkReal x847=((cj1)*(sj6));
IkReal x848=((sj1)*(sj5));
IkReal x849=((sj1)*(sj6));
IkReal x850=((cj1)*(cj6));
IkReal x851=((cj1)*(sj5));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r01)*(x845)*(x850)))+(((IkReal(-1.00000000000000))*(r11)*(x845)*(x846)))+(((IkReal(-1.00000000000000))*(r00)*(x845)*(x847)))+(((r12)*(x848)))+(((r02)*(x851)))+(((IkReal(-1.00000000000000))*(r10)*(x845)*(x849))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((r12)*(x851)))+(((IkReal(-1.00000000000000))*(r02)*(x848)))+(((cj5)*(r01)*(x846)))+(((cj5)*(r00)*(x849)))+(((IkReal(-1.00000000000000))*(r11)*(x845)*(x850)))+(((IkReal(-1.00000000000000))*(r10)*(x845)*(x847))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(r01)*(x845)*(x850)))+(((IkReal(-1.00000000000000))*(r11)*(x845)*(x846)))+(((IkReal(-1.00000000000000))*(r00)*(x845)*(x847)))+(((r12)*(x848)))+(((r02)*(x851)))+(((IkReal(-1.00000000000000))*(r10)*(x845)*(x849)))))), ((gconst5)*(((((r12)*(x851)))+(((IkReal(-1.00000000000000))*(r02)*(x848)))+(((cj5)*(r01)*(x846)))+(((cj5)*(r00)*(x849)))+(((IkReal(-1.00000000000000))*(r11)*(x845)*(x850)))+(((IkReal(-1.00000000000000))*(r10)*(x845)*(x847)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x852=IKsin(j3);
IkReal x853=IKcos(j3);
IkReal x854=((IkReal(1.00000000000000))*(r00));
IkReal x855=((cj5)*(sj6));
IkReal x856=((cj6)*(sj4));
IkReal x857=((cj4)*(cj5));
IkReal x858=((cj4)*(sj5));
IkReal x859=((IkReal(1.00000000000000))*(r10));
IkReal x860=((sj4)*(sj6));
IkReal x861=((cj1)*(x852));
IkReal x862=((cj1)*(x853));
IkReal x863=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x864=((sj1)*(x852));
IkReal x865=((IkReal(1.00000000000000))*(sj1)*(x853));
evalcond[0]=((((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x855)*(x859)))+(x864)+(x862)+(((IkReal(-1.00000000000000))*(r11)*(x863))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x865)))+(((IkReal(-1.00000000000000))*(r01)*(x863)))+(((r02)*(sj5)))+(x861)+(((IkReal(-1.00000000000000))*(x854)*(x855))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x865)))+(((r12)*(x857)))+(((r11)*(x860)))+(((cj6)*(r11)*(x858)))+(((IkReal(-1.00000000000000))*(x856)*(x859)))+(((r10)*(sj6)*(x858)))+(x861));
evalcond[3]=((((r00)*(sj6)*(x858)))+(((r01)*(x860)))+(((IkReal(-1.00000000000000))*(x862)))+(((IkReal(-1.00000000000000))*(x864)))+(((r02)*(x857)))+(((IkReal(-1.00000000000000))*(x854)*(x856)))+(((cj6)*(r01)*(x858))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x866=((IkReal(1.00000000000000))*(cj6));
IkReal x867=((cj4)*(r00));
IkReal x868=((cj5)*(r22));
IkReal x869=((IkReal(0.0975200000000000))*(cj4));
IkReal x870=((IkReal(1.00000000000000))*(sj4));
IkReal x871=((cj5)*(r02));
IkReal x872=((cj5)*(r12));
IkReal x873=((r11)*(sj4));
IkReal x874=((IkReal(0.0975200000000000))*(sj6));
IkReal x875=((sj4)*(sj5));
IkReal x876=((cj6)*(sj5));
IkReal x877=((cj4)*(sj6));
IkReal x878=((sj5)*(sj6));
IkReal x879=((IkReal(0.0716400000000000))*(x876));
IkReal x880=((r10)*(x878));
IkReal x881=((IkReal(0.0975200000000000))*(cj6)*(sj4));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((cj2)+(((r21)*(x877)))+(((IkReal(-1.00000000000000))*(x868)*(x870)))+(((IkReal(-1.00000000000000))*(cj4)*(r20)*(x866)))+(((IkReal(-1.00000000000000))*(r20)*(x870)*(x878)))+(((IkReal(-1.00000000000000))*(r21)*(x866)*(x875))));
evalcond[2]=((((r01)*(x877)))+(sj2)+(((IkReal(-1.00000000000000))*(r01)*(x866)*(x875)))+(((IkReal(-1.00000000000000))*(x866)*(x867)))+(((IkReal(-1.00000000000000))*(x870)*(x871)))+(((IkReal(-1.00000000000000))*(r00)*(x870)*(x878))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x870)*(x880)))+(((r11)*(x877)))+(((IkReal(-1.00000000000000))*(cj4)*(r10)*(x866)))+(((IkReal(-1.00000000000000))*(sj5)*(x866)*(x873)))+(((IkReal(-1.00000000000000))*(x870)*(x872))));
evalcond[4]=((((x868)*(x869)))+(((IkReal(0.0716400000000000))*(r20)*(x878)))+(((r20)*(x869)*(x878)))+(((r21)*(x879)))+(((r21)*(x869)*(x876)))+(((r21)*(sj4)*(x874)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(x868)))+(((IkReal(0.115380000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(r20)*(x881))));
evalcond[5]=((IkReal(-0.125830000000000))+(((r01)*(x879)))+(((r01)*(x869)*(x876)))+(((IkReal(0.0716400000000000))*(r00)*(x878)))+(((IkReal(-1.00000000000000))*(px)))+(((sj5)*(x867)*(x874)))+(((IkReal(-0.115380000000000))*(cj2)))+(((x869)*(x871)))+(((IkReal(0.0716400000000000))*(x871)))+(((IkReal(-1.00000000000000))*(r00)*(x881)))+(((r01)*(sj4)*(x874))));
evalcond[6]=((IkReal(-0.0135000000000000))+(((IkReal(0.0716400000000000))*(x880)))+(((r11)*(x879)))+(((x873)*(x874)))+(((IkReal(-1.00000000000000))*(py)))+(((x869)*(x880)))+(((r11)*(x869)*(x876)))+(((IkReal(-1.00000000000000))*(r10)*(x881)))+(((x869)*(x872)))+(((IkReal(0.0716400000000000))*(x872))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x882=((IkReal(1.00000000000000))*(sj5));
IkReal x883=((r10)*(sj6));
IkReal x884=((cj6)*(r11));
if( IKabs(((((IkReal(-1.00000000000000))*(cj4)*(x882)*(x883)))+(((IkReal(-1.00000000000000))*(cj4)*(x882)*(x884)))+(((cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r12)*(x882)))+(((cj5)*(x884)))+(((cj5)*(x883))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj4)*(x882)*(x883)))+(((IkReal(-1.00000000000000))*(cj4)*(x882)*(x884)))+(((cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6)))))+IKsqr(((((IkReal(-1.00000000000000))*(r12)*(x882)))+(((cj5)*(x884)))+(((cj5)*(x883)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj4)*(x882)*(x883)))+(((IkReal(-1.00000000000000))*(cj4)*(x882)*(x884)))+(((cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(sj6)))), ((((IkReal(-1.00000000000000))*(r12)*(x882)))+(((cj5)*(x884)))+(((cj5)*(x883)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x885=IKsin(j3);
IkReal x886=IKcos(j3);
IkReal x887=((IkReal(1.00000000000000))*(r00));
IkReal x888=((cj5)*(sj6));
IkReal x889=((cj6)*(sj4));
IkReal x890=((IkReal(1.00000000000000))*(r10));
IkReal x891=((cj4)*(cj5));
IkReal x892=((IkReal(1.00000000000000))*(r20));
IkReal x893=((sj4)*(sj6));
IkReal x894=((cj4)*(sj5)*(sj6));
IkReal x895=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x896=((cj4)*(cj6)*(sj5));
evalcond[0]=((((r22)*(sj5)))+(((sj2)*(x885)))+(((IkReal(-1.00000000000000))*(x888)*(x892)))+(((IkReal(-1.00000000000000))*(r21)*(x895))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x895)))+(((IkReal(-1.00000000000000))*(x888)*(x890)))+(((r12)*(sj5)))+(x886));
evalcond[2]=((((IkReal(-1.00000000000000))*(x887)*(x888)))+(((IkReal(-1.00000000000000))*(cj2)*(x885)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x895))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x886)))+(((r20)*(x894)))+(((IkReal(-1.00000000000000))*(x889)*(x892)))+(((r21)*(x893)))+(((r21)*(x896)))+(((r22)*(x891))));
evalcond[4]=((((r11)*(x896)))+(((r11)*(x893)))+(((r10)*(x894)))+(((IkReal(-1.00000000000000))*(x889)*(x890)))+(x885)+(((r12)*(x891))));
evalcond[5]=((((r02)*(x891)))+(((IkReal(-1.00000000000000))*(x887)*(x889)))+(((cj2)*(x886)))+(((r01)*(x893)))+(((r01)*(x896)))+(((r00)*(x894))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x897=((IkReal(1.00000000000000))*(cj6));
IkReal x898=((cj4)*(r00));
IkReal x899=((cj5)*(r22));
IkReal x900=((IkReal(0.0975200000000000))*(cj4));
IkReal x901=((IkReal(1.00000000000000))*(sj4));
IkReal x902=((cj5)*(r02));
IkReal x903=((cj5)*(r12));
IkReal x904=((r11)*(sj4));
IkReal x905=((IkReal(0.0975200000000000))*(sj6));
IkReal x906=((sj4)*(sj5));
IkReal x907=((cj6)*(sj5));
IkReal x908=((cj4)*(sj6));
IkReal x909=((sj5)*(sj6));
IkReal x910=((IkReal(0.0716400000000000))*(x907));
IkReal x911=((r10)*(x909));
IkReal x912=((IkReal(0.0975200000000000))*(cj6)*(sj4));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((r21)*(x908)))+(cj2)+(((IkReal(-1.00000000000000))*(r21)*(x897)*(x906)))+(((IkReal(-1.00000000000000))*(cj4)*(r20)*(x897)))+(((IkReal(-1.00000000000000))*(r20)*(x901)*(x909)))+(((IkReal(-1.00000000000000))*(x899)*(x901))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj2)))+(((r01)*(x908)))+(((IkReal(-1.00000000000000))*(r00)*(x901)*(x909)))+(((IkReal(-1.00000000000000))*(r01)*(x897)*(x906)))+(((IkReal(-1.00000000000000))*(x897)*(x898)))+(((IkReal(-1.00000000000000))*(x901)*(x902))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r10)*(x897)))+(((r11)*(x908)))+(((IkReal(-1.00000000000000))*(sj5)*(x897)*(x904)))+(((IkReal(-1.00000000000000))*(x901)*(x903)))+(((IkReal(-1.00000000000000))*(x901)*(x911))));
evalcond[4]=((((r21)*(x900)*(x907)))+(((IkReal(0.0716400000000000))*(x899)))+(((IkReal(-1.00000000000000))*(r20)*(x912)))+(((IkReal(-1.00000000000000))*(pz)))+(((x899)*(x900)))+(((r20)*(x900)*(x909)))+(((IkReal(0.0716400000000000))*(r20)*(x909)))+(((IkReal(0.115380000000000))*(sj2)))+(((r21)*(x910)))+(((r21)*(sj4)*(x905))));
evalcond[5]=((IkReal(0.125830000000000))+(((r01)*(sj4)*(x905)))+(((IkReal(0.0716400000000000))*(r00)*(x909)))+(((IkReal(-1.00000000000000))*(r00)*(x912)))+(((x900)*(x902)))+(((r01)*(x900)*(x907)))+(((sj5)*(x898)*(x905)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0716400000000000))*(x902)))+(((r01)*(x910)))+(((IkReal(0.115380000000000))*(cj2))));
evalcond[6]=((IkReal(0.0135000000000000))+(((r11)*(x900)*(x907)))+(((x900)*(x903)))+(((r11)*(x910)))+(((IkReal(-1.00000000000000))*(py)))+(((x900)*(x911)))+(((IkReal(0.0716400000000000))*(x903)))+(((IkReal(-1.00000000000000))*(r10)*(x912)))+(((IkReal(0.0716400000000000))*(x911)))+(((x904)*(x905))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x913=((cj4)*(sj5));
IkReal x914=((cj6)*(r11));
IkReal x915=((r10)*(sj6));
IkReal x916=((IkReal(1.00000000000000))*(cj5));
if( IKabs(((((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj4)))+(((cj4)*(cj5)*(r12)))+(((r11)*(sj4)*(sj6)))+(((x913)*(x914)))+(((x913)*(x915))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x914)*(x916)))+(((IkReal(-1.00000000000000))*(x915)*(x916))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj4)))+(((cj4)*(cj5)*(r12)))+(((r11)*(sj4)*(sj6)))+(((x913)*(x914)))+(((x913)*(x915)))))+IKsqr(((((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x914)*(x916)))+(((IkReal(-1.00000000000000))*(x915)*(x916)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj4)))+(((cj4)*(cj5)*(r12)))+(((r11)*(sj4)*(sj6)))+(((x913)*(x914)))+(((x913)*(x915)))), ((((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x914)*(x916)))+(((IkReal(-1.00000000000000))*(x915)*(x916)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x917=IKsin(j3);
IkReal x918=IKcos(j3);
IkReal x919=((IkReal(1.00000000000000))*(r00));
IkReal x920=((cj5)*(sj6));
IkReal x921=((cj6)*(sj4));
IkReal x922=((IkReal(1.00000000000000))*(r10));
IkReal x923=((cj4)*(cj5));
IkReal x924=((IkReal(1.00000000000000))*(r20));
IkReal x925=((sj4)*(sj6));
IkReal x926=((IkReal(1.00000000000000))*(x918));
IkReal x927=((cj4)*(sj5)*(sj6));
IkReal x928=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x929=((cj4)*(cj6)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x928)))+(((sj2)*(x917)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x920)*(x924))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x926)))+(((IkReal(-1.00000000000000))*(r11)*(x928)))+(((IkReal(-1.00000000000000))*(x920)*(x922)))+(((r12)*(sj5))));
evalcond[2]=((((cj2)*(x917)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x919)*(x920)))+(((IkReal(-1.00000000000000))*(r01)*(x928))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x926)))+(((r22)*(x923)))+(((r21)*(x929)))+(((r21)*(x925)))+(((IkReal(-1.00000000000000))*(x921)*(x924)))+(((r20)*(x927))));
evalcond[4]=((((r10)*(x927)))+(((r11)*(x925)))+(((r11)*(x929)))+(((IkReal(-1.00000000000000))*(x917)))+(((r12)*(x923)))+(((IkReal(-1.00000000000000))*(x921)*(x922))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj2)*(x926)))+(((IkReal(-1.00000000000000))*(x919)*(x921)))+(((r01)*(x925)))+(((r01)*(x929)))+(((r00)*(x927)))+(((r02)*(x923))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x930=((IkReal(1.00000000000000))*(cj6));
IkReal x931=((cj4)*(r00));
IkReal x932=((cj5)*(r22));
IkReal x933=((IkReal(0.0975200000000000))*(cj4));
IkReal x934=((IkReal(1.00000000000000))*(sj4));
IkReal x935=((cj5)*(r02));
IkReal x936=((cj5)*(r12));
IkReal x937=((r11)*(sj4));
IkReal x938=((IkReal(0.0975200000000000))*(sj6));
IkReal x939=((sj4)*(sj5));
IkReal x940=((cj6)*(sj5));
IkReal x941=((cj4)*(sj6));
IkReal x942=((sj5)*(sj6));
IkReal x943=((IkReal(0.0716400000000000))*(x940));
IkReal x944=((r10)*(x942));
IkReal x945=((IkReal(0.0975200000000000))*(cj6)*(sj4));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x930)*(x939)))+(((r21)*(x941)))+(((IkReal(-1.00000000000000))*(r20)*(x934)*(x942)))+(cj2)+(((IkReal(-1.00000000000000))*(cj4)*(r20)*(x930)))+(((IkReal(-1.00000000000000))*(x932)*(x934))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x934)*(x942)))+(((IkReal(-1.00000000000000))*(x930)*(x931)))+(((IkReal(-1.00000000000000))*(x934)*(x935)))+(((r01)*(x941)))+(((IkReal(-1.00000000000000))*(r01)*(x930)*(x939))));
evalcond[3]=((sj2)+(((IkReal(-1.00000000000000))*(x934)*(x936)))+(((IkReal(-1.00000000000000))*(cj4)*(r10)*(x930)))+(((r11)*(x941)))+(((IkReal(-1.00000000000000))*(sj5)*(x930)*(x937)))+(((IkReal(-1.00000000000000))*(x934)*(x944))));
evalcond[4]=((((r21)*(x943)))+(((r21)*(x933)*(x940)))+(((IkReal(-1.00000000000000))*(r20)*(x945)))+(((IkReal(0.0716400000000000))*(x932)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(r20)*(x942)))+(((r21)*(sj4)*(x938)))+(((r20)*(x933)*(x942)))+(((IkReal(0.115380000000000))*(sj2)))+(((x932)*(x933))));
evalcond[5]=((IkReal(0.0135000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x945)))+(((r01)*(x933)*(x940)))+(((r01)*(sj4)*(x938)))+(((IkReal(0.0716400000000000))*(x935)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x943)))+(((IkReal(0.0716400000000000))*(r00)*(x942)))+(((x933)*(x935)))+(((sj5)*(x931)*(x938))));
evalcond[6]=((IkReal(-0.125830000000000))+(((r11)*(x933)*(x940)))+(((x933)*(x944)))+(((x937)*(x938)))+(((IkReal(0.0716400000000000))*(x936)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x943)))+(((IkReal(-0.115380000000000))*(cj2)))+(((IkReal(0.0716400000000000))*(x944)))+(((IkReal(-1.00000000000000))*(r10)*(x945)))+(((x933)*(x936))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x946=((r00)*(sj6));
IkReal x947=((cj4)*(sj5));
IkReal x948=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((((cj6)*(r01)*(x947)))+(((x946)*(x947)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x948))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x948)))+(((IkReal(-1.00000000000000))*(cj5)*(x946)))+(((r02)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj6)*(r01)*(x947)))+(((x946)*(x947)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x948)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x948)))+(((IkReal(-1.00000000000000))*(cj5)*(x946)))+(((r02)*(sj5)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj6)*(r01)*(x947)))+(((x946)*(x947)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x948)))), ((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x948)))+(((IkReal(-1.00000000000000))*(cj5)*(x946)))+(((r02)*(sj5)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x949=IKsin(j3);
IkReal x950=IKcos(j3);
IkReal x951=((IkReal(1.00000000000000))*(r00));
IkReal x952=((cj5)*(sj6));
IkReal x953=((cj6)*(sj4));
IkReal x954=((IkReal(1.00000000000000))*(r10));
IkReal x955=((cj4)*(cj5));
IkReal x956=((IkReal(1.00000000000000))*(r20));
IkReal x957=((sj4)*(sj6));
IkReal x958=((IkReal(1.00000000000000))*(x950));
IkReal x959=((cj4)*(sj5)*(sj6));
IkReal x960=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x961=((cj4)*(cj6)*(sj5));
IkReal x962=((IkReal(1.00000000000000))*(x949));
evalcond[0]=((((sj2)*(x949)))+(((IkReal(-1.00000000000000))*(r21)*(x960)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x952)*(x956))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj2)*(x962)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x960)))+(((IkReal(-1.00000000000000))*(x952)*(x954))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x960)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x951)*(x952)))+(((IkReal(-1.00000000000000))*(x958))));
evalcond[3]=((((r22)*(x955)))+(((r21)*(x957)))+(((r21)*(x961)))+(((IkReal(-1.00000000000000))*(x953)*(x956)))+(((r20)*(x959)))+(((IkReal(-1.00000000000000))*(sj2)*(x958))));
evalcond[4]=((((cj2)*(x950)))+(((r11)*(x961)))+(((IkReal(-1.00000000000000))*(x953)*(x954)))+(((r11)*(x957)))+(((r12)*(x955)))+(((r10)*(x959))));
evalcond[5]=((((r01)*(x957)))+(((r01)*(x961)))+(((r00)*(x959)))+(((r02)*(x955)))+(((IkReal(-1.00000000000000))*(x951)*(x953)))+(((IkReal(-1.00000000000000))*(x962))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x963=((IkReal(1.00000000000000))*(cj6));
IkReal x964=((cj4)*(r00));
IkReal x965=((cj5)*(r22));
IkReal x966=((IkReal(0.0975200000000000))*(cj4));
IkReal x967=((IkReal(1.00000000000000))*(sj4));
IkReal x968=((cj5)*(r02));
IkReal x969=((cj5)*(r12));
IkReal x970=((r11)*(sj4));
IkReal x971=((IkReal(0.0975200000000000))*(sj6));
IkReal x972=((sj4)*(sj5));
IkReal x973=((cj6)*(sj5));
IkReal x974=((cj4)*(sj6));
IkReal x975=((sj5)*(sj6));
IkReal x976=((IkReal(0.0716400000000000))*(x973));
IkReal x977=((r10)*(x975));
IkReal x978=((IkReal(0.0975200000000000))*(cj6)*(sj4));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((cj2)+(((IkReal(-1.00000000000000))*(r21)*(x963)*(x972)))+(((IkReal(-1.00000000000000))*(x965)*(x967)))+(((IkReal(-1.00000000000000))*(cj4)*(r20)*(x963)))+(((r21)*(x974)))+(((IkReal(-1.00000000000000))*(r20)*(x967)*(x975))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x963)*(x964)))+(((IkReal(-1.00000000000000))*(x967)*(x968)))+(((IkReal(-1.00000000000000))*(r00)*(x967)*(x975)))+(((r01)*(x974)))+(((IkReal(-1.00000000000000))*(r01)*(x963)*(x972))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x967)*(x969)))+(((IkReal(-1.00000000000000))*(cj4)*(r10)*(x963)))+(((IkReal(-1.00000000000000))*(x967)*(x977)))+(((IkReal(-1.00000000000000))*(sj5)*(x963)*(x970)))+(((r11)*(x974))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x978)))+(((r20)*(x966)*(x975)))+(((IkReal(0.0716400000000000))*(x965)))+(((r21)*(x976)))+(((IkReal(-1.00000000000000))*(pz)))+(((x965)*(x966)))+(((IkReal(0.0716400000000000))*(r20)*(x975)))+(((IkReal(0.115380000000000))*(sj2)))+(((r21)*(sj4)*(x971)))+(((r21)*(x966)*(x973))));
evalcond[5]=((IkReal(-0.0135000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x978)))+(((IkReal(0.0716400000000000))*(x968)))+(((r01)*(x976)))+(((r01)*(x966)*(x973)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0716400000000000))*(r00)*(x975)))+(((x966)*(x968)))+(((r01)*(sj4)*(x971)))+(((sj5)*(x964)*(x971))));
evalcond[6]=((IkReal(0.125830000000000))+(((r11)*(x966)*(x973)))+(((IkReal(0.0716400000000000))*(x969)))+(((IkReal(0.0716400000000000))*(x977)))+(((IkReal(-1.00000000000000))*(py)))+(((x966)*(x977)))+(((x966)*(x969)))+(((x970)*(x971)))+(((r11)*(x976)))+(((IkReal(0.115380000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(r10)*(x978))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x979=((r00)*(sj6));
IkReal x980=((cj6)*(r01));
IkReal x981=((IkReal(1.00000000000000))*(r02));
IkReal x982=((IkReal(1.00000000000000))*(cj4)*(sj5));
if( IKabs(((((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x981)))+(((cj6)*(r00)*(sj4)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(x980)*(x982)))+(((IkReal(-1.00000000000000))*(x979)*(x982))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj5)*(x980)))+(((cj5)*(x979)))+(((IkReal(-1.00000000000000))*(sj5)*(x981))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x981)))+(((cj6)*(r00)*(sj4)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(x980)*(x982)))+(((IkReal(-1.00000000000000))*(x979)*(x982)))))+IKsqr(((((cj5)*(x980)))+(((cj5)*(x979)))+(((IkReal(-1.00000000000000))*(sj5)*(x981)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x981)))+(((cj6)*(r00)*(sj4)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(x980)*(x982)))+(((IkReal(-1.00000000000000))*(x979)*(x982)))), ((((cj5)*(x980)))+(((cj5)*(x979)))+(((IkReal(-1.00000000000000))*(sj5)*(x981)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x983=IKsin(j3);
IkReal x984=IKcos(j3);
IkReal x985=((IkReal(1.00000000000000))*(r00));
IkReal x986=((cj5)*(sj6));
IkReal x987=((cj6)*(sj4));
IkReal x988=((IkReal(1.00000000000000))*(r10));
IkReal x989=((cj4)*(cj5));
IkReal x990=((IkReal(1.00000000000000))*(r20));
IkReal x991=((sj4)*(sj6));
IkReal x992=((IkReal(1.00000000000000))*(x984));
IkReal x993=((cj4)*(sj5)*(sj6));
IkReal x994=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x995=((cj4)*(cj6)*(sj5));
evalcond[0]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r21)*(x994)))+(((IkReal(-1.00000000000000))*(x986)*(x990)))+(((sj2)*(x983))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x994)))+(((IkReal(-1.00000000000000))*(x986)*(x988)))+(((r12)*(sj5)))+(((cj2)*(x983))));
evalcond[2]=((((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x994)))+(x984)+(((IkReal(-1.00000000000000))*(x985)*(x986))));
evalcond[3]=((((r22)*(x989)))+(((r20)*(x993)))+(((IkReal(-1.00000000000000))*(sj2)*(x992)))+(((r21)*(x995)))+(((r21)*(x991)))+(((IkReal(-1.00000000000000))*(x987)*(x990))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj2)*(x992)))+(((r12)*(x989)))+(((r10)*(x993)))+(((IkReal(-1.00000000000000))*(x987)*(x988)))+(((r11)*(x991)))+(((r11)*(x995))));
evalcond[5]=((((r01)*(x991)))+(((r01)*(x995)))+(((r00)*(x993)))+(x983)+(((r02)*(x989)))+(((IkReal(-1.00000000000000))*(x985)*(x987))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x996=((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30);
IkReal x997=((r22)*(sj5));
IkReal x998=((cj5)*(cj6)*(r21));
IkReal x999=((IkReal(1.00000000000000))*(cj1)*(cj2));
IkReal x1000=((IkReal(1.00000000000000))*(cj5)*(sj2));
IkReal x1001=((cj5)*(r20)*(sj6));
if( IKabs(((x996)*(((((IkReal(-1.00000000000000))*(x997)))+(x1001)+(x998))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x996)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x997)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1000)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1000)))+(((IkReal(-1.00000000000000))*(x1001)*(x999)))+(((IkReal(-1.00000000000000))*(x998)*(x999)))+(((r02)*(sj2)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x996)*(((((IkReal(-1.00000000000000))*(x997)))+(x1001)+(x998)))))+IKsqr(((x996)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x997)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1000)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1000)))+(((IkReal(-1.00000000000000))*(x1001)*(x999)))+(((IkReal(-1.00000000000000))*(x998)*(x999)))+(((r02)*(sj2)*(sj5)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x996)*(((((IkReal(-1.00000000000000))*(x997)))+(x1001)+(x998)))), ((x996)*(((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x997)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1000)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1000)))+(((IkReal(-1.00000000000000))*(x1001)*(x999)))+(((IkReal(-1.00000000000000))*(x998)*(x999)))+(((r02)*(sj2)*(sj5)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1002=IKsin(j3);
IkReal x1003=IKcos(j3);
IkReal x1004=((IkReal(1.00000000000000))*(r00));
IkReal x1005=((cj5)*(sj6));
IkReal x1006=((cj6)*(sj4));
IkReal x1007=((IkReal(1.00000000000000))*(r10));
IkReal x1008=((cj4)*(cj5));
IkReal x1009=((IkReal(1.00000000000000))*(cj2));
IkReal x1010=((IkReal(1.00000000000000))*(r20));
IkReal x1011=((sj4)*(sj6));
IkReal x1012=((IkReal(1.00000000000000))*(x1003));
IkReal x1013=((cj1)*(x1003));
IkReal x1014=((cj1)*(x1002));
IkReal x1015=((cj4)*(sj5)*(sj6));
IkReal x1016=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x1017=((sj1)*(x1002));
IkReal x1018=((cj4)*(cj6)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x1016)))+(((IkReal(-1.00000000000000))*(x1005)*(x1010)))+(((r22)*(sj5)))+(((sj2)*(x1002))));
evalcond[1]=((x1013)+(((IkReal(-1.00000000000000))*(x1009)*(x1017)))+(((IkReal(-1.00000000000000))*(x1005)*(x1007)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1016))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1009)*(x1014)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1004)*(x1005)))+(((IkReal(-1.00000000000000))*(r01)*(x1016)))+(((IkReal(-1.00000000000000))*(sj1)*(x1012))));
evalcond[3]=((((r21)*(x1011)))+(((r21)*(x1018)))+(((IkReal(-1.00000000000000))*(x1006)*(x1010)))+(((r20)*(x1015)))+(((IkReal(-1.00000000000000))*(sj2)*(x1012)))+(((r22)*(x1008))));
evalcond[4]=((x1014)+(((IkReal(-1.00000000000000))*(x1006)*(x1007)))+(((cj2)*(sj1)*(x1003)))+(((r12)*(x1008)))+(((r10)*(x1015)))+(((r11)*(x1018)))+(((r11)*(x1011))));
evalcond[5]=((((r02)*(x1008)))+(((cj2)*(x1013)))+(((IkReal(-1.00000000000000))*(x1004)*(x1006)))+(((r01)*(x1011)))+(((r01)*(x1018)))+(((r00)*(x1015)))+(((IkReal(-1.00000000000000))*(x1017))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1019=((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30);
IkReal x1020=((cj5)*(cj6));
IkReal x1021=((IkReal(1.00000000000000))*(sj5));
IkReal x1022=((cj5)*(sj6));
IkReal x1023=((cj2)*(sj1));
if( IKabs(((x1019)*(((((IkReal(-1.00000000000000))*(r22)*(x1021)))+(((r20)*(x1022)))+(((r21)*(x1020))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1019)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r12)*(sj2)*(x1021)))+(((r11)*(sj2)*(x1020)))+(((r10)*(sj2)*(x1022)))+(((r20)*(x1022)*(x1023)))+(((IkReal(-1.00000000000000))*(r22)*(x1021)*(x1023)))+(((r21)*(x1020)*(x1023))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1019)*(((((IkReal(-1.00000000000000))*(r22)*(x1021)))+(((r20)*(x1022)))+(((r21)*(x1020)))))))+IKsqr(((x1019)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r12)*(sj2)*(x1021)))+(((r11)*(sj2)*(x1020)))+(((r10)*(sj2)*(x1022)))+(((r20)*(x1022)*(x1023)))+(((IkReal(-1.00000000000000))*(r22)*(x1021)*(x1023)))+(((r21)*(x1020)*(x1023)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x1019)*(((((IkReal(-1.00000000000000))*(r22)*(x1021)))+(((r20)*(x1022)))+(((r21)*(x1020)))))), ((x1019)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r12)*(sj2)*(x1021)))+(((r11)*(sj2)*(x1020)))+(((r10)*(sj2)*(x1022)))+(((r20)*(x1022)*(x1023)))+(((IkReal(-1.00000000000000))*(r22)*(x1021)*(x1023)))+(((r21)*(x1020)*(x1023)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1024=IKsin(j3);
IkReal x1025=IKcos(j3);
IkReal x1026=((IkReal(1.00000000000000))*(r00));
IkReal x1027=((cj5)*(sj6));
IkReal x1028=((cj6)*(sj4));
IkReal x1029=((IkReal(1.00000000000000))*(r10));
IkReal x1030=((cj4)*(cj5));
IkReal x1031=((IkReal(1.00000000000000))*(cj2));
IkReal x1032=((IkReal(1.00000000000000))*(r20));
IkReal x1033=((sj4)*(sj6));
IkReal x1034=((IkReal(1.00000000000000))*(x1025));
IkReal x1035=((cj1)*(x1025));
IkReal x1036=((cj1)*(x1024));
IkReal x1037=((cj4)*(sj5)*(sj6));
IkReal x1038=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x1039=((sj1)*(x1024));
IkReal x1040=((cj4)*(cj6)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1027)*(x1032)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r21)*(x1038)))+(((sj2)*(x1024))));
evalcond[1]=((x1035)+(((IkReal(-1.00000000000000))*(r11)*(x1038)))+(((IkReal(-1.00000000000000))*(x1031)*(x1039)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1027)*(x1029))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1026)*(x1027)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(sj1)*(x1034)))+(((IkReal(-1.00000000000000))*(x1031)*(x1036)))+(((IkReal(-1.00000000000000))*(r01)*(x1038))));
evalcond[3]=((((r22)*(x1030)))+(((IkReal(-1.00000000000000))*(x1028)*(x1032)))+(((r21)*(x1033)))+(((r20)*(x1037)))+(((r21)*(x1040)))+(((IkReal(-1.00000000000000))*(sj2)*(x1034))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1028)*(x1029)))+(((r10)*(x1037)))+(x1036)+(((r11)*(x1040)))+(((cj2)*(sj1)*(x1025)))+(((r11)*(x1033)))+(((r12)*(x1030))));
evalcond[5]=((((cj2)*(x1035)))+(((r00)*(x1037)))+(((IkReal(-1.00000000000000))*(x1039)))+(((r02)*(x1030)))+(((IkReal(-1.00000000000000))*(x1026)*(x1028)))+(((r01)*(x1040)))+(((r01)*(x1033))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1041=((r20)*(sj6));
IkReal x1042=((cj4)*(sj5));
IkReal x1043=((cj6)*(r21));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)))+(((cj5)*(x1043)))+(((cj5)*(x1041))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((r21)*(sj4)*(sj6)))+(((x1042)*(x1043)))+(((x1041)*(x1042)))+(((cj4)*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)))+(((cj5)*(x1043)))+(((cj5)*(x1041)))))), ((gconst2)*(((((r21)*(sj4)*(sj6)))+(((x1042)*(x1043)))+(((x1041)*(x1042)))+(((cj4)*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj4)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1044=IKsin(j3);
IkReal x1045=IKcos(j3);
IkReal x1046=((IkReal(1.00000000000000))*(r00));
IkReal x1047=((cj5)*(sj6));
IkReal x1048=((cj6)*(sj4));
IkReal x1049=((IkReal(1.00000000000000))*(r10));
IkReal x1050=((cj4)*(cj5));
IkReal x1051=((IkReal(1.00000000000000))*(cj2));
IkReal x1052=((IkReal(1.00000000000000))*(r20));
IkReal x1053=((sj4)*(sj6));
IkReal x1054=((IkReal(1.00000000000000))*(x1045));
IkReal x1055=((cj1)*(x1045));
IkReal x1056=((cj1)*(x1044));
IkReal x1057=((cj4)*(sj5)*(sj6));
IkReal x1058=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x1059=((sj1)*(x1044));
IkReal x1060=((cj4)*(cj6)*(sj5));
evalcond[0]=((((r22)*(sj5)))+(((sj2)*(x1044)))+(((IkReal(-1.00000000000000))*(r21)*(x1058)))+(((IkReal(-1.00000000000000))*(x1047)*(x1052))));
evalcond[1]=((x1055)+(((IkReal(-1.00000000000000))*(r11)*(x1058)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1047)*(x1049)))+(((IkReal(-1.00000000000000))*(x1051)*(x1059))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1046)*(x1047)))+(((IkReal(-1.00000000000000))*(r01)*(x1058)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(sj1)*(x1054)))+(((IkReal(-1.00000000000000))*(x1051)*(x1056))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x1054)))+(((r20)*(x1057)))+(((r21)*(x1053)))+(((IkReal(-1.00000000000000))*(x1048)*(x1052)))+(((r21)*(x1060)))+(((r22)*(x1050))));
evalcond[4]=((((r12)*(x1050)))+(((r11)*(x1053)))+(x1056)+(((r10)*(x1057)))+(((IkReal(-1.00000000000000))*(x1048)*(x1049)))+(((cj2)*(sj1)*(x1045)))+(((r11)*(x1060))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1046)*(x1048)))+(((r02)*(x1050)))+(((r00)*(x1057)))+(((cj2)*(x1055)))+(((IkReal(-1.00000000000000))*(x1059)))+(((r01)*(x1053)))+(((r01)*(x1060))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1061=((cj6)*(r21));
IkReal x1062=((r20)*(sj6));
IkReal x1063=((cj4)*(sj5));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)))+(((cj5)*(x1062)))+(((cj5)*(x1061))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((r21)*(sj4)*(sj6)))+(((x1061)*(x1063)))+(((x1062)*(x1063)))+(((cj4)*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)))+(((cj5)*(x1062)))+(((cj5)*(x1061)))))), ((gconst1)*(((((r21)*(sj4)*(sj6)))+(((x1061)*(x1063)))+(((x1062)*(x1063)))+(((cj4)*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj4)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x1064=((r20)*(sj6));
IkReal x1065=((cj4)*(sj5));
IkReal x1066=((IkReal(1.00000000000000))*(cj5));
IkReal x1067=((cj6)*(r21));
evalcond[0]=((((r22)*(sj5)))+(((sj2)*(IKsin(j3))))+(((IkReal(-1.00000000000000))*(x1066)*(x1067)))+(((IkReal(-1.00000000000000))*(x1064)*(x1066))));
evalcond[1]=((((r21)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(sj2)*(IKcos(j3))))+(((cj4)*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj4)))+(((x1064)*(x1065)))+(((x1065)*(x1067))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((cj3)*(cj3))+((((cj2)*(cj2))*((sj3)*(sj3))))));
dummyeval[0]=(((cj3)*(cj3))+((((cj2)*(cj2))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x1068=(cj3)*(cj3);
IkReal x1069=(sj3)*(sj3);
dummyeval[0]=((((cj2)*(x1069)))+(((cj2)*(x1068))));
dummyeval[1]=((((IkReal(-1.00000000000000))*(x1068)))+(((IkReal(-1.00000000000000))*(x1069))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj2;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1070=((cj5)*(r22));
IkReal x1071=((IkReal(0.0975200000000000))*(cj4));
IkReal x1072=((IkReal(1.00000000000000))*(cj5));
IkReal x1073=((r20)*(sj6));
IkReal x1074=((IkReal(1.00000000000000))*(sj4));
IkReal x1075=((cj6)*(sj5));
IkReal x1076=((sj5)*(sj6));
IkReal x1077=((cj6)*(r20));
IkReal x1078=((IkReal(0.0975200000000000))*(sj4));
IkReal x1079=((cj4)*(sj6));
IkReal x1080=((r21)*(sj6));
IkReal x1081=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1072)))+(((IkReal(-1.00000000000000))*(x1072)*(x1073))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(sj5)*(x1073)*(x1074)))+(((IkReal(-1.00000000000000))*(cj4)*(x1077)))+(((IkReal(-1.00000000000000))*(x1070)*(x1074)))+(((IkReal(-1.00000000000000))*(r21)*(x1074)*(x1075)))+(((r21)*(x1079))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1074)*(x1077)))+(((cj4)*(r21)*(x1075)))+(((cj4)*(sj5)*(x1073)))+(((sj4)*(x1080)))+(((cj4)*(x1070))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x1074)*(x1076)))+(((IkReal(-1.00000000000000))*(r00)*(x1081)))+(((IkReal(-1.00000000000000))*(r01)*(x1074)*(x1075)))+(((r01)*(x1079)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x1072))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r12)*(sj4)*(x1072)))+(((IkReal(-1.00000000000000))*(r10)*(x1081)))+(((IkReal(-1.00000000000000))*(r11)*(x1074)*(x1075)))+(((IkReal(-1.00000000000000))*(r10)*(x1074)*(x1076)))+(((r11)*(x1079))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1077)*(x1078)))+(((x1070)*(x1071)))+(((x1078)*(x1080)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(r21)*(x1075)))+(((IkReal(0.0716400000000000))*(x1070)))+(((sj5)*(x1071)*(x1073)))+(((IkReal(0.0716400000000000))*(sj5)*(x1073)))+(((r21)*(x1071)*(x1075))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1082=((IkReal(1.00000000000000))*(sj6));
IkReal x1083=((sj3)*(sj4));
IkReal x1084=((cj3)*(r10));
IkReal x1085=((cj4)*(sj5));
IkReal x1086=((cj3)*(r11));
IkReal x1087=((cj5)*(cj6));
IkReal x1088=((r12)*(sj5));
IkReal x1089=((r10)*(sj3));
IkReal x1090=((IkReal(1.00000000000000))*(cj3));
IkReal x1091=((IkReal(1.00000000000000))*(cj6));
IkReal x1092=((IkReal(1.00000000000000))*(sj3));
IkReal x1093=((cj4)*(cj5)*(r12));
if( IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(r11)*(x1087)*(x1092)))+(((sj3)*(x1088)))+(((IkReal(-1.00000000000000))*(x1090)*(x1093)))+(((IkReal(-1.00000000000000))*(cj5)*(x1082)*(x1089)))+(((IkReal(-1.00000000000000))*(x1085)*(x1086)*(x1091)))+(((IkReal(-1.00000000000000))*(x1082)*(x1084)*(x1085)))+(((IkReal(-1.00000000000000))*(sj4)*(x1082)*(x1086)))+(((cj6)*(sj4)*(x1084))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(x1088)*(x1090)))+(((IkReal(-1.00000000000000))*(r11)*(sj3)*(x1085)*(x1091)))+(((IkReal(-1.00000000000000))*(x1082)*(x1085)*(x1089)))+(((IkReal(-1.00000000000000))*(x1092)*(x1093)))+(((x1086)*(x1087)))+(((IkReal(-1.00000000000000))*(r11)*(x1082)*(x1083)))+(((cj6)*(r10)*(x1083)))+(((cj5)*(sj6)*(x1084))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst9)*(((((IkReal(-1.00000000000000))*(r11)*(x1087)*(x1092)))+(((sj3)*(x1088)))+(((IkReal(-1.00000000000000))*(x1090)*(x1093)))+(((IkReal(-1.00000000000000))*(cj5)*(x1082)*(x1089)))+(((IkReal(-1.00000000000000))*(x1085)*(x1086)*(x1091)))+(((IkReal(-1.00000000000000))*(x1082)*(x1084)*(x1085)))+(((IkReal(-1.00000000000000))*(sj4)*(x1082)*(x1086)))+(((cj6)*(sj4)*(x1084)))))), ((gconst9)*(((((IkReal(-1.00000000000000))*(x1088)*(x1090)))+(((IkReal(-1.00000000000000))*(r11)*(sj3)*(x1085)*(x1091)))+(((IkReal(-1.00000000000000))*(x1082)*(x1085)*(x1089)))+(((IkReal(-1.00000000000000))*(x1092)*(x1093)))+(((x1086)*(x1087)))+(((IkReal(-1.00000000000000))*(r11)*(x1082)*(x1083)))+(((cj6)*(r10)*(x1083)))+(((cj5)*(sj6)*(x1084)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1094=IKcos(j1);
IkReal x1095=IKsin(j1);
IkReal x1096=((r00)*(sj6));
IkReal x1097=((IkReal(0.0716400000000000))*(sj5));
IkReal x1098=((IkReal(1.00000000000000))*(cj5));
IkReal x1099=((cj6)*(sj4));
IkReal x1100=((IkReal(0.0975200000000000))*(r10));
IkReal x1101=((cj4)*(cj5));
IkReal x1102=((IkReal(0.0975200000000000))*(r11));
IkReal x1103=((sj4)*(sj6));
IkReal x1104=((cj6)*(r01));
IkReal x1105=((r10)*(sj6));
IkReal x1106=((cj4)*(sj5));
IkReal x1107=((cj6)*(r11));
IkReal x1108=((IkReal(0.0716400000000000))*(cj5));
IkReal x1109=((cj3)*(x1094));
IkReal x1110=((IkReal(1.00000000000000))*(x1095));
IkReal x1111=((sj3)*(x1094));
IkReal x1112=((sj3)*(x1110));
evalcond[0]=((x1109)+(((IkReal(-1.00000000000000))*(x1098)*(x1105)))+(((IkReal(-1.00000000000000))*(x1098)*(x1107)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1112))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1098)*(x1104)))+(((IkReal(-1.00000000000000))*(x1096)*(x1098)))+(((IkReal(-1.00000000000000))*(x1111)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj3)*(x1110))));
evalcond[2]=((x1111)+(((x1105)*(x1106)))+(((IkReal(-1.00000000000000))*(r10)*(x1099)))+(((r12)*(x1101)))+(((r11)*(x1103)))+(((x1106)*(x1107)))+(((cj3)*(x1095))));
evalcond[3]=((((r02)*(x1101)))+(x1109)+(((r01)*(x1103)))+(((x1104)*(x1106)))+(((x1096)*(x1106)))+(((IkReal(-1.00000000000000))*(r00)*(x1099)))+(((IkReal(-1.00000000000000))*(x1112))));
evalcond[4]=((((IkReal(0.0975200000000000))*(r02)*(x1101)))+(((r02)*(x1108)))+(((IkReal(-0.241210000000000))*(x1094)))+(((IkReal(0.0975200000000000))*(x1096)*(x1106)))+(((IkReal(0.0975200000000000))*(r01)*(x1103)))+(((x1097)*(x1104)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.0975200000000000))*(r00)*(x1099)))+(((x1096)*(x1097)))+(((IkReal(0.0135000000000000))*(x1095)))+(((IkReal(0.0975200000000000))*(x1104)*(x1106))));
evalcond[5]=((((IkReal(-0.241210000000000))*(x1095)))+(((x1102)*(x1103)))+(((x1097)*(x1107)))+(((x1097)*(x1105)))+(((cj6)*(x1102)*(x1106)))+(((IkReal(-0.0135000000000000))*(x1094)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x1099)*(x1100)))+(((IkReal(0.0975200000000000))*(r12)*(x1101)))+(((r12)*(x1108)))+(((sj6)*(x1100)*(x1106))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1113=((cj3)*(sj5));
IkReal x1114=((sj3)*(sj5));
IkReal x1115=((IkReal(1.00000000000000))*(r01));
IkReal x1116=((IkReal(1.00000000000000))*(cj5)*(sj6));
IkReal x1117=((cj3)*(cj5)*(cj6));
IkReal x1118=((cj5)*(cj6)*(sj3));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(r10)*(sj3)*(x1116)))+(((r12)*(x1114)))+(((IkReal(-1.00000000000000))*(cj3)*(r00)*(x1116)))+(((IkReal(-1.00000000000000))*(r11)*(x1118)))+(((IkReal(-1.00000000000000))*(x1115)*(x1117)))+(((r02)*(x1113))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(r12)*(x1113)))+(((cj3)*(cj5)*(r10)*(sj6)))+(((r11)*(x1117)))+(((IkReal(-1.00000000000000))*(x1115)*(x1118)))+(((IkReal(-1.00000000000000))*(r00)*(sj3)*(x1116)))+(((r02)*(x1114))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(r10)*(sj3)*(x1116)))+(((r12)*(x1114)))+(((IkReal(-1.00000000000000))*(cj3)*(r00)*(x1116)))+(((IkReal(-1.00000000000000))*(r11)*(x1118)))+(((IkReal(-1.00000000000000))*(x1115)*(x1117)))+(((r02)*(x1113)))))), ((gconst8)*(((((IkReal(-1.00000000000000))*(r12)*(x1113)))+(((cj3)*(cj5)*(r10)*(sj6)))+(((r11)*(x1117)))+(((IkReal(-1.00000000000000))*(x1115)*(x1118)))+(((IkReal(-1.00000000000000))*(r00)*(sj3)*(x1116)))+(((r02)*(x1114)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1119=IKcos(j1);
IkReal x1120=IKsin(j1);
IkReal x1121=((r00)*(sj6));
IkReal x1122=((IkReal(0.0716400000000000))*(sj5));
IkReal x1123=((IkReal(1.00000000000000))*(cj5));
IkReal x1124=((cj6)*(sj4));
IkReal x1125=((IkReal(0.0975200000000000))*(r10));
IkReal x1126=((cj4)*(cj5));
IkReal x1127=((IkReal(0.0975200000000000))*(r11));
IkReal x1128=((sj4)*(sj6));
IkReal x1129=((cj6)*(r01));
IkReal x1130=((r10)*(sj6));
IkReal x1131=((cj4)*(sj5));
IkReal x1132=((cj6)*(r11));
IkReal x1133=((IkReal(0.0716400000000000))*(cj5));
IkReal x1134=((cj3)*(x1119));
IkReal x1135=((IkReal(1.00000000000000))*(x1120));
IkReal x1136=((sj3)*(x1119));
IkReal x1137=((sj3)*(x1135));
evalcond[0]=((x1134)+(((IkReal(-1.00000000000000))*(x1123)*(x1130)))+(((IkReal(-1.00000000000000))*(x1123)*(x1132)))+(((IkReal(-1.00000000000000))*(x1137)))+(((r12)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1121)*(x1123)))+(((IkReal(-1.00000000000000))*(x1123)*(x1129)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj3)*(x1135)))+(((IkReal(-1.00000000000000))*(x1136))));
evalcond[2]=((x1136)+(((x1130)*(x1131)))+(((x1131)*(x1132)))+(((IkReal(-1.00000000000000))*(r10)*(x1124)))+(((r12)*(x1126)))+(((r11)*(x1128)))+(((cj3)*(x1120))));
evalcond[3]=((x1134)+(((r01)*(x1128)))+(((x1121)*(x1131)))+(((x1129)*(x1131)))+(((IkReal(-1.00000000000000))*(r00)*(x1124)))+(((IkReal(-1.00000000000000))*(x1137)))+(((r02)*(x1126))));
evalcond[4]=((((IkReal(0.0135000000000000))*(x1120)))+(((IkReal(0.0975200000000000))*(r02)*(x1126)))+(((IkReal(0.0975200000000000))*(r01)*(x1128)))+(((x1121)*(x1122)))+(((IkReal(0.0975200000000000))*(x1121)*(x1131)))+(((IkReal(-0.241210000000000))*(x1119)))+(((IkReal(0.0975200000000000))*(x1129)*(x1131)))+(((IkReal(-1.00000000000000))*(px)))+(((x1122)*(x1129)))+(((r02)*(x1133)))+(((IkReal(-0.0975200000000000))*(r00)*(x1124))));
evalcond[5]=((((IkReal(-0.0135000000000000))*(x1119)))+(((x1127)*(x1128)))+(((sj6)*(x1125)*(x1131)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.241210000000000))*(x1120)))+(((r12)*(x1133)))+(((IkReal(0.0975200000000000))*(r12)*(x1126)))+(((x1122)*(x1130)))+(((x1122)*(x1132)))+(((IkReal(-1.00000000000000))*(x1124)*(x1125)))+(((cj6)*(x1127)*(x1131))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1138=((cj5)*(r22));
IkReal x1139=((IkReal(0.0975200000000000))*(cj4));
IkReal x1140=((IkReal(1.00000000000000))*(cj5));
IkReal x1141=((r20)*(sj6));
IkReal x1142=((IkReal(1.00000000000000))*(sj4));
IkReal x1143=((cj6)*(sj5));
IkReal x1144=((sj5)*(sj6));
IkReal x1145=((cj6)*(r20));
IkReal x1146=((IkReal(0.0975200000000000))*(sj4));
IkReal x1147=((cj4)*(sj6));
IkReal x1148=((r21)*(sj6));
IkReal x1149=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1140)*(x1141)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1140))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj4)*(x1145)))+(((IkReal(-1.00000000000000))*(sj5)*(x1141)*(x1142)))+(((IkReal(-1.00000000000000))*(r21)*(x1142)*(x1143)))+(((r21)*(x1147)))+(((IkReal(-1.00000000000000))*(x1138)*(x1142))));
evalcond[3]=((((sj4)*(x1148)))+(((cj4)*(r21)*(x1143)))+(((cj4)*(x1138)))+(((cj4)*(sj5)*(x1141)))+(((IkReal(-1.00000000000000))*(x1142)*(x1145))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r01)*(x1142)*(x1143)))+(((IkReal(-1.00000000000000))*(r00)*(x1149)))+(((IkReal(-1.00000000000000))*(r00)*(x1142)*(x1144)))+(((IkReal(-1.00000000000000))*(r02)*(sj4)*(x1140)))+(((r01)*(x1147))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x1142)*(x1144)))+(((r11)*(x1147)))+(((IkReal(-1.00000000000000))*(r10)*(x1149)))+(((IkReal(-1.00000000000000))*(r11)*(x1142)*(x1143)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x1140))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1145)*(x1146)))+(((IkReal(0.0716400000000000))*(sj5)*(x1141)))+(((IkReal(0.0716400000000000))*(r21)*(x1143)))+(((x1146)*(x1148)))+(((IkReal(0.0716400000000000))*(x1138)))+(((r21)*(x1139)*(x1143)))+(((sj5)*(x1139)*(x1141)))+(((IkReal(-1.00000000000000))*(pz)))+(((x1138)*(x1139))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1150=((IkReal(1.00000000000000))*(sj3));
IkReal x1151=((r12)*(sj5));
IkReal x1152=((cj3)*(cj6));
IkReal x1153=((cj4)*(sj5));
IkReal x1154=((r10)*(sj4));
IkReal x1155=((cj6)*(sj3));
IkReal x1156=((cj5)*(r11));
IkReal x1157=((r10)*(sj6));
IkReal x1158=((r11)*(sj4)*(sj6));
IkReal x1159=((cj4)*(cj5)*(r12));
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(x1152)*(x1154)))+(((cj3)*(x1159)))+(((cj3)*(x1158)))+(((r11)*(x1152)*(x1153)))+(((cj5)*(sj3)*(x1157)))+(((cj3)*(x1153)*(x1157)))+(((IkReal(-1.00000000000000))*(x1150)*(x1151)))+(((x1155)*(x1156))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((cj3)*(cj5)*(x1157)))+(((x1152)*(x1156)))+(((IkReal(-1.00000000000000))*(x1150)*(x1153)*(x1157)))+(((IkReal(-1.00000000000000))*(cj3)*(x1151)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1150)*(x1153)))+(((x1154)*(x1155)))+(((IkReal(-1.00000000000000))*(x1150)*(x1158)))+(((IkReal(-1.00000000000000))*(x1150)*(x1159))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(x1152)*(x1154)))+(((cj3)*(x1159)))+(((cj3)*(x1158)))+(((r11)*(x1152)*(x1153)))+(((cj5)*(sj3)*(x1157)))+(((cj3)*(x1153)*(x1157)))+(((IkReal(-1.00000000000000))*(x1150)*(x1151)))+(((x1155)*(x1156)))))), ((gconst11)*(((((cj3)*(cj5)*(x1157)))+(((x1152)*(x1156)))+(((IkReal(-1.00000000000000))*(x1150)*(x1153)*(x1157)))+(((IkReal(-1.00000000000000))*(cj3)*(x1151)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1150)*(x1153)))+(((x1154)*(x1155)))+(((IkReal(-1.00000000000000))*(x1150)*(x1158)))+(((IkReal(-1.00000000000000))*(x1150)*(x1159)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1160=IKcos(j1);
IkReal x1161=IKsin(j1);
IkReal x1162=((cj5)*(r02));
IkReal x1163=((IkReal(1.00000000000000))*(r00));
IkReal x1164=((cj5)*(sj6));
IkReal x1165=((cj6)*(sj4));
IkReal x1166=((IkReal(0.0975200000000000))*(r10));
IkReal x1167=((IkReal(0.0975200000000000))*(cj4));
IkReal x1168=((cj5)*(r12));
IkReal x1169=((IkReal(1.00000000000000))*(r10));
IkReal x1170=((cj4)*(sj5));
IkReal x1171=((sj4)*(sj6));
IkReal x1172=((cj6)*(r01));
IkReal x1173=((sj3)*(x1160));
IkReal x1174=((IkReal(1.00000000000000))*(x1161));
IkReal x1175=((IkReal(0.0975200000000000))*(x1171));
IkReal x1176=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1177=((r10)*(sj5)*(sj6));
IkReal x1178=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x1179=((cj3)*(x1160));
IkReal x1180=((cj6)*(r11)*(sj5));
IkReal x1181=((r00)*(sj5)*(sj6));
IkReal x1182=((cj3)*(x1174));
evalcond[0]=((x1179)+(((IkReal(-1.00000000000000))*(r11)*(x1178)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1164)*(x1169)))+(((sj3)*(x1161))));
evalcond[1]=((x1173)+(((IkReal(-1.00000000000000))*(x1163)*(x1164)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1182)))+(((IkReal(-1.00000000000000))*(cj5)*(x1172))));
evalcond[2]=((((r10)*(sj6)*(x1170)))+(x1173)+(((cj4)*(x1168)))+(((IkReal(-1.00000000000000))*(x1182)))+(((r11)*(x1171)))+(((cj6)*(r11)*(x1170)))+(((IkReal(-1.00000000000000))*(x1165)*(x1169))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1163)*(x1165)))+(((r01)*(x1171)))+(((IkReal(-1.00000000000000))*(sj3)*(x1174)))+(((cj4)*(x1162)))+(((r00)*(sj6)*(x1170)))+(((x1170)*(x1172)))+(((IkReal(-1.00000000000000))*(x1179))));
evalcond[4]=((((IkReal(0.0716400000000000))*(x1181)))+(((x1162)*(x1167)))+(((r01)*(x1175)))+(((sj5)*(x1167)*(x1172)))+(((IkReal(0.0135000000000000))*(x1161)))+(((IkReal(0.0716400000000000))*(x1162)))+(((IkReal(0.0716400000000000))*(sj5)*(x1172)))+(((IkReal(-0.0975200000000000))*(r00)*(x1165)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.0104500000000000))*(x1160)))+(((x1167)*(x1181))));
evalcond[5]=((((IkReal(0.0716400000000000))*(x1168)))+(((IkReal(0.0716400000000000))*(x1177)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.0135000000000000))*(x1160)))+(((IkReal(-0.0104500000000000))*(x1161)))+(((x1167)*(x1180)))+(((r11)*(x1175)))+(((r11)*(x1176)))+(((x1167)*(x1168)))+(((sj6)*(x1166)*(x1170)))+(((IkReal(-1.00000000000000))*(x1165)*(x1166))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1183=((r02)*(sj5));
IkReal x1184=((cj3)*(cj5));
IkReal x1185=((r00)*(sj6));
IkReal x1186=((cj6)*(r11));
IkReal x1187=((IkReal(1.00000000000000))*(sj3));
IkReal x1188=((r12)*(sj5));
IkReal x1189=((cj5)*(sj3));
IkReal x1190=((cj6)*(r01));
IkReal x1191=((r10)*(sj6));
if( IKabs(((gconst10)*(((((x1186)*(x1189)))+(((x1189)*(x1191)))+(((IkReal(-1.00000000000000))*(x1187)*(x1188)))+(((IkReal(-1.00000000000000))*(x1184)*(x1190)))+(((IkReal(-1.00000000000000))*(x1184)*(x1185)))+(((cj3)*(x1183))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((x1184)*(x1191)))+(((x1184)*(x1186)))+(((IkReal(-1.00000000000000))*(cj3)*(x1188)))+(((x1185)*(x1189)))+(((x1189)*(x1190)))+(((IkReal(-1.00000000000000))*(x1183)*(x1187))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst10)*(((((x1186)*(x1189)))+(((x1189)*(x1191)))+(((IkReal(-1.00000000000000))*(x1187)*(x1188)))+(((IkReal(-1.00000000000000))*(x1184)*(x1190)))+(((IkReal(-1.00000000000000))*(x1184)*(x1185)))+(((cj3)*(x1183)))))), ((gconst10)*(((((x1184)*(x1191)))+(((x1184)*(x1186)))+(((IkReal(-1.00000000000000))*(cj3)*(x1188)))+(((x1185)*(x1189)))+(((x1189)*(x1190)))+(((IkReal(-1.00000000000000))*(x1183)*(x1187)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1192=IKcos(j1);
IkReal x1193=IKsin(j1);
IkReal x1194=((cj5)*(r02));
IkReal x1195=((IkReal(1.00000000000000))*(r00));
IkReal x1196=((cj5)*(sj6));
IkReal x1197=((cj6)*(sj4));
IkReal x1198=((IkReal(0.0975200000000000))*(r10));
IkReal x1199=((IkReal(0.0975200000000000))*(cj4));
IkReal x1200=((cj5)*(r12));
IkReal x1201=((IkReal(1.00000000000000))*(r10));
IkReal x1202=((cj4)*(sj5));
IkReal x1203=((sj4)*(sj6));
IkReal x1204=((cj6)*(r01));
IkReal x1205=((sj3)*(x1192));
IkReal x1206=((IkReal(1.00000000000000))*(x1193));
IkReal x1207=((IkReal(0.0975200000000000))*(x1203));
IkReal x1208=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1209=((r10)*(sj5)*(sj6));
IkReal x1210=((IkReal(1.00000000000000))*(cj5)*(cj6));
IkReal x1211=((cj3)*(x1192));
IkReal x1212=((cj6)*(r11)*(sj5));
IkReal x1213=((r00)*(sj5)*(sj6));
IkReal x1214=((cj3)*(x1206));
evalcond[0]=((x1211)+(((IkReal(-1.00000000000000))*(x1196)*(x1201)))+(((r12)*(sj5)))+(((sj3)*(x1193)))+(((IkReal(-1.00000000000000))*(r11)*(x1210))));
evalcond[1]=((x1205)+(((IkReal(-1.00000000000000))*(x1195)*(x1196)))+(((IkReal(-1.00000000000000))*(cj5)*(x1204)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1214))));
evalcond[2]=((x1205)+(((r11)*(x1203)))+(((cj6)*(r11)*(x1202)))+(((IkReal(-1.00000000000000))*(x1214)))+(((IkReal(-1.00000000000000))*(x1197)*(x1201)))+(((cj4)*(x1200)))+(((r10)*(sj6)*(x1202))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1195)*(x1197)))+(((IkReal(-1.00000000000000))*(sj3)*(x1206)))+(((cj4)*(x1194)))+(((x1202)*(x1204)))+(((r00)*(sj6)*(x1202)))+(((r01)*(x1203)))+(((IkReal(-1.00000000000000))*(x1211))));
evalcond[4]=((((IkReal(-0.0975200000000000))*(r00)*(x1197)))+(((x1199)*(x1213)))+(((IkReal(0.0716400000000000))*(x1213)))+(((IkReal(0.0716400000000000))*(x1194)))+(((x1194)*(x1199)))+(((IkReal(0.0716400000000000))*(sj5)*(x1204)))+(((IkReal(-0.0104500000000000))*(x1192)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x1207)))+(((sj5)*(x1199)*(x1204)))+(((IkReal(0.0135000000000000))*(x1193))));
evalcond[5]=((((x1199)*(x1212)))+(((sj6)*(x1198)*(x1202)))+(((IkReal(0.0716400000000000))*(x1209)))+(((IkReal(0.0716400000000000))*(x1200)))+(((IkReal(-1.00000000000000))*(x1197)*(x1198)))+(((r11)*(x1208)))+(((r11)*(x1207)))+(((IkReal(-0.0104500000000000))*(x1193)))+(((IkReal(-0.0135000000000000))*(x1192)))+(((x1199)*(x1200)))+(((IkReal(-1.00000000000000))*(py))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1215=((cj5)*(r22));
IkReal x1216=((IkReal(0.0975200000000000))*(cj4));
IkReal x1217=((r20)*(sj6));
IkReal x1218=((IkReal(1.00000000000000))*(cj5));
IkReal x1219=((IkReal(1.00000000000000))*(sj4));
IkReal x1220=((cj6)*(r20));
IkReal x1221=((IkReal(0.0975200000000000))*(sj4));
IkReal x1222=((r21)*(sj6));
IkReal x1223=((cj6)*(r21)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1218)))+(sj2)+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1217)*(x1218))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1215)*(x1219)))+(cj2)+(((cj4)*(x1222)))+(((IkReal(-1.00000000000000))*(cj4)*(x1220)))+(((IkReal(-1.00000000000000))*(sj5)*(x1217)*(x1219)))+(((IkReal(-1.00000000000000))*(x1219)*(x1223))));
evalcond[3]=((((cj4)*(x1215)))+(((cj4)*(x1223)))+(((cj4)*(sj5)*(x1217)))+(((sj4)*(x1222)))+(((IkReal(-1.00000000000000))*(x1219)*(x1220))));
evalcond[4]=((((IkReal(0.0716400000000000))*(x1215)))+(((x1216)*(x1223)))+(((IkReal(0.0716400000000000))*(sj5)*(x1217)))+(((IkReal(-1.00000000000000))*(x1220)*(x1221)))+(((sj5)*(x1216)*(x1217)))+(((IkReal(-1.00000000000000))*(pz)))+(((x1221)*(x1222)))+(((IkReal(0.0716400000000000))*(x1223)))+(((IkReal(0.115380000000000))*(sj2)))+(((x1215)*(x1216))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(cj2);
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1224=((cj5)*(r22));
IkReal x1225=((IkReal(0.0975200000000000))*(cj4));
IkReal x1226=((IkReal(1.00000000000000))*(sj4));
IkReal x1227=((cj4)*(r20));
IkReal x1228=((sj5)*(sj6));
IkReal x1229=((IkReal(1.00000000000000))*(cj6));
IkReal x1230=((cj6)*(r20));
IkReal x1231=((IkReal(0.0975200000000000))*(sj4));
IkReal x1232=((r21)*(sj6));
IkReal x1233=((IkReal(1.00000000000000))*(cj5)*(sj6));
IkReal x1234=((cj6)*(r21)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(1.00000000000000))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r20)*(x1233)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1229))));
evalcond[2]=((((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r10)*(x1233)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1229))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1233)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1229)))+(((r02)*(sj5))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1224)*(x1226)))+(((IkReal(-1.00000000000000))*(x1226)*(x1234)))+(((IkReal(-1.00000000000000))*(x1227)*(x1229)))+(((cj4)*(x1232)))+(((IkReal(-1.00000000000000))*(r20)*(x1226)*(x1228))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1226)*(x1230)))+(((cj4)*(x1224)))+(((cj4)*(x1234)))+(((sj4)*(x1232)))+(((x1227)*(x1228))));
evalcond[6]=((IkReal(0.115380000000000))+(((IkReal(-1.00000000000000))*(x1230)*(x1231)))+(((x1225)*(x1234)))+(((x1224)*(x1225)))+(((r20)*(x1225)*(x1228)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(x1234)))+(((IkReal(0.0716400000000000))*(r20)*(x1228)))+(((IkReal(0.0716400000000000))*(x1224)))+(((x1231)*(x1232))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1235=((cj6)*(sj4));
IkReal x1236=((cj4)*(cj5));
IkReal x1237=((sj4)*(sj6));
IkReal x1238=((IkReal(1.00000000000000))*(r11));
IkReal x1239=((cj4)*(sj5)*(sj6));
IkReal x1240=((cj4)*(cj6)*(sj5));
if( IKabs(((((r00)*(x1239)))+(((r01)*(x1237)))+(((r01)*(x1240)))+(((IkReal(-1.00000000000000))*(r00)*(x1235)))+(((r02)*(x1236))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1237)*(x1238)))+(((IkReal(-1.00000000000000))*(r12)*(x1236)))+(((r10)*(x1235)))+(((IkReal(-1.00000000000000))*(x1238)*(x1240)))+(((IkReal(-1.00000000000000))*(r10)*(x1239))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r00)*(x1239)))+(((r01)*(x1237)))+(((r01)*(x1240)))+(((IkReal(-1.00000000000000))*(r00)*(x1235)))+(((r02)*(x1236)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1237)*(x1238)))+(((IkReal(-1.00000000000000))*(r12)*(x1236)))+(((r10)*(x1235)))+(((IkReal(-1.00000000000000))*(x1238)*(x1240)))+(((IkReal(-1.00000000000000))*(r10)*(x1239)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((r00)*(x1239)))+(((r01)*(x1237)))+(((r01)*(x1240)))+(((IkReal(-1.00000000000000))*(r00)*(x1235)))+(((r02)*(x1236)))), ((((IkReal(-1.00000000000000))*(x1237)*(x1238)))+(((IkReal(-1.00000000000000))*(r12)*(x1236)))+(((r10)*(x1235)))+(((IkReal(-1.00000000000000))*(x1238)*(x1240)))+(((IkReal(-1.00000000000000))*(r10)*(x1239)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1241=IKcos(j1);
IkReal x1242=IKsin(j1);
IkReal x1243=((IkReal(0.0975200000000000))*(sj4));
IkReal x1244=((cj6)*(r10));
IkReal x1245=((r11)*(sj6));
IkReal x1246=((cj4)*(cj5));
IkReal x1247=((cj6)*(sj5));
IkReal x1248=((IkReal(1.00000000000000))*(sj4));
IkReal x1249=((IkReal(0.0716400000000000))*(cj5));
IkReal x1250=((cj4)*(r11));
IkReal x1251=((IkReal(0.0975200000000000))*(cj4));
IkReal x1252=((r01)*(sj6));
IkReal x1253=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x1254=((cj5)*(x1248));
IkReal x1255=((r10)*(sj5)*(sj6));
IkReal x1256=((r00)*(sj5)*(sj6));
evalcond[0]=((x1241)+(((IkReal(-1.00000000000000))*(r01)*(x1247)*(x1248)))+(((IkReal(-1.00000000000000))*(x1248)*(x1256)))+(((IkReal(-1.00000000000000))*(cj4)*(x1253)))+(((IkReal(-1.00000000000000))*(r02)*(x1254)))+(((cj4)*(x1252))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x1254)))+(x1242)+(((cj4)*(x1245)))+(((IkReal(-1.00000000000000))*(x1248)*(x1255)))+(((IkReal(-1.00000000000000))*(cj4)*(x1244)))+(((IkReal(-1.00000000000000))*(r11)*(x1247)*(x1248))));
evalcond[2]=((((x1247)*(x1250)))+(x1241)+(((IkReal(-1.00000000000000))*(x1244)*(x1248)))+(((r12)*(x1246)))+(((cj4)*(x1255)))+(((sj4)*(x1245))));
evalcond[3]=((((sj4)*(x1252)))+(((IkReal(-1.00000000000000))*(x1242)))+(((r02)*(x1246)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1248)))+(((cj4)*(x1256)))+(((cj4)*(r01)*(x1247))));
evalcond[4]=((((r01)*(x1247)*(x1251)))+(((IkReal(-0.125830000000000))*(x1241)))+(((x1243)*(x1252)))+(((IkReal(0.0716400000000000))*(r01)*(x1247)))+(((IkReal(0.0135000000000000))*(x1242)))+(((IkReal(0.0716400000000000))*(x1256)))+(((IkReal(-1.00000000000000))*(px)))+(((r02)*(x1249)))+(((x1251)*(x1256)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1243)))+(((IkReal(0.0975200000000000))*(r02)*(x1246))));
evalcond[5]=((((IkReal(-0.0135000000000000))*(x1241)))+(((IkReal(0.0716400000000000))*(r11)*(x1247)))+(((IkReal(-0.125830000000000))*(x1242)))+(((IkReal(0.0716400000000000))*(x1255)))+(((IkReal(-1.00000000000000))*(x1243)*(x1244)))+(((IkReal(-1.00000000000000))*(py)))+(((x1243)*(x1245)))+(((x1251)*(x1255)))+(((r12)*(x1249)))+(((IkReal(0.0975200000000000))*(x1247)*(x1250)))+(((IkReal(0.0975200000000000))*(r12)*(x1246))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1257=((cj5)*(r22));
IkReal x1258=((IkReal(0.0975200000000000))*(cj4));
IkReal x1259=((IkReal(1.00000000000000))*(sj4));
IkReal x1260=((cj4)*(r20));
IkReal x1261=((sj5)*(sj6));
IkReal x1262=((IkReal(1.00000000000000))*(cj6));
IkReal x1263=((cj6)*(r20));
IkReal x1264=((IkReal(0.0975200000000000))*(sj4));
IkReal x1265=((r21)*(sj6));
IkReal x1266=((IkReal(1.00000000000000))*(cj5)*(sj6));
IkReal x1267=((cj6)*(r21)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1262)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r20)*(x1266))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x1266)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1262)))+(((r12)*(sj5))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1266)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1262))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1260)*(x1262)))+(((IkReal(-1.00000000000000))*(r20)*(x1259)*(x1261)))+(((IkReal(-1.00000000000000))*(x1257)*(x1259)))+(((cj4)*(x1265)))+(((IkReal(-1.00000000000000))*(x1259)*(x1267))));
evalcond[5]=((((sj4)*(x1265)))+(((x1260)*(x1261)))+(((cj4)*(x1257)))+(((cj4)*(x1267)))+(((IkReal(-1.00000000000000))*(x1259)*(x1263))));
evalcond[6]=((IkReal(-0.115380000000000))+(((x1258)*(x1267)))+(((x1264)*(x1265)))+(((IkReal(-1.00000000000000))*(x1263)*(x1264)))+(((IkReal(0.0716400000000000))*(x1267)))+(((IkReal(0.0716400000000000))*(x1257)))+(((r20)*(x1258)*(x1261)))+(((IkReal(-1.00000000000000))*(pz)))+(((x1257)*(x1258)))+(((IkReal(0.0716400000000000))*(r20)*(x1261))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1268=((cj6)*(sj4));
IkReal x1269=((cj4)*(cj5));
IkReal x1270=((sj4)*(sj6));
IkReal x1271=((IkReal(1.00000000000000))*(r11));
IkReal x1272=((cj4)*(sj5)*(sj6));
IkReal x1273=((cj4)*(cj6)*(sj5));
if( IKabs(((((IkReal(-1.00000000000000))*(r00)*(x1268)))+(((r02)*(x1269)))+(((r00)*(x1272)))+(((r01)*(x1273)))+(((r01)*(x1270))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r10)*(x1268)))+(((IkReal(-1.00000000000000))*(x1270)*(x1271)))+(((IkReal(-1.00000000000000))*(x1271)*(x1273)))+(((IkReal(-1.00000000000000))*(r12)*(x1269)))+(((IkReal(-1.00000000000000))*(r10)*(x1272))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r00)*(x1268)))+(((r02)*(x1269)))+(((r00)*(x1272)))+(((r01)*(x1273)))+(((r01)*(x1270)))))+IKsqr(((((r10)*(x1268)))+(((IkReal(-1.00000000000000))*(x1270)*(x1271)))+(((IkReal(-1.00000000000000))*(x1271)*(x1273)))+(((IkReal(-1.00000000000000))*(r12)*(x1269)))+(((IkReal(-1.00000000000000))*(r10)*(x1272)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r00)*(x1268)))+(((r02)*(x1269)))+(((r00)*(x1272)))+(((r01)*(x1273)))+(((r01)*(x1270)))), ((((r10)*(x1268)))+(((IkReal(-1.00000000000000))*(x1270)*(x1271)))+(((IkReal(-1.00000000000000))*(x1271)*(x1273)))+(((IkReal(-1.00000000000000))*(r12)*(x1269)))+(((IkReal(-1.00000000000000))*(r10)*(x1272)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1274=IKcos(j1);
IkReal x1275=IKsin(j1);
IkReal x1276=((IkReal(0.0975200000000000))*(sj4));
IkReal x1277=((cj6)*(r10));
IkReal x1278=((r11)*(sj6));
IkReal x1279=((cj4)*(cj5));
IkReal x1280=((cj6)*(sj5));
IkReal x1281=((IkReal(1.00000000000000))*(sj4));
IkReal x1282=((IkReal(0.0716400000000000))*(cj5));
IkReal x1283=((cj4)*(r11));
IkReal x1284=((IkReal(0.0975200000000000))*(cj4));
IkReal x1285=((r01)*(sj6));
IkReal x1286=((IkReal(1.00000000000000))*(x1275));
IkReal x1287=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x1288=((cj5)*(x1281));
IkReal x1289=((r10)*(sj5)*(sj6));
IkReal x1290=((r00)*(sj5)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x1288)))+(((IkReal(-1.00000000000000))*(r01)*(x1280)*(x1281)))+(((cj4)*(x1285)))+(((IkReal(-1.00000000000000))*(x1281)*(x1290)))+(((IkReal(-1.00000000000000))*(x1274)))+(((IkReal(-1.00000000000000))*(cj4)*(x1287))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj4)*(x1277)))+(((IkReal(-1.00000000000000))*(r11)*(x1280)*(x1281)))+(((IkReal(-1.00000000000000))*(x1286)))+(((IkReal(-1.00000000000000))*(r12)*(x1288)))+(((cj4)*(x1278)))+(((IkReal(-1.00000000000000))*(x1281)*(x1289))));
evalcond[2]=((x1274)+(((r12)*(x1279)))+(((cj4)*(x1289)))+(((IkReal(-1.00000000000000))*(x1277)*(x1281)))+(((sj4)*(x1278)))+(((x1280)*(x1283))));
evalcond[3]=((((sj4)*(x1285)))+(((r02)*(x1279)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1281)))+(((IkReal(-1.00000000000000))*(x1286)))+(((cj4)*(x1290)))+(((cj4)*(r01)*(x1280))));
evalcond[4]=((((r02)*(x1282)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1276)))+(((IkReal(0.0975200000000000))*(r02)*(x1279)))+(((IkReal(-1.00000000000000))*(px)))+(((x1276)*(x1285)))+(((IkReal(0.0716400000000000))*(x1290)))+(((x1284)*(x1290)))+(((r01)*(x1280)*(x1284)))+(((IkReal(0.0716400000000000))*(r01)*(x1280)))+(((IkReal(-0.125830000000000))*(x1274)))+(((IkReal(0.0135000000000000))*(x1275))));
evalcond[5]=((((x1276)*(x1278)))+(((IkReal(0.0716400000000000))*(x1289)))+(((x1284)*(x1289)))+(((IkReal(-1.00000000000000))*(x1276)*(x1277)))+(((IkReal(0.0716400000000000))*(r11)*(x1280)))+(((IkReal(-0.0135000000000000))*(x1274)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0975200000000000))*(r12)*(x1279)))+(((IkReal(-0.125830000000000))*(x1275)))+(((IkReal(0.0975200000000000))*(x1280)*(x1283)))+(((r12)*(x1282))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1291=((IkReal(1.00000000000000))*(sj6));
IkReal x1292=((cj4)*(sj5));
IkReal x1293=((IkReal(1.00000000000000))*(cj5));
IkReal x1294=((cj6)*(r11));
if( IKabs(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj5)*(r10)*(x1291)))+(((IkReal(-1.00000000000000))*(x1293)*(x1294)))+(((r12)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(r10)*(x1291)*(x1292)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1293)))+(((IkReal(-1.00000000000000))*(x1292)*(x1294)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(x1291))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj5)*(r10)*(x1291)))+(((IkReal(-1.00000000000000))*(x1293)*(x1294)))+(((r12)*(sj5)))))))+IKsqr(((((cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(r10)*(x1291)*(x1292)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1293)))+(((IkReal(-1.00000000000000))*(x1292)*(x1294)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(x1291)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj5)*(r10)*(x1291)))+(((IkReal(-1.00000000000000))*(x1293)*(x1294)))+(((r12)*(sj5)))))), ((((cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(r10)*(x1291)*(x1292)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1293)))+(((IkReal(-1.00000000000000))*(x1292)*(x1294)))+(((IkReal(-1.00000000000000))*(r11)*(sj4)*(x1291)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1295=IKcos(j1);
IkReal x1296=IKsin(j1);
IkReal x1297=((IkReal(1.00000000000000))*(cj2));
IkReal x1298=((IkReal(1.00000000000000))*(r00));
IkReal x1299=((cj4)*(cj6));
IkReal x1300=((cj5)*(sj6));
IkReal x1301=((IkReal(0.115380000000000))*(cj2));
IkReal x1302=((cj6)*(sj4));
IkReal x1303=((IkReal(0.0975200000000000))*(r10));
IkReal x1304=((cj5)*(r02));
IkReal x1305=((IkReal(1.00000000000000))*(sj4));
IkReal x1306=((IkReal(0.0975200000000000))*(cj4));
IkReal x1307=((cj5)*(r12));
IkReal x1308=((IkReal(0.0975200000000000))*(r11));
IkReal x1309=((sj4)*(sj6));
IkReal x1310=((IkReal(1.00000000000000))*(sj5));
IkReal x1311=((IkReal(1.00000000000000))*(r10));
IkReal x1312=((cj4)*(sj6));
IkReal x1313=((r00)*(sj5));
IkReal x1314=((IkReal(0.0975200000000000))*(r01));
IkReal x1315=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1316=((r10)*(sj5)*(sj6));
IkReal x1317=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1300)*(x1311)))+(((IkReal(-1.00000000000000))*(r11)*(x1317)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1296)*(x1297))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x1317)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1295)*(x1297)))+(((IkReal(-1.00000000000000))*(x1298)*(x1300))));
evalcond[2]=((((sj2)*(x1295)))+(((r01)*(x1312)))+(((IkReal(-1.00000000000000))*(sj5)*(x1298)*(x1309)))+(((IkReal(-1.00000000000000))*(r01)*(x1302)*(x1310)))+(((IkReal(-1.00000000000000))*(x1298)*(x1299)))+(((IkReal(-1.00000000000000))*(x1304)*(x1305))));
evalcond[3]=((((sj2)*(x1296)))+(((r11)*(x1312)))+(((IkReal(-1.00000000000000))*(r11)*(x1302)*(x1310)))+(((IkReal(-1.00000000000000))*(x1299)*(x1311)))+(((IkReal(-1.00000000000000))*(x1305)*(x1316)))+(((IkReal(-1.00000000000000))*(x1305)*(x1307))));
evalcond[4]=((x1295)+(((cj4)*(x1307)))+(((r11)*(sj5)*(x1299)))+(((r11)*(x1309)))+(((r10)*(sj5)*(x1312)))+(((IkReal(-1.00000000000000))*(x1302)*(x1311))));
evalcond[5]=((((cj4)*(x1304)))+(((r01)*(sj5)*(x1299)))+(((IkReal(-1.00000000000000))*(x1296)))+(((IkReal(-1.00000000000000))*(x1298)*(x1302)))+(((r01)*(x1309)))+(((x1312)*(x1313))));
evalcond[6]=((((r01)*(x1315)))+(((IkReal(0.0135000000000000))*(x1296)))+(((x1309)*(x1314)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0716400000000000))*(sj6)*(x1313)))+(((x1304)*(x1306)))+(((IkReal(0.0716400000000000))*(x1304)))+(((IkReal(-1.00000000000000))*(x1295)*(x1301)))+(((sj6)*(x1306)*(x1313)))+(((IkReal(-0.0975200000000000))*(r00)*(x1302)))+(((sj5)*(x1299)*(x1314)))+(((IkReal(-0.125830000000000))*(x1295))));
evalcond[7]=((((sj5)*(x1299)*(x1308)))+(((x1306)*(x1307)))+(((x1308)*(x1309)))+(((r11)*(x1315)))+(((IkReal(-0.0135000000000000))*(x1295)))+(((IkReal(-1.00000000000000))*(x1296)*(x1301)))+(((IkReal(0.0716400000000000))*(x1316)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0716400000000000))*(x1307)))+(((sj5)*(x1303)*(x1312)))+(((IkReal(-1.00000000000000))*(x1302)*(x1303)))+(((IkReal(-0.125830000000000))*(x1296))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1318=((r00)*(sj6));
IkReal x1319=((cj4)*(sj5));
IkReal x1320=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((((x1318)*(x1319)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x1320)))+(((cj6)*(r01)*(x1319)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1320)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x1318))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x1318)*(x1319)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x1320)))+(((cj6)*(r01)*(x1319)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))))+IKsqr(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1320)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x1318)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((x1318)*(x1319)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x1320)))+(((cj6)*(r01)*(x1319)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))), ((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1320)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x1318)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1321=IKcos(j1);
IkReal x1322=IKsin(j1);
IkReal x1323=((IkReal(1.00000000000000))*(cj2));
IkReal x1324=((IkReal(1.00000000000000))*(r00));
IkReal x1325=((cj4)*(cj6));
IkReal x1326=((cj5)*(sj6));
IkReal x1327=((IkReal(0.115380000000000))*(cj2));
IkReal x1328=((cj6)*(sj4));
IkReal x1329=((IkReal(0.0975200000000000))*(r10));
IkReal x1330=((cj5)*(r02));
IkReal x1331=((IkReal(1.00000000000000))*(sj4));
IkReal x1332=((IkReal(0.0975200000000000))*(cj4));
IkReal x1333=((cj5)*(r12));
IkReal x1334=((IkReal(0.0975200000000000))*(r11));
IkReal x1335=((sj4)*(sj6));
IkReal x1336=((IkReal(1.00000000000000))*(sj5));
IkReal x1337=((IkReal(1.00000000000000))*(r10));
IkReal x1338=((cj4)*(sj6));
IkReal x1339=((r00)*(sj5));
IkReal x1340=((IkReal(0.0975200000000000))*(r01));
IkReal x1341=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1342=((r10)*(sj5)*(sj6));
IkReal x1343=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1326)*(x1337)))+(((IkReal(-1.00000000000000))*(x1322)*(x1323)))+(((IkReal(-1.00000000000000))*(r11)*(x1343)))+(((r12)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1324)*(x1326)))+(((IkReal(-1.00000000000000))*(r01)*(x1343)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1321)*(x1323))));
evalcond[2]=((((sj2)*(x1321)))+(((IkReal(-1.00000000000000))*(x1324)*(x1325)))+(((r01)*(x1338)))+(((IkReal(-1.00000000000000))*(r01)*(x1328)*(x1336)))+(((IkReal(-1.00000000000000))*(x1330)*(x1331)))+(((IkReal(-1.00000000000000))*(sj5)*(x1324)*(x1335))));
evalcond[3]=((((sj2)*(x1322)))+(((IkReal(-1.00000000000000))*(x1325)*(x1337)))+(((IkReal(-1.00000000000000))*(x1331)*(x1342)))+(((r11)*(x1338)))+(((IkReal(-1.00000000000000))*(r11)*(x1328)*(x1336)))+(((IkReal(-1.00000000000000))*(x1331)*(x1333))));
evalcond[4]=((((cj4)*(x1333)))+(x1321)+(((r11)*(x1335)))+(((r11)*(sj5)*(x1325)))+(((IkReal(-1.00000000000000))*(x1328)*(x1337)))+(((r10)*(sj5)*(x1338))));
evalcond[5]=((((cj4)*(x1330)))+(((x1338)*(x1339)))+(((IkReal(-1.00000000000000))*(x1324)*(x1328)))+(((r01)*(sj5)*(x1325)))+(((IkReal(-1.00000000000000))*(x1322)))+(((r01)*(x1335))));
evalcond[6]=((((IkReal(0.0716400000000000))*(x1330)))+(((IkReal(-0.0975200000000000))*(r00)*(x1328)))+(((sj5)*(x1325)*(x1340)))+(((IkReal(-0.125830000000000))*(x1321)))+(((IkReal(0.0716400000000000))*(sj6)*(x1339)))+(((sj6)*(x1332)*(x1339)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x1321)*(x1327)))+(((IkReal(0.0135000000000000))*(x1322)))+(((r01)*(x1341)))+(((x1335)*(x1340)))+(((x1330)*(x1332))));
evalcond[7]=((((IkReal(0.0716400000000000))*(x1333)))+(((sj5)*(x1329)*(x1338)))+(((IkReal(-0.125830000000000))*(x1322)))+(((IkReal(-1.00000000000000))*(x1322)*(x1327)))+(((IkReal(0.0716400000000000))*(x1342)))+(((IkReal(-1.00000000000000))*(x1328)*(x1329)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.0135000000000000))*(x1321)))+(((r11)*(x1341)))+(((sj5)*(x1325)*(x1334)))+(((x1334)*(x1335)))+(((x1332)*(x1333))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1344=((IkReal(1.00000000000000))*(cj5)*(sj6));
IkReal x1345=((IkReal(1.00000000000000))*(cj5)*(cj6));
if( IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(r11)*(x1345)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r10)*(x1344))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(r00)*(x1344)))+(((IkReal(-1.00000000000000))*(r01)*(x1345)))+(((r02)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst12)*(((((IkReal(-1.00000000000000))*(r11)*(x1345)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r10)*(x1344)))))), ((gconst12)*(((((IkReal(-1.00000000000000))*(r00)*(x1344)))+(((IkReal(-1.00000000000000))*(r01)*(x1345)))+(((r02)*(sj5)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1346=IKcos(j1);
IkReal x1347=IKsin(j1);
IkReal x1348=((IkReal(1.00000000000000))*(cj2));
IkReal x1349=((IkReal(1.00000000000000))*(r00));
IkReal x1350=((cj4)*(cj6));
IkReal x1351=((cj5)*(sj6));
IkReal x1352=((IkReal(0.115380000000000))*(cj2));
IkReal x1353=((cj6)*(sj4));
IkReal x1354=((IkReal(0.0975200000000000))*(r10));
IkReal x1355=((cj5)*(r02));
IkReal x1356=((IkReal(1.00000000000000))*(sj4));
IkReal x1357=((IkReal(0.0975200000000000))*(cj4));
IkReal x1358=((cj5)*(r12));
IkReal x1359=((IkReal(0.0975200000000000))*(r11));
IkReal x1360=((sj4)*(sj6));
IkReal x1361=((IkReal(1.00000000000000))*(sj5));
IkReal x1362=((IkReal(1.00000000000000))*(r10));
IkReal x1363=((cj4)*(sj6));
IkReal x1364=((r00)*(sj5));
IkReal x1365=((IkReal(0.0975200000000000))*(r01));
IkReal x1366=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1367=((r10)*(sj5)*(sj6));
IkReal x1368=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x1368)))+(((IkReal(-1.00000000000000))*(x1347)*(x1348)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1351)*(x1362))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1346)*(x1348)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x1368)))+(((IkReal(-1.00000000000000))*(x1349)*(x1351))));
evalcond[2]=((((sj2)*(x1346)))+(((IkReal(-1.00000000000000))*(r01)*(x1353)*(x1361)))+(((IkReal(-1.00000000000000))*(sj5)*(x1349)*(x1360)))+(((IkReal(-1.00000000000000))*(x1355)*(x1356)))+(((r01)*(x1363)))+(((IkReal(-1.00000000000000))*(x1349)*(x1350))));
evalcond[3]=((((sj2)*(x1347)))+(((IkReal(-1.00000000000000))*(x1350)*(x1362)))+(((IkReal(-1.00000000000000))*(x1356)*(x1358)))+(((r11)*(x1363)))+(((IkReal(-1.00000000000000))*(x1356)*(x1367)))+(((IkReal(-1.00000000000000))*(r11)*(x1353)*(x1361))));
evalcond[4]=((x1346)+(((IkReal(-1.00000000000000))*(x1353)*(x1362)))+(((r11)*(sj5)*(x1350)))+(((cj4)*(x1358)))+(((r11)*(x1360)))+(((r10)*(sj5)*(x1363))));
evalcond[5]=((((x1363)*(x1364)))+(((r01)*(sj5)*(x1350)))+(((cj4)*(x1355)))+(((r01)*(x1360)))+(((IkReal(-1.00000000000000))*(x1349)*(x1353)))+(((IkReal(-1.00000000000000))*(x1347))));
evalcond[6]=((((x1355)*(x1357)))+(((IkReal(0.0716400000000000))*(sj6)*(x1364)))+(((IkReal(0.0716400000000000))*(x1355)))+(((x1360)*(x1365)))+(((IkReal(-0.0975200000000000))*(r00)*(x1353)))+(((IkReal(-1.00000000000000))*(x1346)*(x1352)))+(((IkReal(0.0135000000000000))*(x1347)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.125830000000000))*(x1346)))+(((sj6)*(x1357)*(x1364)))+(((sj5)*(x1350)*(x1365)))+(((r01)*(x1366))));
evalcond[7]=((((sj5)*(x1354)*(x1363)))+(((x1357)*(x1358)))+(((IkReal(-0.0135000000000000))*(x1346)))+(((IkReal(0.0716400000000000))*(x1358)))+(((IkReal(0.0716400000000000))*(x1367)))+(((x1359)*(x1360)))+(((IkReal(-1.00000000000000))*(x1347)*(x1352)))+(((IkReal(-1.00000000000000))*(py)))+(((sj5)*(x1350)*(x1359)))+(((IkReal(-0.125830000000000))*(x1347)))+(((r11)*(x1366)))+(((IkReal(-1.00000000000000))*(x1353)*(x1354))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1369=((cj5)*(r22));
IkReal x1370=((IkReal(0.0975200000000000))*(cj4));
IkReal x1371=((r20)*(sj6));
IkReal x1372=((IkReal(1.00000000000000))*(cj5));
IkReal x1373=((IkReal(1.00000000000000))*(sj4));
IkReal x1374=((cj6)*(r20));
IkReal x1375=((IkReal(0.0975200000000000))*(sj4));
IkReal x1376=((r21)*(sj6));
IkReal x1377=((cj6)*(r21)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1371)*(x1372)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1372))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj4)*(x1374)))+(cj2)+(((cj4)*(x1376)))+(((IkReal(-1.00000000000000))*(sj5)*(x1371)*(x1373)))+(((IkReal(-1.00000000000000))*(x1373)*(x1377)))+(((IkReal(-1.00000000000000))*(x1369)*(x1373))));
evalcond[3]=((((cj4)*(sj5)*(x1371)))+(((cj4)*(x1377)))+(((cj4)*(x1369)))+(((sj4)*(x1376)))+(((IkReal(-1.00000000000000))*(x1373)*(x1374))));
evalcond[4]=((((x1375)*(x1376)))+(((sj5)*(x1370)*(x1371)))+(((IkReal(0.0716400000000000))*(x1369)))+(((IkReal(0.0716400000000000))*(sj5)*(x1371)))+(((IkReal(-1.00000000000000))*(x1374)*(x1375)))+(((IkReal(-1.00000000000000))*(pz)))+(((x1370)*(x1377)))+(((IkReal(0.0716400000000000))*(x1377)))+(((x1369)*(x1370)))+(((IkReal(0.115380000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign(cj2);
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1378=((cj5)*(r22));
IkReal x1379=((IkReal(0.0975200000000000))*(cj4));
IkReal x1380=((IkReal(1.00000000000000))*(sj4));
IkReal x1381=((cj4)*(r20));
IkReal x1382=((sj5)*(sj6));
IkReal x1383=((IkReal(1.00000000000000))*(cj6));
IkReal x1384=((cj6)*(r20));
IkReal x1385=((IkReal(0.0975200000000000))*(sj4));
IkReal x1386=((r21)*(sj6));
IkReal x1387=((IkReal(1.00000000000000))*(cj5)*(sj6));
IkReal x1388=((cj6)*(r21)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r20)*(x1387)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1383))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1383)))+(((IkReal(-1.00000000000000))*(r10)*(x1387)))+(((r12)*(sj5))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1387)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1383))));
evalcond[4]=((((cj4)*(x1386)))+(((IkReal(-1.00000000000000))*(x1380)*(x1388)))+(((IkReal(-1.00000000000000))*(x1381)*(x1383)))+(((IkReal(-1.00000000000000))*(r20)*(x1380)*(x1382)))+(((IkReal(-1.00000000000000))*(x1378)*(x1380))));
evalcond[5]=((((x1381)*(x1382)))+(((sj4)*(x1386)))+(((cj4)*(x1378)))+(((cj4)*(x1388)))+(((IkReal(-1.00000000000000))*(x1380)*(x1384))));
evalcond[6]=((IkReal(0.115380000000000))+(((IkReal(0.0716400000000000))*(r20)*(x1382)))+(((r20)*(x1379)*(x1382)))+(((IkReal(0.0716400000000000))*(x1388)))+(((IkReal(-1.00000000000000))*(x1384)*(x1385)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(x1378)))+(((x1379)*(x1388)))+(((x1378)*(x1379)))+(((x1385)*(x1386))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1389=((cj4)*(sj5));
IkReal x1390=((cj4)*(cj5));
IkReal x1391=((cj6)*(sj4));
IkReal x1392=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1392)))+(((IkReal(-1.00000000000000))*(r02)*(x1390)))+(((IkReal(-1.00000000000000))*(r00)*(x1389)*(x1392)))+(((r00)*(x1391)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1389))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r10)*(x1391)))+(((cj6)*(r11)*(x1389)))+(((r11)*(sj4)*(sj6)))+(((r10)*(sj6)*(x1389)))+(((r12)*(x1390))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1392)))+(((IkReal(-1.00000000000000))*(r02)*(x1390)))+(((IkReal(-1.00000000000000))*(r00)*(x1389)*(x1392)))+(((r00)*(x1391)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1389)))))+IKsqr(((((IkReal(-1.00000000000000))*(r10)*(x1391)))+(((cj6)*(r11)*(x1389)))+(((r11)*(sj4)*(sj6)))+(((r10)*(sj6)*(x1389)))+(((r12)*(x1390)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1392)))+(((IkReal(-1.00000000000000))*(r02)*(x1390)))+(((IkReal(-1.00000000000000))*(r00)*(x1389)*(x1392)))+(((r00)*(x1391)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1389)))), ((((IkReal(-1.00000000000000))*(r10)*(x1391)))+(((cj6)*(r11)*(x1389)))+(((r11)*(sj4)*(sj6)))+(((r10)*(sj6)*(x1389)))+(((r12)*(x1390)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1393=IKcos(j1);
IkReal x1394=IKsin(j1);
IkReal x1395=((IkReal(0.0975200000000000))*(sj4));
IkReal x1396=((cj6)*(r10));
IkReal x1397=((r11)*(sj6));
IkReal x1398=((cj4)*(cj5));
IkReal x1399=((cj6)*(sj5));
IkReal x1400=((IkReal(1.00000000000000))*(sj4));
IkReal x1401=((IkReal(0.0716400000000000))*(cj5));
IkReal x1402=((cj4)*(r11));
IkReal x1403=((IkReal(0.0975200000000000))*(cj4));
IkReal x1404=((r01)*(sj6));
IkReal x1405=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x1406=((cj5)*(x1400));
IkReal x1407=((r10)*(sj5)*(sj6));
IkReal x1408=((r00)*(sj5)*(sj6));
evalcond[0]=((x1393)+(((IkReal(-1.00000000000000))*(r01)*(x1399)*(x1400)))+(((cj4)*(x1404)))+(((IkReal(-1.00000000000000))*(r02)*(x1406)))+(((IkReal(-1.00000000000000))*(x1400)*(x1408)))+(((IkReal(-1.00000000000000))*(cj4)*(x1405))));
evalcond[1]=((x1394)+(((IkReal(-1.00000000000000))*(r12)*(x1406)))+(((IkReal(-1.00000000000000))*(r11)*(x1399)*(x1400)))+(((cj4)*(x1397)))+(((IkReal(-1.00000000000000))*(x1400)*(x1407)))+(((IkReal(-1.00000000000000))*(cj4)*(x1396))));
evalcond[2]=((((sj4)*(x1397)))+(((cj4)*(x1407)))+(((x1399)*(x1402)))+(((IkReal(-1.00000000000000))*(x1393)))+(((IkReal(-1.00000000000000))*(x1396)*(x1400)))+(((r12)*(x1398))));
evalcond[3]=((x1394)+(((cj4)*(x1408)))+(((cj4)*(r01)*(x1399)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1400)))+(((sj4)*(x1404)))+(((r02)*(x1398))));
evalcond[4]=((((IkReal(0.0975200000000000))*(r02)*(x1398)))+(((IkReal(0.0716400000000000))*(r01)*(x1399)))+(((r02)*(x1401)))+(((x1395)*(x1404)))+(((IkReal(-1.00000000000000))*(px)))+(((x1403)*(x1408)))+(((IkReal(-0.125830000000000))*(x1393)))+(((IkReal(0.0716400000000000))*(x1408)))+(((IkReal(0.0135000000000000))*(x1394)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1395)))+(((r01)*(x1399)*(x1403))));
evalcond[5]=((((IkReal(0.0975200000000000))*(x1399)*(x1402)))+(((IkReal(-1.00000000000000))*(x1395)*(x1396)))+(((r12)*(x1401)))+(((x1395)*(x1397)))+(((IkReal(-1.00000000000000))*(py)))+(((x1403)*(x1407)))+(((IkReal(0.0975200000000000))*(r12)*(x1398)))+(((IkReal(-0.125830000000000))*(x1394)))+(((IkReal(0.0716400000000000))*(x1407)))+(((IkReal(0.0716400000000000))*(r11)*(x1399)))+(((IkReal(-0.0135000000000000))*(x1393))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1409=((cj5)*(r22));
IkReal x1410=((IkReal(0.0975200000000000))*(cj4));
IkReal x1411=((IkReal(1.00000000000000))*(sj4));
IkReal x1412=((cj4)*(r20));
IkReal x1413=((sj5)*(sj6));
IkReal x1414=((IkReal(1.00000000000000))*(cj6));
IkReal x1415=((cj6)*(r20));
IkReal x1416=((IkReal(0.0975200000000000))*(sj4));
IkReal x1417=((r21)*(sj6));
IkReal x1418=((IkReal(1.00000000000000))*(cj5)*(sj6));
IkReal x1419=((cj6)*(r21)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1414)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r20)*(x1418))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1414)))+(((IkReal(-1.00000000000000))*(r10)*(x1418)))+(((r12)*(sj5))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1414)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(x1418))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x1411)*(x1413)))+(((IkReal(-1.00000000000000))*(x1412)*(x1414)))+(((cj4)*(x1417)))+(((IkReal(-1.00000000000000))*(x1411)*(x1419)))+(((IkReal(-1.00000000000000))*(x1409)*(x1411))));
evalcond[5]=((((x1412)*(x1413)))+(((cj4)*(x1419)))+(((cj4)*(x1409)))+(((IkReal(-1.00000000000000))*(x1411)*(x1415)))+(((sj4)*(x1417))));
evalcond[6]=((IkReal(-0.115380000000000))+(((IkReal(-1.00000000000000))*(x1415)*(x1416)))+(((r20)*(x1410)*(x1413)))+(((x1416)*(x1417)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(x1419)))+(((IkReal(0.0716400000000000))*(r20)*(x1413)))+(((x1410)*(x1419)))+(((x1409)*(x1410)))+(((IkReal(0.0716400000000000))*(x1409))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1420=((cj4)*(sj5));
IkReal x1421=((cj4)*(cj5));
IkReal x1422=((cj6)*(sj4));
IkReal x1423=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((r00)*(x1422)))+(((IkReal(-1.00000000000000))*(r00)*(x1420)*(x1423)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1420)))+(((IkReal(-1.00000000000000))*(r02)*(x1421)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1423))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r10)*(sj6)*(x1420)))+(((IkReal(-1.00000000000000))*(r10)*(x1422)))+(((r11)*(sj4)*(sj6)))+(((cj6)*(r11)*(x1420)))+(((r12)*(x1421))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r00)*(x1422)))+(((IkReal(-1.00000000000000))*(r00)*(x1420)*(x1423)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1420)))+(((IkReal(-1.00000000000000))*(r02)*(x1421)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1423)))))+IKsqr(((((r10)*(sj6)*(x1420)))+(((IkReal(-1.00000000000000))*(r10)*(x1422)))+(((r11)*(sj4)*(sj6)))+(((cj6)*(r11)*(x1420)))+(((r12)*(x1421)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((r00)*(x1422)))+(((IkReal(-1.00000000000000))*(r00)*(x1420)*(x1423)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1420)))+(((IkReal(-1.00000000000000))*(r02)*(x1421)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1423)))), ((((r10)*(sj6)*(x1420)))+(((IkReal(-1.00000000000000))*(r10)*(x1422)))+(((r11)*(sj4)*(sj6)))+(((cj6)*(r11)*(x1420)))+(((r12)*(x1421)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1424=IKsin(j1);
IkReal x1425=IKcos(j1);
IkReal x1426=((IkReal(0.0975200000000000))*(sj4));
IkReal x1427=((cj6)*(r10));
IkReal x1428=((r11)*(sj6));
IkReal x1429=((cj4)*(cj5));
IkReal x1430=((cj6)*(sj5));
IkReal x1431=((IkReal(1.00000000000000))*(sj4));
IkReal x1432=((IkReal(0.0716400000000000))*(cj5));
IkReal x1433=((cj4)*(r11));
IkReal x1434=((IkReal(0.0975200000000000))*(cj4));
IkReal x1435=((r01)*(sj6));
IkReal x1436=((IkReal(1.00000000000000))*(x1425));
IkReal x1437=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x1438=((cj5)*(x1431));
IkReal x1439=((r10)*(sj5)*(sj6));
IkReal x1440=((r00)*(sj5)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r01)*(x1430)*(x1431)))+(((cj4)*(x1435)))+(((IkReal(-1.00000000000000))*(x1436)))+(((IkReal(-1.00000000000000))*(r02)*(x1438)))+(((IkReal(-1.00000000000000))*(cj4)*(x1437)))+(((IkReal(-1.00000000000000))*(x1431)*(x1440))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x1438)))+(((IkReal(-1.00000000000000))*(r11)*(x1430)*(x1431)))+(((IkReal(-1.00000000000000))*(x1431)*(x1439)))+(((IkReal(-1.00000000000000))*(cj4)*(x1427)))+(((IkReal(-1.00000000000000))*(x1424)))+(((cj4)*(x1428))));
evalcond[2]=((((x1430)*(x1433)))+(((cj4)*(x1439)))+(((IkReal(-1.00000000000000))*(x1436)))+(((sj4)*(x1428)))+(((IkReal(-1.00000000000000))*(x1427)*(x1431)))+(((r12)*(x1429))));
evalcond[3]=((((cj4)*(x1440)))+(((cj4)*(r01)*(x1430)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1431)))+(((r02)*(x1429)))+(x1424)+(((sj4)*(x1435))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1426)))+(((x1434)*(x1440)))+(((IkReal(0.0975200000000000))*(r02)*(x1429)))+(((r02)*(x1432)))+(((IkReal(0.0716400000000000))*(x1440)))+(((r01)*(x1430)*(x1434)))+(((IkReal(-0.125830000000000))*(x1425)))+(((IkReal(0.0135000000000000))*(x1424)))+(((IkReal(-1.00000000000000))*(px)))+(((x1426)*(x1435)))+(((IkReal(0.0716400000000000))*(r01)*(x1430))));
evalcond[5]=((((IkReal(-0.0135000000000000))*(x1425)))+(((IkReal(-1.00000000000000))*(x1426)*(x1427)))+(((IkReal(0.0716400000000000))*(r11)*(x1430)))+(((IkReal(-0.125830000000000))*(x1424)))+(((x1426)*(x1428)))+(((r12)*(x1432)))+(((IkReal(0.0975200000000000))*(r12)*(x1429)))+(((IkReal(0.0975200000000000))*(x1430)*(x1433)))+(((x1434)*(x1439)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0716400000000000))*(x1439))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1441=((r00)*(sj6));
IkReal x1442=((cj6)*(r01));
IkReal x1443=((IkReal(1.00000000000000))*(r02));
IkReal x1444=((IkReal(1.00000000000000))*(cj4)*(sj5));
if( IKabs(((((cj6)*(r00)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x1443)))+(((IkReal(-1.00000000000000))*(x1441)*(x1444)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(x1442)*(x1444))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj5)*(x1443)))+(((cj5)*(x1441)))+(((cj5)*(x1442))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj6)*(r00)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x1443)))+(((IkReal(-1.00000000000000))*(x1441)*(x1444)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(x1442)*(x1444)))))+IKsqr(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj5)*(x1443)))+(((cj5)*(x1441)))+(((cj5)*(x1442)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((cj6)*(r00)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(x1443)))+(((IkReal(-1.00000000000000))*(x1441)*(x1444)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(x1442)*(x1444)))), ((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj5)*(x1443)))+(((cj5)*(x1441)))+(((cj5)*(x1442)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1445=IKcos(j1);
IkReal x1446=IKsin(j1);
IkReal x1447=((IkReal(1.00000000000000))*(r00));
IkReal x1448=((cj4)*(cj6));
IkReal x1449=((cj5)*(sj6));
IkReal x1450=((IkReal(0.115380000000000))*(cj2));
IkReal x1451=((cj6)*(sj4));
IkReal x1452=((IkReal(0.0975200000000000))*(r10));
IkReal x1453=((cj5)*(r02));
IkReal x1454=((IkReal(1.00000000000000))*(sj4));
IkReal x1455=((IkReal(0.0975200000000000))*(cj4));
IkReal x1456=((cj5)*(r12));
IkReal x1457=((IkReal(0.0975200000000000))*(r11));
IkReal x1458=((sj4)*(sj6));
IkReal x1459=((IkReal(1.00000000000000))*(sj5));
IkReal x1460=((IkReal(1.00000000000000))*(r10));
IkReal x1461=((cj4)*(sj6));
IkReal x1462=((r00)*(sj5));
IkReal x1463=((IkReal(0.0975200000000000))*(r01));
IkReal x1464=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1465=((r10)*(sj5)*(sj6));
IkReal x1466=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((cj2)*(x1446)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1449)*(x1460)))+(((IkReal(-1.00000000000000))*(r11)*(x1466))));
evalcond[1]=((((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1447)*(x1449)))+(((IkReal(-1.00000000000000))*(r01)*(x1466)))+(((cj2)*(x1445))));
evalcond[2]=((((r01)*(x1461)))+(((IkReal(-1.00000000000000))*(r01)*(x1451)*(x1459)))+(((IkReal(-1.00000000000000))*(sj5)*(x1447)*(x1458)))+(((IkReal(-1.00000000000000))*(x1447)*(x1448)))+(((IkReal(-1.00000000000000))*(x1453)*(x1454)))+(((sj2)*(x1445))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1448)*(x1460)))+(((IkReal(-1.00000000000000))*(x1454)*(x1465)))+(((IkReal(-1.00000000000000))*(x1454)*(x1456)))+(((IkReal(-1.00000000000000))*(r11)*(x1451)*(x1459)))+(((sj2)*(x1446)))+(((r11)*(x1461))));
evalcond[4]=((((cj4)*(x1456)))+(((r11)*(sj5)*(x1448)))+(((IkReal(-1.00000000000000))*(x1445)))+(((r11)*(x1458)))+(((r10)*(sj5)*(x1461)))+(((IkReal(-1.00000000000000))*(x1451)*(x1460))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1447)*(x1451)))+(((cj4)*(x1453)))+(((x1461)*(x1462)))+(((r01)*(x1458)))+(x1446)+(((r01)*(sj5)*(x1448))));
evalcond[6]=((((r01)*(x1464)))+(((IkReal(0.0135000000000000))*(x1446)))+(((IkReal(-1.00000000000000))*(x1445)*(x1450)))+(((IkReal(-0.0975200000000000))*(r00)*(x1451)))+(((x1458)*(x1463)))+(((IkReal(-0.125830000000000))*(x1445)))+(((sj5)*(x1448)*(x1463)))+(((IkReal(-1.00000000000000))*(px)))+(((sj6)*(x1455)*(x1462)))+(((IkReal(0.0716400000000000))*(sj6)*(x1462)))+(((IkReal(0.0716400000000000))*(x1453)))+(((x1453)*(x1455))));
evalcond[7]=((((sj5)*(x1452)*(x1461)))+(((x1455)*(x1456)))+(((IkReal(-0.125830000000000))*(x1446)))+(((IkReal(-1.00000000000000))*(py)))+(((sj5)*(x1448)*(x1457)))+(((IkReal(-1.00000000000000))*(x1446)*(x1450)))+(((IkReal(0.0716400000000000))*(x1456)))+(((r11)*(x1464)))+(((IkReal(0.0716400000000000))*(x1465)))+(((IkReal(-0.0135000000000000))*(x1445)))+(((IkReal(-1.00000000000000))*(x1451)*(x1452)))+(((x1457)*(x1458))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1467=((cj6)*(r11));
IkReal x1468=((cj4)*(sj5));
IkReal x1469=((r10)*(sj6));
if( IKabs(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((cj5)*(x1469)))+(((cj5)*(x1467)))+(((IkReal(-1.00000000000000))*(r12)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj4)))+(((x1468)*(x1469)))+(((cj4)*(cj5)*(r12)))+(((r11)*(sj4)*(sj6)))+(((x1467)*(x1468))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((cj5)*(x1469)))+(((cj5)*(x1467)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj4)))+(((x1468)*(x1469)))+(((cj4)*(cj5)*(r12)))+(((r11)*(sj4)*(sj6)))+(((x1467)*(x1468)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((cj5)*(x1469)))+(((cj5)*(x1467)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))), ((((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj4)))+(((x1468)*(x1469)))+(((cj4)*(cj5)*(r12)))+(((r11)*(sj4)*(sj6)))+(((x1467)*(x1468)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1470=IKcos(j1);
IkReal x1471=IKsin(j1);
IkReal x1472=((IkReal(1.00000000000000))*(r00));
IkReal x1473=((cj4)*(cj6));
IkReal x1474=((cj5)*(sj6));
IkReal x1475=((IkReal(0.115380000000000))*(cj2));
IkReal x1476=((cj6)*(sj4));
IkReal x1477=((IkReal(0.0975200000000000))*(r10));
IkReal x1478=((cj5)*(r02));
IkReal x1479=((IkReal(1.00000000000000))*(sj4));
IkReal x1480=((IkReal(0.0975200000000000))*(cj4));
IkReal x1481=((cj5)*(r12));
IkReal x1482=((IkReal(0.0975200000000000))*(r11));
IkReal x1483=((sj4)*(sj6));
IkReal x1484=((IkReal(1.00000000000000))*(sj5));
IkReal x1485=((IkReal(1.00000000000000))*(r10));
IkReal x1486=((cj4)*(sj6));
IkReal x1487=((r00)*(sj5));
IkReal x1488=((IkReal(0.0975200000000000))*(r01));
IkReal x1489=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1490=((r10)*(sj5)*(sj6));
IkReal x1491=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x1491)))+(((IkReal(-1.00000000000000))*(x1474)*(x1485)))+(((cj2)*(x1471)))+(((r12)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x1491)))+(((r02)*(sj5)))+(((cj2)*(x1470)))+(((IkReal(-1.00000000000000))*(x1472)*(x1474))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1478)*(x1479)))+(((r01)*(x1486)))+(((IkReal(-1.00000000000000))*(sj5)*(x1472)*(x1483)))+(((IkReal(-1.00000000000000))*(r01)*(x1476)*(x1484)))+(((sj2)*(x1470)))+(((IkReal(-1.00000000000000))*(x1472)*(x1473))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1479)*(x1490)))+(((IkReal(-1.00000000000000))*(x1479)*(x1481)))+(((IkReal(-1.00000000000000))*(r11)*(x1476)*(x1484)))+(((r11)*(x1486)))+(((sj2)*(x1471)))+(((IkReal(-1.00000000000000))*(x1473)*(x1485))));
evalcond[4]=((((r11)*(sj5)*(x1473)))+(((IkReal(-1.00000000000000))*(x1470)))+(((r11)*(x1483)))+(((cj4)*(x1481)))+(((r10)*(sj5)*(x1486)))+(((IkReal(-1.00000000000000))*(x1476)*(x1485))));
evalcond[5]=((((cj4)*(x1478)))+(((r01)*(x1483)))+(((x1486)*(x1487)))+(x1471)+(((r01)*(sj5)*(x1473)))+(((IkReal(-1.00000000000000))*(x1472)*(x1476))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1470)*(x1475)))+(((IkReal(0.0716400000000000))*(x1478)))+(((r01)*(x1489)))+(((IkReal(0.0135000000000000))*(x1471)))+(((IkReal(0.0716400000000000))*(sj6)*(x1487)))+(((IkReal(-0.125830000000000))*(x1470)))+(((sj6)*(x1480)*(x1487)))+(((IkReal(-1.00000000000000))*(px)))+(((x1483)*(x1488)))+(((sj5)*(x1473)*(x1488)))+(((x1478)*(x1480)))+(((IkReal(-0.0975200000000000))*(r00)*(x1476))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1471)*(x1475)))+(((x1482)*(x1483)))+(((x1480)*(x1481)))+(((IkReal(-1.00000000000000))*(x1476)*(x1477)))+(((IkReal(-0.125830000000000))*(x1471)))+(((r11)*(x1489)))+(((IkReal(-1.00000000000000))*(py)))+(((sj5)*(x1473)*(x1482)))+(((IkReal(0.0716400000000000))*(x1490)))+(((sj5)*(x1477)*(x1486)))+(((IkReal(0.0716400000000000))*(x1481)))+(((IkReal(-0.0135000000000000))*(x1470))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1492=((IkReal(1.00000000000000))*(sj5));
IkReal x1493=((cj5)*(cj6));
IkReal x1494=((cj5)*(sj6));
if( IKabs(((gconst13)*(((((r10)*(x1494)))+(((IkReal(-1.00000000000000))*(r12)*(x1492)))+(((r11)*(x1493))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((r00)*(x1494)))+(((r01)*(x1493)))+(((IkReal(-1.00000000000000))*(r02)*(x1492))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst13)*(((((r10)*(x1494)))+(((IkReal(-1.00000000000000))*(r12)*(x1492)))+(((r11)*(x1493)))))), ((gconst13)*(((((r00)*(x1494)))+(((r01)*(x1493)))+(((IkReal(-1.00000000000000))*(r02)*(x1492)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1495=IKcos(j1);
IkReal x1496=IKsin(j1);
IkReal x1497=((IkReal(1.00000000000000))*(r00));
IkReal x1498=((cj4)*(cj6));
IkReal x1499=((cj5)*(sj6));
IkReal x1500=((IkReal(0.115380000000000))*(cj2));
IkReal x1501=((cj6)*(sj4));
IkReal x1502=((IkReal(0.0975200000000000))*(r10));
IkReal x1503=((cj5)*(r02));
IkReal x1504=((IkReal(1.00000000000000))*(sj4));
IkReal x1505=((IkReal(0.0975200000000000))*(cj4));
IkReal x1506=((cj5)*(r12));
IkReal x1507=((IkReal(0.0975200000000000))*(r11));
IkReal x1508=((sj4)*(sj6));
IkReal x1509=((IkReal(1.00000000000000))*(sj5));
IkReal x1510=((IkReal(1.00000000000000))*(r10));
IkReal x1511=((cj4)*(sj6));
IkReal x1512=((r00)*(sj5));
IkReal x1513=((IkReal(0.0975200000000000))*(r01));
IkReal x1514=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1515=((r10)*(sj5)*(sj6));
IkReal x1516=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1499)*(x1510)))+(((cj2)*(x1496)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1516))));
evalcond[1]=((((cj2)*(x1495)))+(((IkReal(-1.00000000000000))*(r01)*(x1516)))+(((IkReal(-1.00000000000000))*(x1497)*(x1499)))+(((r02)*(sj5))));
evalcond[2]=((((sj2)*(x1495)))+(((IkReal(-1.00000000000000))*(sj5)*(x1497)*(x1508)))+(((r01)*(x1511)))+(((IkReal(-1.00000000000000))*(x1497)*(x1498)))+(((IkReal(-1.00000000000000))*(x1503)*(x1504)))+(((IkReal(-1.00000000000000))*(r01)*(x1501)*(x1509))));
evalcond[3]=((((sj2)*(x1496)))+(((IkReal(-1.00000000000000))*(x1498)*(x1510)))+(((IkReal(-1.00000000000000))*(x1504)*(x1506)))+(((r11)*(x1511)))+(((IkReal(-1.00000000000000))*(x1504)*(x1515)))+(((IkReal(-1.00000000000000))*(r11)*(x1501)*(x1509))));
evalcond[4]=((((r11)*(x1508)))+(((IkReal(-1.00000000000000))*(x1501)*(x1510)))+(((IkReal(-1.00000000000000))*(x1495)))+(((cj4)*(x1506)))+(((r11)*(sj5)*(x1498)))+(((r10)*(sj5)*(x1511))));
evalcond[5]=((((r01)*(x1508)))+(((cj4)*(x1503)))+(x1496)+(((IkReal(-1.00000000000000))*(x1497)*(x1501)))+(((r01)*(sj5)*(x1498)))+(((x1511)*(x1512))));
evalcond[6]=((((sj6)*(x1505)*(x1512)))+(((x1508)*(x1513)))+(((r01)*(x1514)))+(((IkReal(-0.125830000000000))*(x1495)))+(((IkReal(-1.00000000000000))*(px)))+(((sj5)*(x1498)*(x1513)))+(((IkReal(-0.0975200000000000))*(r00)*(x1501)))+(((IkReal(0.0716400000000000))*(x1503)))+(((IkReal(0.0716400000000000))*(sj6)*(x1512)))+(((x1503)*(x1505)))+(((IkReal(0.0135000000000000))*(x1496)))+(((IkReal(-1.00000000000000))*(x1495)*(x1500))));
evalcond[7]=((((r11)*(x1514)))+(((sj5)*(x1502)*(x1511)))+(((x1507)*(x1508)))+(((IkReal(-1.00000000000000))*(x1501)*(x1502)))+(((IkReal(-0.125830000000000))*(x1496)))+(((sj5)*(x1498)*(x1507)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0716400000000000))*(x1506)))+(((IkReal(0.0716400000000000))*(x1515)))+(((IkReal(-1.00000000000000))*(x1496)*(x1500)))+(((IkReal(-0.0135000000000000))*(x1495)))+(((x1505)*(x1506))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1517=((cj5)*(r22));
IkReal x1518=((IkReal(0.0975200000000000))*(cj4));
IkReal x1519=((r20)*(sj6));
IkReal x1520=((IkReal(1.00000000000000))*(cj5));
IkReal x1521=((IkReal(1.00000000000000))*(sj4));
IkReal x1522=((cj6)*(r20));
IkReal x1523=((IkReal(0.0975200000000000))*(sj4));
IkReal x1524=((r21)*(sj6));
IkReal x1525=((cj6)*(r21)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((sj3)+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1519)*(x1520)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1520))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj4)*(x1522)))+(((IkReal(-1.00000000000000))*(sj5)*(x1519)*(x1521)))+(((IkReal(-1.00000000000000))*(x1517)*(x1521)))+(((cj4)*(x1524)))+(((IkReal(-1.00000000000000))*(x1521)*(x1525))));
evalcond[3]=((((cj4)*(x1517)))+(((cj4)*(sj5)*(x1519)))+(((sj4)*(x1524)))+(((cj4)*(x1525)))+(((IkReal(-1.00000000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(x1521)*(x1522))));
evalcond[4]=((IkReal(0.115380000000000))+(((x1518)*(x1525)))+(((x1523)*(x1524)))+(((IkReal(-1.00000000000000))*(pz)))+(((x1517)*(x1518)))+(((IkReal(-1.00000000000000))*(x1522)*(x1523)))+(((IkReal(0.0716400000000000))*(x1517)))+(((IkReal(0.0716400000000000))*(x1525)))+(((sj5)*(x1518)*(x1519)))+(((IkReal(0.0716400000000000))*(sj5)*(x1519))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign(cj3);
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj3;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1526=((cj5)*(r22));
IkReal x1527=((IkReal(0.0975200000000000))*(cj4));
IkReal x1528=((r20)*(sj6));
IkReal x1529=((IkReal(1.00000000000000))*(cj5));
IkReal x1530=((IkReal(1.00000000000000))*(sj4));
IkReal x1531=((cj4)*(cj5));
IkReal x1532=((cj4)*(sj5));
IkReal x1533=((cj6)*(r20));
IkReal x1534=((IkReal(0.0975200000000000))*(sj4));
IkReal x1535=((cj6)*(r21));
IkReal x1536=((r21)*(sj6));
IkReal x1537=((sj4)*(sj6));
IkReal x1538=((sj5)*(x1535));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1529)*(x1535)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1528)*(x1529))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1530)*(x1538)))+(((IkReal(-1.00000000000000))*(sj5)*(x1528)*(x1530)))+(((cj4)*(x1536)))+(((IkReal(-1.00000000000000))*(x1526)*(x1530)))+(((IkReal(-1.00000000000000))*(cj4)*(x1533))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1530)*(x1533)))+(((x1528)*(x1532)))+(((x1532)*(x1535)))+(((sj4)*(x1536)))+(((cj4)*(x1526))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1530)))+(((r12)*(x1531)))+(((cj6)*(r11)*(x1532)))+(((r11)*(x1537)))+(((r10)*(sj6)*(x1532))));
evalcond[5]=((((r01)*(x1537)))+(((cj6)*(r01)*(x1532)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1530)))+(((r02)*(x1531)))+(((r00)*(sj6)*(x1532))));
evalcond[6]=((IkReal(0.115380000000000))+(((sj5)*(x1527)*(x1528)))+(((x1527)*(x1538)))+(((IkReal(-1.00000000000000))*(pz)))+(((x1526)*(x1527)))+(((IkReal(-1.00000000000000))*(x1533)*(x1534)))+(((IkReal(0.0716400000000000))*(sj5)*(x1528)))+(((IkReal(0.0716400000000000))*(x1526)))+(((IkReal(0.0716400000000000))*(x1538)))+(((x1534)*(x1536))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1539=((cj5)*(sj6));
IkReal x1540=((cj5)*(cj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(x1540)))+(((IkReal(-1.00000000000000))*(r00)*(x1539)))+(((r02)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r10)*(x1539)))+(((r11)*(x1540)))+(((IkReal(-1.00000000000000))*(r12)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(x1540)))+(((IkReal(-1.00000000000000))*(r00)*(x1539)))+(((r02)*(sj5)))))+IKsqr(((((r10)*(x1539)))+(((r11)*(x1540)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(x1540)))+(((IkReal(-1.00000000000000))*(r00)*(x1539)))+(((r02)*(sj5)))), ((((r10)*(x1539)))+(((r11)*(x1540)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1541=IKcos(j1);
IkReal x1542=IKsin(j1);
IkReal x1543=((IkReal(1.00000000000000))*(r00));
IkReal x1544=((sj4)*(sj6));
IkReal x1545=((cj4)*(cj6));
IkReal x1546=((cj5)*(sj6));
IkReal x1547=((cj6)*(sj4));
IkReal x1548=((IkReal(0.0975200000000000))*(r10));
IkReal x1549=((cj5)*(r02));
IkReal x1550=((IkReal(1.00000000000000))*(sj4));
IkReal x1551=((IkReal(0.0975200000000000))*(cj4));
IkReal x1552=((cj5)*(r12));
IkReal x1553=((IkReal(0.0975200000000000))*(r11));
IkReal x1554=((IkReal(1.00000000000000))*(sj5));
IkReal x1555=((IkReal(1.00000000000000))*(r10));
IkReal x1556=((sj5)*(sj6));
IkReal x1557=((cj4)*(sj6));
IkReal x1558=((IkReal(0.0975200000000000))*(r01));
IkReal x1559=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1560=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1546)*(x1555)))+(x1541)+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1560))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1542)))+(((IkReal(-1.00000000000000))*(x1543)*(x1546)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x1560))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1543)*(x1545)))+(((r01)*(x1557)))+(((IkReal(-1.00000000000000))*(x1549)*(x1550)))+(x1541)+(((IkReal(-1.00000000000000))*(sj5)*(x1543)*(x1544)))+(((IkReal(-1.00000000000000))*(r01)*(x1547)*(x1554))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x1544)*(x1554)))+(((r11)*(x1557)))+(((IkReal(-1.00000000000000))*(r11)*(x1547)*(x1554)))+(x1542)+(((IkReal(-1.00000000000000))*(x1545)*(x1555)))+(((IkReal(-1.00000000000000))*(x1550)*(x1552))));
evalcond[4]=((((r01)*(x1559)))+(((x1544)*(x1558)))+(((IkReal(-0.125830000000000))*(x1541)))+(((IkReal(0.0716400000000000))*(x1549)))+(((sj5)*(x1545)*(x1558)))+(((IkReal(-1.00000000000000))*(px)))+(((x1549)*(x1551)))+(((IkReal(0.0716400000000000))*(r00)*(x1556)))+(((IkReal(0.0135000000000000))*(x1542)))+(((IkReal(-0.0975200000000000))*(r00)*(x1547)))+(((r00)*(x1551)*(x1556))));
evalcond[5]=((((x1551)*(x1552)))+(((cj4)*(x1548)*(x1556)))+(((x1544)*(x1553)))+(((IkReal(-0.125830000000000))*(x1542)))+(((IkReal(0.0716400000000000))*(x1552)))+(((r11)*(x1559)))+(((sj5)*(x1545)*(x1553)))+(((IkReal(-0.0135000000000000))*(x1541)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x1547)*(x1548)))+(((IkReal(0.0716400000000000))*(r10)*(x1556))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1561=((cj5)*(r22));
IkReal x1562=((IkReal(0.0975200000000000))*(cj4));
IkReal x1563=((r20)*(sj6));
IkReal x1564=((IkReal(1.00000000000000))*(cj5));
IkReal x1565=((IkReal(1.00000000000000))*(sj4));
IkReal x1566=((cj4)*(cj5));
IkReal x1567=((cj4)*(sj5));
IkReal x1568=((cj6)*(r20));
IkReal x1569=((IkReal(0.0975200000000000))*(sj4));
IkReal x1570=((cj6)*(r21));
IkReal x1571=((r21)*(sj6));
IkReal x1572=((sj4)*(sj6));
IkReal x1573=((sj5)*(x1570));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1564)*(x1570)))+(((IkReal(-1.00000000000000))*(x1563)*(x1564))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1565)*(x1573)))+(((cj4)*(x1571)))+(((IkReal(-1.00000000000000))*(sj5)*(x1563)*(x1565)))+(((IkReal(-1.00000000000000))*(x1561)*(x1565)))+(((IkReal(-1.00000000000000))*(cj4)*(x1568))));
evalcond[3]=((IkReal(1.00000000000000))+(((x1567)*(x1570)))+(((IkReal(-1.00000000000000))*(x1565)*(x1568)))+(((cj4)*(x1561)))+(((sj4)*(x1571)))+(((x1563)*(x1567))));
evalcond[4]=((((r10)*(sj6)*(x1567)))+(((cj6)*(r11)*(x1567)))+(((r12)*(x1566)))+(((r11)*(x1572)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1565))));
evalcond[5]=((((r00)*(sj6)*(x1567)))+(((r02)*(x1566)))+(((cj6)*(r01)*(x1567)))+(((r01)*(x1572)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1565))));
evalcond[6]=((IkReal(0.115380000000000))+(((x1569)*(x1571)))+(((IkReal(0.0716400000000000))*(sj5)*(x1563)))+(((IkReal(0.0716400000000000))*(x1561)))+(((IkReal(0.0716400000000000))*(x1573)))+(((IkReal(-1.00000000000000))*(x1568)*(x1569)))+(((IkReal(-1.00000000000000))*(pz)))+(((x1561)*(x1562)))+(((x1562)*(x1573)))+(((sj5)*(x1562)*(x1563))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1574=((cj5)*(sj6));
IkReal x1575=((cj5)*(cj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r02)*(sj5)))+(((r01)*(x1575)))+(((r00)*(x1574))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r10)*(x1574)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1575))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r02)*(sj5)))+(((r01)*(x1575)))+(((r00)*(x1574)))))+IKsqr(((((IkReal(-1.00000000000000))*(r10)*(x1574)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1575)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r02)*(sj5)))+(((r01)*(x1575)))+(((r00)*(x1574)))), ((((IkReal(-1.00000000000000))*(r10)*(x1574)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1575)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1576=IKcos(j1);
IkReal x1577=IKsin(j1);
IkReal x1578=((IkReal(1.00000000000000))*(r00));
IkReal x1579=((sj4)*(sj6));
IkReal x1580=((cj4)*(cj6));
IkReal x1581=((cj5)*(sj6));
IkReal x1582=((cj6)*(sj4));
IkReal x1583=((IkReal(0.0975200000000000))*(r10));
IkReal x1584=((cj5)*(r02));
IkReal x1585=((IkReal(1.00000000000000))*(sj4));
IkReal x1586=((IkReal(0.0975200000000000))*(cj4));
IkReal x1587=((cj5)*(r12));
IkReal x1588=((IkReal(0.0975200000000000))*(r11));
IkReal x1589=((IkReal(1.00000000000000))*(sj5));
IkReal x1590=((IkReal(1.00000000000000))*(r10));
IkReal x1591=((sj5)*(sj6));
IkReal x1592=((cj4)*(sj6));
IkReal x1593=((IkReal(0.0975200000000000))*(r01));
IkReal x1594=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1595=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1581)*(x1590)))+(((IkReal(-1.00000000000000))*(x1576)))+(((IkReal(-1.00000000000000))*(r11)*(x1595))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1578)*(x1581)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x1595)))+(x1577));
evalcond[2]=((((r01)*(x1592)))+(((IkReal(-1.00000000000000))*(x1578)*(x1580)))+(((IkReal(-1.00000000000000))*(r01)*(x1582)*(x1589)))+(((IkReal(-1.00000000000000))*(x1584)*(x1585)))+(x1576)+(((IkReal(-1.00000000000000))*(sj5)*(x1578)*(x1579))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1580)*(x1590)))+(((IkReal(-1.00000000000000))*(x1585)*(x1587)))+(((IkReal(-1.00000000000000))*(r10)*(x1579)*(x1589)))+(((IkReal(-1.00000000000000))*(r11)*(x1582)*(x1589)))+(((r11)*(x1592)))+(x1577));
evalcond[4]=((((r01)*(x1594)))+(((x1584)*(x1586)))+(((IkReal(-0.125830000000000))*(x1576)))+(((sj5)*(x1580)*(x1593)))+(((IkReal(0.0716400000000000))*(x1584)))+(((IkReal(-0.0975200000000000))*(r00)*(x1582)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0716400000000000))*(r00)*(x1591)))+(((IkReal(0.0135000000000000))*(x1577)))+(((r00)*(x1586)*(x1591)))+(((x1579)*(x1593))));
evalcond[5]=((((x1586)*(x1587)))+(((IkReal(-0.125830000000000))*(x1577)))+(((cj4)*(x1583)*(x1591)))+(((r11)*(x1594)))+(((IkReal(0.0716400000000000))*(r10)*(x1591)))+(((IkReal(-0.0135000000000000))*(x1576)))+(((IkReal(0.0716400000000000))*(x1587)))+(((sj5)*(x1580)*(x1588)))+(((IkReal(-1.00000000000000))*(py)))+(((x1579)*(x1588)))+(((IkReal(-1.00000000000000))*(x1582)*(x1583))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1596=((cj4)*(sj5));
if( IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r00)*(sj6)*(x1596)))+(((cj6)*(r01)*(x1596)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(r10)*(sj6)))+(((cj5)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r12)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r00)*(sj6)*(x1596)))+(((cj6)*(r01)*(x1596)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj4)))))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(r10)*(sj6)))+(((cj5)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r00)*(sj6)*(x1596)))+(((cj6)*(r01)*(x1596)))+(((r01)*(sj4)*(sj6)))+(((cj4)*(cj5)*(r02)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj4)))))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(r10)*(sj6)))+(((cj5)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1597=IKcos(j1);
IkReal x1598=IKsin(j1);
IkReal x1599=((IkReal(1.00000000000000))*(r00));
IkReal x1600=((cj4)*(cj6));
IkReal x1601=((cj5)*(sj6));
IkReal x1602=((cj6)*(sj4));
IkReal x1603=((IkReal(0.0975200000000000))*(r10));
IkReal x1604=((r11)*(sj6));
IkReal x1605=((cj5)*(r02));
IkReal x1606=((IkReal(1.00000000000000))*(sj4));
IkReal x1607=((IkReal(0.0975200000000000))*(cj4));
IkReal x1608=((cj5)*(r12));
IkReal x1609=((IkReal(0.0975200000000000))*(sj4));
IkReal x1610=((r11)*(sj5));
IkReal x1611=((IkReal(1.00000000000000))*(r10));
IkReal x1612=((IkReal(1.00000000000000))*(r01));
IkReal x1613=((cj5)*(cj6));
IkReal x1614=((sj5)*(sj6));
IkReal x1615=((r01)*(sj6));
IkReal x1616=((r01)*(sj5));
IkReal x1617=((IkReal(1.00000000000000))*(x1598));
IkReal x1618=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1619=((r10)*(x1614));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x1613)))+(((cj3)*(x1597)))+(((IkReal(-1.00000000000000))*(x1601)*(x1611)))+(((r12)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj3)*(x1617)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1599)*(x1601)))+(((IkReal(-1.00000000000000))*(x1612)*(x1613))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj4)*(x1599)*(x1614)))+(((IkReal(-1.00000000000000))*(sj5)*(x1602)*(x1612)))+(((cj4)*(x1615)))+(((IkReal(-1.00000000000000))*(x1599)*(x1600)))+(x1597)+(((IkReal(-1.00000000000000))*(x1605)*(x1606))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1606)*(x1619)))+(((cj4)*(x1604)))+(((IkReal(-1.00000000000000))*(x1602)*(x1610)))+(x1598)+(((IkReal(-1.00000000000000))*(x1600)*(x1611)))+(((IkReal(-1.00000000000000))*(x1606)*(x1608))));
evalcond[4]=((((cj4)*(x1608)))+(((cj4)*(x1619)))+(((x1600)*(x1610)))+(((sj4)*(x1604)))+(((IkReal(-1.00000000000000))*(x1602)*(x1611)))+(((sj3)*(x1597))));
evalcond[5]=((((cj4)*(x1605)))+(((x1600)*(x1616)))+(((IkReal(-1.00000000000000))*(x1599)*(x1602)))+(((sj4)*(x1615)))+(((cj4)*(r00)*(x1614)))+(((IkReal(-1.00000000000000))*(sj3)*(x1617))));
evalcond[6]=((((IkReal(0.0716400000000000))*(cj6)*(x1616)))+(((IkReal(-0.125830000000000))*(x1597)))+(((IkReal(0.0716400000000000))*(x1605)))+(((x1609)*(x1615)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0135000000000000))*(x1598)))+(((IkReal(-0.0975200000000000))*(r00)*(x1602)))+(((r00)*(x1607)*(x1614)))+(((x1605)*(x1607)))+(((IkReal(0.0716400000000000))*(r00)*(x1614)))+(((IkReal(0.0975200000000000))*(x1600)*(x1616))));
evalcond[7]=((((IkReal(0.0716400000000000))*(cj6)*(x1610)))+(((IkReal(-0.0135000000000000))*(x1597)))+(((IkReal(-0.125830000000000))*(x1598)))+(((IkReal(0.0716400000000000))*(x1608)))+(((IkReal(-1.00000000000000))*(py)))+(((x1607)*(x1608)))+(((IkReal(0.0716400000000000))*(x1619)))+(((IkReal(-1.00000000000000))*(x1602)*(x1603)))+(((cj4)*(x1603)*(x1614)))+(((IkReal(0.0975200000000000))*(x1600)*(x1610)))+(((x1604)*(x1609))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1620=((sj4)*(sj5));
IkReal x1621=((r10)*(sj6));
IkReal x1622=((cj6)*(r11));
if( IKabs(((((cj5)*(r12)*(sj4)))+(((x1620)*(x1622)))+(((x1620)*(x1621)))+(((IkReal(-1.00000000000000))*(cj4)*(r11)*(sj6)))+(((cj4)*(cj6)*(r10))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(x1621)))+(((cj5)*(x1622)))+(((IkReal(-1.00000000000000))*(r12)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj5)*(r12)*(sj4)))+(((x1620)*(x1622)))+(((x1620)*(x1621)))+(((IkReal(-1.00000000000000))*(cj4)*(r11)*(sj6)))+(((cj4)*(cj6)*(r10)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(x1621)))+(((cj5)*(x1622)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((cj5)*(r12)*(sj4)))+(((x1620)*(x1622)))+(((x1620)*(x1621)))+(((IkReal(-1.00000000000000))*(cj4)*(r11)*(sj6)))+(((cj4)*(cj6)*(r10)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(x1621)))+(((cj5)*(x1622)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1623=IKcos(j1);
IkReal x1624=IKsin(j1);
IkReal x1625=((IkReal(1.00000000000000))*(r00));
IkReal x1626=((cj4)*(cj6));
IkReal x1627=((cj5)*(sj6));
IkReal x1628=((cj6)*(sj4));
IkReal x1629=((IkReal(0.0975200000000000))*(r10));
IkReal x1630=((r11)*(sj6));
IkReal x1631=((cj5)*(r02));
IkReal x1632=((IkReal(1.00000000000000))*(sj4));
IkReal x1633=((IkReal(0.0975200000000000))*(cj4));
IkReal x1634=((cj5)*(r12));
IkReal x1635=((IkReal(0.0975200000000000))*(sj4));
IkReal x1636=((r11)*(sj5));
IkReal x1637=((IkReal(1.00000000000000))*(r10));
IkReal x1638=((IkReal(1.00000000000000))*(r01));
IkReal x1639=((cj5)*(cj6));
IkReal x1640=((sj5)*(sj6));
IkReal x1641=((r01)*(sj6));
IkReal x1642=((r01)*(sj5));
IkReal x1643=((IkReal(1.00000000000000))*(x1624));
IkReal x1644=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1645=((r10)*(x1640));
evalcond[0]=((((r12)*(sj5)))+(((cj3)*(x1623)))+(((IkReal(-1.00000000000000))*(r11)*(x1639)))+(((IkReal(-1.00000000000000))*(x1627)*(x1637))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1638)*(x1639)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj3)*(x1643)))+(((IkReal(-1.00000000000000))*(x1625)*(x1627))));
evalcond[2]=((x1623)+(((IkReal(-1.00000000000000))*(x1625)*(x1626)))+(((IkReal(-1.00000000000000))*(sj5)*(x1628)*(x1638)))+(((IkReal(-1.00000000000000))*(x1631)*(x1632)))+(((IkReal(-1.00000000000000))*(sj4)*(x1625)*(x1640)))+(((cj4)*(x1641))));
evalcond[3]=((x1624)+(((IkReal(-1.00000000000000))*(x1628)*(x1636)))+(((IkReal(-1.00000000000000))*(x1632)*(x1634)))+(((IkReal(-1.00000000000000))*(x1632)*(x1645)))+(((IkReal(-1.00000000000000))*(x1626)*(x1637)))+(((cj4)*(x1630))));
evalcond[4]=((((sj3)*(x1623)))+(((IkReal(-1.00000000000000))*(x1628)*(x1637)))+(((sj4)*(x1630)))+(((cj4)*(x1634)))+(((cj4)*(x1645)))+(((x1626)*(x1636))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj3)*(x1643)))+(((x1626)*(x1642)))+(((cj4)*(r00)*(x1640)))+(((IkReal(-1.00000000000000))*(x1625)*(x1628)))+(((sj4)*(x1641)))+(((cj4)*(x1631))));
evalcond[6]=((((IkReal(0.0135000000000000))*(x1624)))+(((IkReal(-0.125830000000000))*(x1623)))+(((IkReal(0.0716400000000000))*(r00)*(x1640)))+(((r00)*(x1633)*(x1640)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.0975200000000000))*(r00)*(x1628)))+(((x1635)*(x1641)))+(((IkReal(0.0975200000000000))*(x1626)*(x1642)))+(((IkReal(0.0716400000000000))*(x1631)))+(((IkReal(0.0716400000000000))*(cj6)*(x1642)))+(((x1631)*(x1633))));
evalcond[7]=((((IkReal(-0.0135000000000000))*(x1623)))+(((IkReal(-0.125830000000000))*(x1624)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x1628)*(x1629)))+(((IkReal(0.0975200000000000))*(x1626)*(x1636)))+(((IkReal(0.0716400000000000))*(x1645)))+(((IkReal(0.0716400000000000))*(x1634)))+(((x1633)*(x1634)))+(((x1630)*(x1635)))+(((cj4)*(x1629)*(x1640)))+(((IkReal(0.0716400000000000))*(cj6)*(x1636))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1646=((cj5)*(sj6));
IkReal x1647=((cj5)*(cj6));
if( IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(r01)*(x1647)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(x1646))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((r11)*(x1647)))+(((r10)*(x1646)))+(((IkReal(-1.00000000000000))*(r12)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst14)*(((((IkReal(-1.00000000000000))*(r01)*(x1647)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(x1646)))))), ((gconst14)*(((((r11)*(x1647)))+(((r10)*(x1646)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1648=IKcos(j1);
IkReal x1649=IKsin(j1);
IkReal x1650=((IkReal(1.00000000000000))*(r00));
IkReal x1651=((cj4)*(cj6));
IkReal x1652=((cj5)*(sj6));
IkReal x1653=((cj6)*(sj4));
IkReal x1654=((IkReal(0.0975200000000000))*(r10));
IkReal x1655=((r11)*(sj6));
IkReal x1656=((cj5)*(r02));
IkReal x1657=((IkReal(1.00000000000000))*(sj4));
IkReal x1658=((IkReal(0.0975200000000000))*(cj4));
IkReal x1659=((cj5)*(r12));
IkReal x1660=((IkReal(0.0975200000000000))*(sj4));
IkReal x1661=((r11)*(sj5));
IkReal x1662=((IkReal(1.00000000000000))*(r10));
IkReal x1663=((IkReal(1.00000000000000))*(r01));
IkReal x1664=((cj5)*(cj6));
IkReal x1665=((sj5)*(sj6));
IkReal x1666=((r01)*(sj6));
IkReal x1667=((r01)*(sj5));
IkReal x1668=((IkReal(1.00000000000000))*(x1649));
IkReal x1669=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1670=((r10)*(x1665));
evalcond[0]=((((cj3)*(x1648)))+(((IkReal(-1.00000000000000))*(x1652)*(x1662)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1664))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1650)*(x1652)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1663)*(x1664)))+(((IkReal(-1.00000000000000))*(cj3)*(x1668))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1656)*(x1657)))+(((IkReal(-1.00000000000000))*(sj4)*(x1650)*(x1665)))+(((cj4)*(x1666)))+(x1648)+(((IkReal(-1.00000000000000))*(x1650)*(x1651)))+(((IkReal(-1.00000000000000))*(sj5)*(x1653)*(x1663))));
evalcond[3]=((((cj4)*(x1655)))+(x1649)+(((IkReal(-1.00000000000000))*(x1653)*(x1661)))+(((IkReal(-1.00000000000000))*(x1657)*(x1659)))+(((IkReal(-1.00000000000000))*(x1657)*(x1670)))+(((IkReal(-1.00000000000000))*(x1651)*(x1662))));
evalcond[4]=((((cj4)*(x1659)))+(((IkReal(-1.00000000000000))*(x1653)*(x1662)))+(((sj3)*(x1648)))+(((cj4)*(x1670)))+(((x1651)*(x1661)))+(((sj4)*(x1655))));
evalcond[5]=((((cj4)*(x1656)))+(((IkReal(-1.00000000000000))*(sj3)*(x1668)))+(((cj4)*(r00)*(x1665)))+(((IkReal(-1.00000000000000))*(x1650)*(x1653)))+(((x1651)*(x1667)))+(((sj4)*(x1666))));
evalcond[6]=((((x1656)*(x1658)))+(((x1660)*(x1666)))+(((IkReal(0.0975200000000000))*(x1651)*(x1667)))+(((IkReal(0.0716400000000000))*(r00)*(x1665)))+(((IkReal(0.0135000000000000))*(x1649)))+(((IkReal(-0.0975200000000000))*(r00)*(x1653)))+(((IkReal(-1.00000000000000))*(px)))+(((r00)*(x1658)*(x1665)))+(((IkReal(0.0716400000000000))*(cj6)*(x1667)))+(((IkReal(-0.125830000000000))*(x1648)))+(((IkReal(0.0716400000000000))*(x1656))));
evalcond[7]=((((IkReal(0.0975200000000000))*(x1651)*(x1661)))+(((IkReal(0.0716400000000000))*(x1670)))+(((x1655)*(x1660)))+(((IkReal(-1.00000000000000))*(x1653)*(x1654)))+(((cj4)*(x1654)*(x1665)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0716400000000000))*(cj6)*(x1661)))+(((x1658)*(x1659)))+(((IkReal(-0.0135000000000000))*(x1648)))+(((IkReal(-0.125830000000000))*(x1649)))+(((IkReal(0.0716400000000000))*(x1659))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1671=((cj5)*(r22));
IkReal x1672=((IkReal(0.0975200000000000))*(cj4));
IkReal x1673=((r20)*(sj6));
IkReal x1674=((IkReal(1.00000000000000))*(cj5));
IkReal x1675=((IkReal(1.00000000000000))*(sj4));
IkReal x1676=((cj6)*(r20));
IkReal x1677=((IkReal(0.0975200000000000))*(sj4));
IkReal x1678=((r21)*(sj6));
IkReal x1679=((cj6)*(r21)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(x1673)*(x1674)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1674))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj5)*(x1673)*(x1675)))+(((cj4)*(x1678)))+(((IkReal(-1.00000000000000))*(x1671)*(x1675)))+(((IkReal(-1.00000000000000))*(cj4)*(x1676)))+(((IkReal(-1.00000000000000))*(x1675)*(x1679))));
evalcond[3]=((cj3)+(((sj4)*(x1678)))+(((cj4)*(x1671)))+(((cj4)*(x1679)))+(((cj4)*(sj5)*(x1673)))+(((IkReal(-1.00000000000000))*(x1675)*(x1676))));
evalcond[4]=((IkReal(-0.115380000000000))+(((IkReal(0.0716400000000000))*(x1671)))+(((IkReal(0.0716400000000000))*(x1679)))+(((sj5)*(x1672)*(x1673)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(sj5)*(x1673)))+(((x1672)*(x1679)))+(((x1671)*(x1672)))+(((IkReal(-1.00000000000000))*(x1676)*(x1677)))+(((x1677)*(x1678))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(cj3);
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj3;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1680=((cj5)*(r22));
IkReal x1681=((IkReal(0.0975200000000000))*(cj4));
IkReal x1682=((r20)*(sj6));
IkReal x1683=((IkReal(1.00000000000000))*(cj5));
IkReal x1684=((IkReal(1.00000000000000))*(sj4));
IkReal x1685=((cj4)*(cj5));
IkReal x1686=((cj4)*(sj5));
IkReal x1687=((cj6)*(r20));
IkReal x1688=((IkReal(0.0975200000000000))*(sj4));
IkReal x1689=((cj6)*(r21));
IkReal x1690=((r21)*(sj6));
IkReal x1691=((sj4)*(sj6));
IkReal x1692=((sj5)*(x1689));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1682)*(x1683)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1683)*(x1689))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1684)*(x1692)))+(((cj4)*(x1690)))+(((IkReal(-1.00000000000000))*(cj4)*(x1687)))+(((IkReal(-1.00000000000000))*(x1680)*(x1684)))+(((IkReal(-1.00000000000000))*(sj5)*(x1682)*(x1684))));
evalcond[3]=((IkReal(1.00000000000000))+(((cj4)*(x1680)))+(((x1686)*(x1689)))+(((sj4)*(x1690)))+(((x1682)*(x1686)))+(((IkReal(-1.00000000000000))*(x1684)*(x1687))));
evalcond[4]=((((cj6)*(r11)*(x1686)))+(((r11)*(x1691)))+(((r12)*(x1685)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1684)))+(((r10)*(sj6)*(x1686))));
evalcond[5]=((((r01)*(x1691)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1684)))+(((r02)*(x1685)))+(((cj6)*(r01)*(x1686)))+(((r00)*(sj6)*(x1686))));
evalcond[6]=((IkReal(-0.115380000000000))+(((IkReal(0.0716400000000000))*(sj5)*(x1682)))+(((IkReal(-1.00000000000000))*(x1687)*(x1688)))+(((x1680)*(x1681)))+(((sj5)*(x1681)*(x1682)))+(((IkReal(0.0716400000000000))*(x1680)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(x1692)))+(((x1688)*(x1690)))+(((x1681)*(x1692))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1693=((cj5)*(sj6));
IkReal x1694=((cj5)*(cj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r00)*(x1693)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x1694))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r10)*(x1693)))+(((r11)*(x1694)))+(((IkReal(-1.00000000000000))*(r12)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r00)*(x1693)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x1694)))))+IKsqr(((((r10)*(x1693)))+(((r11)*(x1694)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r00)*(x1693)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x1694)))), ((((r10)*(x1693)))+(((r11)*(x1694)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1695=IKcos(j1);
IkReal x1696=IKsin(j1);
IkReal x1697=((IkReal(1.00000000000000))*(r00));
IkReal x1698=((cj4)*(cj6));
IkReal x1699=((cj5)*(sj6));
IkReal x1700=((IkReal(0.0975200000000000))*(sj4));
IkReal x1701=((cj5)*(r02));
IkReal x1702=((IkReal(1.00000000000000))*(sj4));
IkReal x1703=((IkReal(0.0975200000000000))*(cj4));
IkReal x1704=((cj5)*(r12));
IkReal x1705=((r11)*(sj6));
IkReal x1706=((cj6)*(sj5));
IkReal x1707=((IkReal(1.00000000000000))*(r10));
IkReal x1708=((IkReal(0.0975200000000000))*(sj5));
IkReal x1709=((sj5)*(sj6));
IkReal x1710=((r01)*(sj6));
IkReal x1711=((IkReal(1.00000000000000))*(x1696));
IkReal x1712=((r10)*(x1709));
IkReal x1713=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((x1695)+(((IkReal(-1.00000000000000))*(x1699)*(x1707)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1713))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1711)))+(((IkReal(-1.00000000000000))*(x1697)*(x1699)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x1713))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1695)))+(((cj4)*(x1710)))+(((IkReal(-1.00000000000000))*(x1697)*(x1698)))+(((IkReal(-1.00000000000000))*(r01)*(x1702)*(x1706)))+(((IkReal(-1.00000000000000))*(x1701)*(x1702)))+(((IkReal(-1.00000000000000))*(sj4)*(x1697)*(x1709))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1702)*(x1704)))+(((IkReal(-1.00000000000000))*(x1698)*(x1707)))+(((IkReal(-1.00000000000000))*(x1711)))+(((cj4)*(x1705)))+(((IkReal(-1.00000000000000))*(x1702)*(x1712)))+(((IkReal(-1.00000000000000))*(r11)*(x1702)*(x1706))));
evalcond[4]=((((IkReal(0.0716400000000000))*(r01)*(x1706)))+(((IkReal(-0.125830000000000))*(x1695)))+(((IkReal(0.0716400000000000))*(x1701)))+(((x1700)*(x1710)))+(((IkReal(-1.00000000000000))*(px)))+(((x1701)*(x1703)))+(((IkReal(0.0135000000000000))*(x1696)))+(((r00)*(x1703)*(x1709)))+(((IkReal(0.0716400000000000))*(r00)*(x1709)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1700)))+(((r01)*(x1698)*(x1708))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1700)))+(((IkReal(-0.125830000000000))*(x1696)))+(((x1703)*(x1712)))+(((IkReal(0.0716400000000000))*(x1704)))+(((x1703)*(x1704)))+(((IkReal(-0.0135000000000000))*(x1695)))+(((r11)*(x1698)*(x1708)))+(((x1700)*(x1705)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0716400000000000))*(r11)*(x1706)))+(((IkReal(0.0716400000000000))*(x1712))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1714=((cj5)*(r22));
IkReal x1715=((IkReal(0.0975200000000000))*(cj4));
IkReal x1716=((r20)*(sj6));
IkReal x1717=((IkReal(1.00000000000000))*(cj5));
IkReal x1718=((IkReal(1.00000000000000))*(sj4));
IkReal x1719=((cj4)*(cj5));
IkReal x1720=((cj4)*(sj5));
IkReal x1721=((cj6)*(r20));
IkReal x1722=((IkReal(0.0975200000000000))*(sj4));
IkReal x1723=((cj6)*(r21));
IkReal x1724=((r21)*(sj6));
IkReal x1725=((sj4)*(sj6));
IkReal x1726=((sj5)*(x1723));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1716)*(x1717)))+(((IkReal(-1.00000000000000))*(x1717)*(x1723))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1714)*(x1718)))+(((IkReal(-1.00000000000000))*(cj4)*(x1721)))+(((IkReal(-1.00000000000000))*(sj5)*(x1716)*(x1718)))+(((cj4)*(x1724)))+(((IkReal(-1.00000000000000))*(x1718)*(x1726))));
evalcond[3]=((IkReal(-1.00000000000000))+(((cj4)*(x1714)))+(((x1720)*(x1723)))+(((sj4)*(x1724)))+(((IkReal(-1.00000000000000))*(x1718)*(x1721)))+(((x1716)*(x1720))));
evalcond[4]=((((cj6)*(r11)*(x1720)))+(((r10)*(sj6)*(x1720)))+(((r12)*(x1719)))+(((r11)*(x1725)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1718))));
evalcond[5]=((((r02)*(x1719)))+(((r01)*(x1725)))+(((r00)*(sj6)*(x1720)))+(((cj6)*(r01)*(x1720)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1718))));
evalcond[6]=((IkReal(-0.115380000000000))+(((x1722)*(x1724)))+(((x1715)*(x1726)))+(((IkReal(0.0716400000000000))*(sj5)*(x1716)))+(((x1714)*(x1715)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0716400000000000))*(x1726)))+(((IkReal(-1.00000000000000))*(x1721)*(x1722)))+(((sj5)*(x1715)*(x1716)))+(((IkReal(0.0716400000000000))*(x1714))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1727=((cj5)*(sj6));
IkReal x1728=((cj5)*(cj6));
if( IKabs(((((r01)*(x1728)))+(((r00)*(x1727)))+(((IkReal(-1.00000000000000))*(r02)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r11)*(x1728)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r10)*(x1727))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(x1728)))+(((r00)*(x1727)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)))))+IKsqr(((((IkReal(-1.00000000000000))*(r11)*(x1728)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r10)*(x1727)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((r01)*(x1728)))+(((r00)*(x1727)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)))), ((((IkReal(-1.00000000000000))*(r11)*(x1728)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r10)*(x1727)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1729=IKsin(j1);
IkReal x1730=IKcos(j1);
IkReal x1731=((IkReal(1.00000000000000))*(r00));
IkReal x1732=((cj4)*(cj6));
IkReal x1733=((cj5)*(sj6));
IkReal x1734=((IkReal(0.0975200000000000))*(sj4));
IkReal x1735=((cj5)*(r02));
IkReal x1736=((IkReal(1.00000000000000))*(sj4));
IkReal x1737=((IkReal(0.0975200000000000))*(cj4));
IkReal x1738=((cj5)*(r12));
IkReal x1739=((r11)*(sj6));
IkReal x1740=((cj6)*(sj5));
IkReal x1741=((IkReal(1.00000000000000))*(r10));
IkReal x1742=((IkReal(0.0975200000000000))*(sj5));
IkReal x1743=((sj5)*(sj6));
IkReal x1744=((r01)*(sj6));
IkReal x1745=((IkReal(1.00000000000000))*(x1730));
IkReal x1746=((r10)*(x1743));
IkReal x1747=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x1747)))+(((IkReal(-1.00000000000000))*(x1733)*(x1741)))+(((IkReal(-1.00000000000000))*(x1745)))+(((r12)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1731)*(x1733)))+(x1729)+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x1747))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1731)*(x1732)))+(((IkReal(-1.00000000000000))*(r01)*(x1736)*(x1740)))+(((cj4)*(x1744)))+(((IkReal(-1.00000000000000))*(sj4)*(x1731)*(x1743)))+(((IkReal(-1.00000000000000))*(x1745)))+(((IkReal(-1.00000000000000))*(x1735)*(x1736))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x1736)*(x1740)))+(((IkReal(-1.00000000000000))*(x1732)*(x1741)))+(((IkReal(-1.00000000000000))*(x1736)*(x1746)))+(((IkReal(-1.00000000000000))*(x1736)*(x1738)))+(((cj4)*(x1739)))+(((IkReal(-1.00000000000000))*(x1729))));
evalcond[4]=((((r01)*(x1732)*(x1742)))+(((IkReal(0.0716400000000000))*(r01)*(x1740)))+(((x1734)*(x1744)))+(((r00)*(x1737)*(x1743)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1734)))+(((IkReal(0.0716400000000000))*(r00)*(x1743)))+(((IkReal(-1.00000000000000))*(px)))+(((x1735)*(x1737)))+(((IkReal(0.0716400000000000))*(x1735)))+(((IkReal(-0.125830000000000))*(x1730)))+(((IkReal(0.0135000000000000))*(x1729))));
evalcond[5]=((((IkReal(0.0716400000000000))*(x1746)))+(((IkReal(0.0716400000000000))*(r11)*(x1740)))+(((x1737)*(x1738)))+(((x1734)*(x1739)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0716400000000000))*(x1738)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1734)))+(((IkReal(-0.0135000000000000))*(x1730)))+(((IkReal(-0.125830000000000))*(x1729)))+(((x1737)*(x1746)))+(((r11)*(x1732)*(x1742))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1748=((cj4)*(sj5));
if( IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj6)*(r01)*(x1748)))+(((r01)*(sj4)*(sj6)))+(((r00)*(sj6)*(x1748)))+(((cj4)*(cj5)*(r02)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(r10)*(sj6)))+(((cj5)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r12)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj6)*(r01)*(x1748)))+(((r01)*(sj4)*(sj6)))+(((r00)*(sj6)*(x1748)))+(((cj4)*(cj5)*(r02)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj4)))))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(r10)*(sj6)))+(((cj5)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj6)*(r01)*(x1748)))+(((r01)*(sj4)*(sj6)))+(((r00)*(sj6)*(x1748)))+(((cj4)*(cj5)*(r02)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj4)))))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(r10)*(sj6)))+(((cj5)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1749=IKcos(j1);
IkReal x1750=IKsin(j1);
IkReal x1751=((IkReal(1.00000000000000))*(r00));
IkReal x1752=((cj4)*(cj6));
IkReal x1753=((cj5)*(sj6));
IkReal x1754=((cj6)*(sj4));
IkReal x1755=((IkReal(0.0975200000000000))*(r10));
IkReal x1756=((r11)*(sj6));
IkReal x1757=((cj5)*(r02));
IkReal x1758=((IkReal(1.00000000000000))*(sj4));
IkReal x1759=((IkReal(0.0975200000000000))*(cj4));
IkReal x1760=((cj5)*(r12));
IkReal x1761=((IkReal(0.0975200000000000))*(sj4));
IkReal x1762=((r11)*(sj5));
IkReal x1763=((IkReal(1.00000000000000))*(r10));
IkReal x1764=((IkReal(1.00000000000000))*(r01));
IkReal x1765=((cj5)*(cj6));
IkReal x1766=((sj5)*(sj6));
IkReal x1767=((r01)*(sj6));
IkReal x1768=((r01)*(sj5));
IkReal x1769=((IkReal(1.00000000000000))*(x1750));
IkReal x1770=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1771=((r10)*(x1766));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1753)*(x1763)))+(((cj3)*(x1749)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1765))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj3)*(x1769)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1751)*(x1753)))+(((IkReal(-1.00000000000000))*(x1764)*(x1765))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1757)*(x1758)))+(((IkReal(-1.00000000000000))*(sj5)*(x1754)*(x1764)))+(((cj4)*(x1767)))+(((IkReal(-1.00000000000000))*(x1751)*(x1752)))+(((IkReal(-1.00000000000000))*(x1749)))+(((IkReal(-1.00000000000000))*(sj4)*(x1751)*(x1766))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1752)*(x1763)))+(((IkReal(-1.00000000000000))*(x1769)))+(((IkReal(-1.00000000000000))*(x1758)*(x1771)))+(((IkReal(-1.00000000000000))*(x1754)*(x1762)))+(((IkReal(-1.00000000000000))*(x1758)*(x1760)))+(((cj4)*(x1756))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1754)*(x1763)))+(((sj4)*(x1756)))+(((cj4)*(x1760)))+(((cj4)*(x1771)))+(((x1752)*(x1762)))+(((sj3)*(x1749))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj3)*(x1769)))+(((IkReal(-1.00000000000000))*(x1751)*(x1754)))+(((x1752)*(x1768)))+(((sj4)*(x1767)))+(((cj4)*(x1757)))+(((cj4)*(r00)*(x1766))));
evalcond[6]=((((IkReal(-0.125830000000000))*(x1749)))+(((IkReal(0.0716400000000000))*(cj6)*(x1768)))+(((IkReal(0.0716400000000000))*(x1757)))+(((IkReal(-0.0975200000000000))*(r00)*(x1754)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0716400000000000))*(r00)*(x1766)))+(((IkReal(0.0135000000000000))*(x1750)))+(((IkReal(0.0975200000000000))*(x1752)*(x1768)))+(((x1761)*(x1767)))+(((r00)*(x1759)*(x1766)))+(((x1757)*(x1759))));
evalcond[7]=((((IkReal(-0.125830000000000))*(x1750)))+(((IkReal(0.0716400000000000))*(x1771)))+(((IkReal(0.0716400000000000))*(cj6)*(x1762)))+(((x1759)*(x1760)))+(((cj4)*(x1755)*(x1766)))+(((x1756)*(x1761)))+(((IkReal(-0.0135000000000000))*(x1749)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x1754)*(x1755)))+(((IkReal(0.0716400000000000))*(x1760)))+(((IkReal(0.0975200000000000))*(x1752)*(x1762))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1772=((IkReal(1.00000000000000))*(sj5));
IkReal x1773=((cj6)*(r11));
IkReal x1774=((r10)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(cj4)*(cj6)*(r10)))+(((IkReal(-1.00000000000000))*(cj5)*(r12)*(sj4)))+(((cj4)*(r11)*(sj6)))+(((IkReal(-1.00000000000000))*(sj4)*(x1772)*(x1774)))+(((IkReal(-1.00000000000000))*(sj4)*(x1772)*(x1773))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(x1774)))+(((cj5)*(x1773)))+(((IkReal(-1.00000000000000))*(r12)*(x1772))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj4)*(cj6)*(r10)))+(((IkReal(-1.00000000000000))*(cj5)*(r12)*(sj4)))+(((cj4)*(r11)*(sj6)))+(((IkReal(-1.00000000000000))*(sj4)*(x1772)*(x1774)))+(((IkReal(-1.00000000000000))*(sj4)*(x1772)*(x1773)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(x1774)))+(((cj5)*(x1773)))+(((IkReal(-1.00000000000000))*(r12)*(x1772)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj4)*(cj6)*(r10)))+(((IkReal(-1.00000000000000))*(cj5)*(r12)*(sj4)))+(((cj4)*(r11)*(sj6)))+(((IkReal(-1.00000000000000))*(sj4)*(x1772)*(x1774)))+(((IkReal(-1.00000000000000))*(sj4)*(x1772)*(x1773)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj5)*(x1774)))+(((cj5)*(x1773)))+(((IkReal(-1.00000000000000))*(r12)*(x1772)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1775=IKcos(j1);
IkReal x1776=IKsin(j1);
IkReal x1777=((IkReal(1.00000000000000))*(r00));
IkReal x1778=((cj4)*(cj6));
IkReal x1779=((cj5)*(sj6));
IkReal x1780=((cj6)*(sj4));
IkReal x1781=((IkReal(0.0975200000000000))*(r10));
IkReal x1782=((r11)*(sj6));
IkReal x1783=((cj5)*(r02));
IkReal x1784=((IkReal(1.00000000000000))*(sj4));
IkReal x1785=((IkReal(0.0975200000000000))*(cj4));
IkReal x1786=((cj5)*(r12));
IkReal x1787=((IkReal(0.0975200000000000))*(sj4));
IkReal x1788=((r11)*(sj5));
IkReal x1789=((IkReal(1.00000000000000))*(r10));
IkReal x1790=((IkReal(1.00000000000000))*(r01));
IkReal x1791=((cj5)*(cj6));
IkReal x1792=((sj5)*(sj6));
IkReal x1793=((r01)*(sj6));
IkReal x1794=((r01)*(sj5));
IkReal x1795=((IkReal(1.00000000000000))*(x1776));
IkReal x1796=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1797=((r10)*(x1792));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x1791)))+(((r12)*(sj5)))+(((cj3)*(x1775)))+(((IkReal(-1.00000000000000))*(x1779)*(x1789))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1790)*(x1791)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj3)*(x1795)))+(((IkReal(-1.00000000000000))*(x1777)*(x1779))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1783)*(x1784)))+(((IkReal(-1.00000000000000))*(x1775)))+(((IkReal(-1.00000000000000))*(sj5)*(x1780)*(x1790)))+(((cj4)*(x1793)))+(((IkReal(-1.00000000000000))*(sj4)*(x1777)*(x1792)))+(((IkReal(-1.00000000000000))*(x1777)*(x1778))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1795)))+(((IkReal(-1.00000000000000))*(x1780)*(x1788)))+(((IkReal(-1.00000000000000))*(x1784)*(x1797)))+(((IkReal(-1.00000000000000))*(x1784)*(x1786)))+(((IkReal(-1.00000000000000))*(x1778)*(x1789)))+(((cj4)*(x1782))));
evalcond[4]=((((x1778)*(x1788)))+(((sj3)*(x1775)))+(((sj4)*(x1782)))+(((IkReal(-1.00000000000000))*(x1780)*(x1789)))+(((cj4)*(x1797)))+(((cj4)*(x1786))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj3)*(x1795)))+(((IkReal(-1.00000000000000))*(x1777)*(x1780)))+(((x1778)*(x1794)))+(((cj4)*(r00)*(x1792)))+(((sj4)*(x1793)))+(((cj4)*(x1783))));
evalcond[6]=((((x1783)*(x1785)))+(((IkReal(-0.0975200000000000))*(r00)*(x1780)))+(((IkReal(0.0975200000000000))*(x1778)*(x1794)))+(((IkReal(0.0716400000000000))*(r00)*(x1792)))+(((r00)*(x1785)*(x1792)))+(((IkReal(0.0716400000000000))*(cj6)*(x1794)))+(((x1787)*(x1793)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.125830000000000))*(x1775)))+(((IkReal(0.0716400000000000))*(x1783)))+(((IkReal(0.0135000000000000))*(x1776))));
evalcond[7]=((((x1782)*(x1787)))+(((IkReal(-0.0135000000000000))*(x1775)))+(((IkReal(0.0975200000000000))*(x1778)*(x1788)))+(((IkReal(0.0716400000000000))*(cj6)*(x1788)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.125830000000000))*(x1776)))+(((IkReal(0.0716400000000000))*(x1786)))+(((IkReal(0.0716400000000000))*(x1797)))+(((x1785)*(x1786)))+(((cj4)*(x1781)*(x1792)))+(((IkReal(-1.00000000000000))*(x1780)*(x1781))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1798=((cj5)*(sj6));
IkReal x1799=((cj5)*(cj6));
if( IKabs(((gconst15)*(((((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(x1798)))+(((IkReal(-1.00000000000000))*(r01)*(x1799))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((r10)*(x1798)))+(((r11)*(x1799)))+(((IkReal(-1.00000000000000))*(r12)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst15)*(((((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(x1798)))+(((IkReal(-1.00000000000000))*(r01)*(x1799)))))), ((gconst15)*(((((r10)*(x1798)))+(((r11)*(x1799)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1800=IKcos(j1);
IkReal x1801=IKsin(j1);
IkReal x1802=((IkReal(1.00000000000000))*(r00));
IkReal x1803=((cj4)*(cj6));
IkReal x1804=((cj5)*(sj6));
IkReal x1805=((cj6)*(sj4));
IkReal x1806=((IkReal(0.0975200000000000))*(r10));
IkReal x1807=((r11)*(sj6));
IkReal x1808=((cj5)*(r02));
IkReal x1809=((IkReal(1.00000000000000))*(sj4));
IkReal x1810=((IkReal(0.0975200000000000))*(cj4));
IkReal x1811=((cj5)*(r12));
IkReal x1812=((IkReal(0.0975200000000000))*(sj4));
IkReal x1813=((r11)*(sj5));
IkReal x1814=((IkReal(1.00000000000000))*(r10));
IkReal x1815=((IkReal(1.00000000000000))*(r01));
IkReal x1816=((cj5)*(cj6));
IkReal x1817=((sj5)*(sj6));
IkReal x1818=((r01)*(sj6));
IkReal x1819=((r01)*(sj5));
IkReal x1820=((IkReal(1.00000000000000))*(x1801));
IkReal x1821=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1822=((r10)*(x1817));
evalcond[0]=((((cj3)*(x1800)))+(((IkReal(-1.00000000000000))*(x1804)*(x1814)))+(((IkReal(-1.00000000000000))*(r11)*(x1816)))+(((r12)*(sj5))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj3)*(x1820)))+(((IkReal(-1.00000000000000))*(x1802)*(x1804)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1815)*(x1816))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj5)*(x1805)*(x1815)))+(((IkReal(-1.00000000000000))*(sj4)*(x1802)*(x1817)))+(((IkReal(-1.00000000000000))*(x1802)*(x1803)))+(((IkReal(-1.00000000000000))*(x1808)*(x1809)))+(((cj4)*(x1818)))+(((IkReal(-1.00000000000000))*(x1800))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1820)))+(((IkReal(-1.00000000000000))*(x1809)*(x1811)))+(((IkReal(-1.00000000000000))*(x1805)*(x1813)))+(((IkReal(-1.00000000000000))*(x1803)*(x1814)))+(((IkReal(-1.00000000000000))*(x1809)*(x1822)))+(((cj4)*(x1807))));
evalcond[4]=((((sj4)*(x1807)))+(((cj4)*(x1822)))+(((IkReal(-1.00000000000000))*(x1805)*(x1814)))+(((sj3)*(x1800)))+(((x1803)*(x1813)))+(((cj4)*(x1811))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1802)*(x1805)))+(((x1803)*(x1819)))+(((cj4)*(r00)*(x1817)))+(((cj4)*(x1808)))+(((sj4)*(x1818)))+(((IkReal(-1.00000000000000))*(sj3)*(x1820))));
evalcond[6]=((((IkReal(0.0716400000000000))*(cj6)*(x1819)))+(((IkReal(0.0716400000000000))*(x1808)))+(((x1812)*(x1818)))+(((IkReal(-1.00000000000000))*(px)))+(((x1808)*(x1810)))+(((IkReal(0.0135000000000000))*(x1801)))+(((r00)*(x1810)*(x1817)))+(((IkReal(-0.0975200000000000))*(r00)*(x1805)))+(((IkReal(0.0975200000000000))*(x1803)*(x1819)))+(((IkReal(0.0716400000000000))*(r00)*(x1817)))+(((IkReal(-0.125830000000000))*(x1800))));
evalcond[7]=((((IkReal(0.0716400000000000))*(cj6)*(x1813)))+(((IkReal(0.0716400000000000))*(x1822)))+(((IkReal(-1.00000000000000))*(x1805)*(x1806)))+(((x1807)*(x1812)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0975200000000000))*(x1803)*(x1813)))+(((cj4)*(x1806)*(x1817)))+(((IkReal(0.0716400000000000))*(x1811)))+(((IkReal(-0.125830000000000))*(x1801)))+(((IkReal(-0.0135000000000000))*(x1800)))+(((x1810)*(x1811))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1823=((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30);
IkReal x1824=((r10)*(sj6));
IkReal x1825=((cj5)*(sj2));
IkReal x1826=((sj4)*(sj5));
IkReal x1827=((cj6)*(r11));
IkReal x1828=((cj2)*(sj3));
IkReal x1829=((cj5)*(r12)*(sj4));
IkReal x1830=((cj4)*(cj6)*(r10));
IkReal x1831=((IkReal(1.00000000000000))*(cj4)*(r11)*(sj6));
if( IKabs(((x1823)*(((((x1826)*(x1827)))+(((IkReal(-1.00000000000000))*(x1831)))+(((x1824)*(x1826)))+(x1829)+(x1830))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1823)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1828)*(x1831)))+(((x1824)*(x1825)))+(((x1825)*(x1827)))+(((x1828)*(x1829)))+(((x1824)*(x1826)*(x1828)))+(((x1828)*(x1830)))+(((x1826)*(x1827)*(x1828)))+(((IkReal(-1.00000000000000))*(r12)*(sj2)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1823)*(((((x1826)*(x1827)))+(((IkReal(-1.00000000000000))*(x1831)))+(((x1824)*(x1826)))+(x1829)+(x1830)))))+IKsqr(((x1823)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1828)*(x1831)))+(((x1824)*(x1825)))+(((x1825)*(x1827)))+(((x1828)*(x1829)))+(((x1824)*(x1826)*(x1828)))+(((x1828)*(x1830)))+(((x1826)*(x1827)*(x1828)))+(((IkReal(-1.00000000000000))*(r12)*(sj2)*(sj5)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((x1823)*(((((x1826)*(x1827)))+(((IkReal(-1.00000000000000))*(x1831)))+(((x1824)*(x1826)))+(x1829)+(x1830)))), ((x1823)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1828)*(x1831)))+(((x1824)*(x1825)))+(((x1825)*(x1827)))+(((x1828)*(x1829)))+(((x1824)*(x1826)*(x1828)))+(((x1828)*(x1830)))+(((x1826)*(x1827)*(x1828)))+(((IkReal(-1.00000000000000))*(r12)*(sj2)*(sj5)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1832=IKcos(j1);
IkReal x1833=IKsin(j1);
IkReal x1834=((IkReal(1.00000000000000))*(r00));
IkReal x1835=((cj4)*(cj6));
IkReal x1836=((cj5)*(sj6));
IkReal x1837=((cj6)*(sj4));
IkReal x1838=((r11)*(sj6));
IkReal x1839=((cj5)*(r02));
IkReal x1840=((IkReal(1.00000000000000))*(sj4));
IkReal x1841=((IkReal(0.0975200000000000))*(cj4));
IkReal x1842=((cj5)*(r12));
IkReal x1843=((IkReal(0.0975200000000000))*(sj4));
IkReal x1844=((IkReal(1.00000000000000))*(sj5));
IkReal x1845=((IkReal(1.00000000000000))*(r10));
IkReal x1846=((r11)*(sj5));
IkReal x1847=((cj2)*(sj3));
IkReal x1848=((sj5)*(sj6));
IkReal x1849=((r01)*(sj6));
IkReal x1850=((r01)*(sj5));
IkReal x1851=((IkReal(1.00000000000000))*(x1833));
IkReal x1852=((cj3)*(x1832));
IkReal x1853=((r10)*(x1837));
IkReal x1854=((cj2)*(x1833));
IkReal x1855=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1856=((r10)*(x1848));
IkReal x1857=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x1857)))+(x1852)+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1836)*(x1845)))+(((IkReal(-1.00000000000000))*(x1847)*(x1851))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1834)*(x1836)))+(((IkReal(-1.00000000000000))*(cj3)*(x1851)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x1857)))+(((IkReal(-1.00000000000000))*(x1832)*(x1847))));
evalcond[2]=((((cj4)*(x1849)))+(((IkReal(-1.00000000000000))*(x1834)*(x1835)))+(((IkReal(-1.00000000000000))*(x1839)*(x1840)))+(((sj2)*(x1832)))+(((IkReal(-1.00000000000000))*(r01)*(x1837)*(x1844)))+(((IkReal(-1.00000000000000))*(sj4)*(x1834)*(x1848))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1840)*(x1856)))+(((IkReal(-1.00000000000000))*(r11)*(x1837)*(x1844)))+(((sj2)*(x1833)))+(((cj4)*(x1838)))+(((IkReal(-1.00000000000000))*(x1835)*(x1845)))+(((IkReal(-1.00000000000000))*(x1840)*(x1842))));
evalcond[4]=((((cj4)*(x1842)))+(((sj3)*(x1832)))+(((cj3)*(x1854)))+(((IkReal(-1.00000000000000))*(x1837)*(x1845)))+(((x1835)*(x1846)))+(((cj4)*(x1856)))+(((sj4)*(x1838))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1834)*(x1837)))+(((cj4)*(r00)*(x1848)))+(((x1835)*(x1850)))+(((cj2)*(x1852)))+(((cj4)*(x1839)))+(((sj4)*(x1849)))+(((IkReal(-1.00000000000000))*(sj3)*(x1851))));
evalcond[6]=((((IkReal(0.0975200000000000))*(x1835)*(x1850)))+(((IkReal(0.0716400000000000))*(cj6)*(x1850)))+(((IkReal(0.0135000000000000))*(x1833)))+(((IkReal(-1.00000000000000))*(px)))+(((x1839)*(x1841)))+(((IkReal(0.0716400000000000))*(r00)*(x1848)))+(((IkReal(-0.115380000000000))*(cj2)*(x1832)))+(((IkReal(-0.125830000000000))*(x1832)))+(((x1843)*(x1849)))+(((IkReal(-0.0975200000000000))*(r00)*(x1837)))+(((r00)*(x1841)*(x1848)))+(((IkReal(0.0716400000000000))*(x1839))));
evalcond[7]=((((x1838)*(x1843)))+(((IkReal(0.0716400000000000))*(x1856)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0975200000000000))*(x1835)*(x1846)))+(((IkReal(-0.125830000000000))*(x1833)))+(((IkReal(0.0716400000000000))*(x1842)))+(((x1841)*(x1842)))+(((IkReal(-0.0975200000000000))*(x1853)))+(((IkReal(0.0716400000000000))*(cj6)*(x1846)))+(((IkReal(-0.115380000000000))*(x1854)))+(((x1841)*(x1856)))+(((IkReal(-0.0135000000000000))*(x1832))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1858=(cj3)*(cj3);
IkReal x1859=(sj3)*(sj3);
IkReal x1860=((r10)*(sj3));
IkReal x1861=((IkReal(1.00000000000000))*(sj4));
IkReal x1862=((IkReal(1.00000000000000))*(cj3));
IkReal x1863=((IkReal(1.00000000000000))*(cj5));
IkReal x1864=((r11)*(sj6));
IkReal x1865=((cj6)*(r11));
IkReal x1866=((cj4)*(sj5));
IkReal x1867=((r12)*(sj5));
IkReal x1868=((sj6)*(x1866));
IkReal x1869=((cj4)*(cj5)*(r12));
if( IKabs(((((IKabs(((((cj2)*(x1858)))+(((cj2)*(x1859))))) != 0)?((IkReal)1/(((((cj2)*(x1858)))+(((cj2)*(x1859)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r10)*(x1862)*(x1868)))+(((IkReal(-1.00000000000000))*(sj3)*(x1863)*(x1865)))+(((IkReal(-1.00000000000000))*(x1862)*(x1869)))+(((IkReal(-1.00000000000000))*(cj3)*(x1861)*(x1864)))+(((IkReal(-1.00000000000000))*(sj6)*(x1860)*(x1863)))+(((sj3)*(x1867)))+(((cj3)*(cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(x1862)*(x1865)*(x1866))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-1.00000000000000))*(x1858)))+(((IkReal(-1.00000000000000))*(x1859))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x1858)))+(((IkReal(-1.00000000000000))*(x1859)))))):(IkReal)1.0e30))*(((((cj3)*(x1867)))+(((x1860)*(x1868)))+(((sj3)*(sj4)*(x1864)))+(((IkReal(-1.00000000000000))*(cj5)*(x1862)*(x1865)))+(((IkReal(-1.00000000000000))*(cj6)*(x1860)*(x1861)))+(((sj3)*(x1869)))+(((sj3)*(x1865)*(x1866)))+(((IkReal(-1.00000000000000))*(cj5)*(r10)*(sj6)*(x1862))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((cj2)*(x1858)))+(((cj2)*(x1859))))) != 0)?((IkReal)1/(((((cj2)*(x1858)))+(((cj2)*(x1859)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r10)*(x1862)*(x1868)))+(((IkReal(-1.00000000000000))*(sj3)*(x1863)*(x1865)))+(((IkReal(-1.00000000000000))*(x1862)*(x1869)))+(((IkReal(-1.00000000000000))*(cj3)*(x1861)*(x1864)))+(((IkReal(-1.00000000000000))*(sj6)*(x1860)*(x1863)))+(((sj3)*(x1867)))+(((cj3)*(cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(x1862)*(x1865)*(x1866)))))))+IKsqr(((((IKabs(((((IkReal(-1.00000000000000))*(x1858)))+(((IkReal(-1.00000000000000))*(x1859))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x1858)))+(((IkReal(-1.00000000000000))*(x1859)))))):(IkReal)1.0e30))*(((((cj3)*(x1867)))+(((x1860)*(x1868)))+(((sj3)*(sj4)*(x1864)))+(((IkReal(-1.00000000000000))*(cj5)*(x1862)*(x1865)))+(((IkReal(-1.00000000000000))*(cj6)*(x1860)*(x1861)))+(((sj3)*(x1869)))+(((sj3)*(x1865)*(x1866)))+(((IkReal(-1.00000000000000))*(cj5)*(r10)*(sj6)*(x1862)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(((((cj2)*(x1858)))+(((cj2)*(x1859))))) != 0)?((IkReal)1/(((((cj2)*(x1858)))+(((cj2)*(x1859)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r10)*(x1862)*(x1868)))+(((IkReal(-1.00000000000000))*(sj3)*(x1863)*(x1865)))+(((IkReal(-1.00000000000000))*(x1862)*(x1869)))+(((IkReal(-1.00000000000000))*(cj3)*(x1861)*(x1864)))+(((IkReal(-1.00000000000000))*(sj6)*(x1860)*(x1863)))+(((sj3)*(x1867)))+(((cj3)*(cj6)*(r10)*(sj4)))+(((IkReal(-1.00000000000000))*(x1862)*(x1865)*(x1866)))))), ((((IKabs(((((IkReal(-1.00000000000000))*(x1858)))+(((IkReal(-1.00000000000000))*(x1859))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x1858)))+(((IkReal(-1.00000000000000))*(x1859)))))):(IkReal)1.0e30))*(((((cj3)*(x1867)))+(((x1860)*(x1868)))+(((sj3)*(sj4)*(x1864)))+(((IkReal(-1.00000000000000))*(cj5)*(x1862)*(x1865)))+(((IkReal(-1.00000000000000))*(cj6)*(x1860)*(x1861)))+(((sj3)*(x1869)))+(((sj3)*(x1865)*(x1866)))+(((IkReal(-1.00000000000000))*(cj5)*(r10)*(sj6)*(x1862)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1870=IKcos(j1);
IkReal x1871=IKsin(j1);
IkReal x1872=((IkReal(1.00000000000000))*(r00));
IkReal x1873=((cj4)*(cj6));
IkReal x1874=((cj5)*(sj6));
IkReal x1875=((cj6)*(sj4));
IkReal x1876=((r11)*(sj6));
IkReal x1877=((cj5)*(r02));
IkReal x1878=((IkReal(1.00000000000000))*(sj4));
IkReal x1879=((IkReal(0.0975200000000000))*(cj4));
IkReal x1880=((cj5)*(r12));
IkReal x1881=((IkReal(0.0975200000000000))*(sj4));
IkReal x1882=((IkReal(1.00000000000000))*(sj5));
IkReal x1883=((IkReal(1.00000000000000))*(r10));
IkReal x1884=((r11)*(sj5));
IkReal x1885=((cj2)*(sj3));
IkReal x1886=((sj5)*(sj6));
IkReal x1887=((r01)*(sj6));
IkReal x1888=((r01)*(sj5));
IkReal x1889=((IkReal(1.00000000000000))*(x1871));
IkReal x1890=((cj3)*(x1870));
IkReal x1891=((r10)*(x1875));
IkReal x1892=((cj2)*(x1871));
IkReal x1893=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1894=((r10)*(x1886));
IkReal x1895=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x1895)))+(x1890)+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1885)*(x1889)))+(((IkReal(-1.00000000000000))*(x1874)*(x1883))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1872)*(x1874)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj3)*(x1889)))+(((IkReal(-1.00000000000000))*(r01)*(x1895)))+(((IkReal(-1.00000000000000))*(x1870)*(x1885))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1872)*(x1873)))+(((cj4)*(x1887)))+(((IkReal(-1.00000000000000))*(x1877)*(x1878)))+(((sj2)*(x1870)))+(((IkReal(-1.00000000000000))*(r01)*(x1875)*(x1882)))+(((IkReal(-1.00000000000000))*(sj4)*(x1872)*(x1886))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1878)*(x1894)))+(((IkReal(-1.00000000000000))*(x1873)*(x1883)))+(((sj2)*(x1871)))+(((IkReal(-1.00000000000000))*(x1878)*(x1880)))+(((IkReal(-1.00000000000000))*(r11)*(x1875)*(x1882)))+(((cj4)*(x1876))));
evalcond[4]=((((cj4)*(x1880)))+(((IkReal(-1.00000000000000))*(x1875)*(x1883)))+(((cj4)*(x1894)))+(((sj3)*(x1870)))+(((x1873)*(x1884)))+(((cj3)*(x1892)))+(((sj4)*(x1876))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1872)*(x1875)))+(((sj4)*(x1887)))+(((x1873)*(x1888)))+(((cj4)*(r00)*(x1886)))+(((cj2)*(x1890)))+(((IkReal(-1.00000000000000))*(sj3)*(x1889)))+(((cj4)*(x1877))));
evalcond[6]=((((IkReal(-0.125830000000000))*(x1870)))+(((x1881)*(x1887)))+(((IkReal(0.0135000000000000))*(x1871)))+(((x1877)*(x1879)))+(((IkReal(0.0716400000000000))*(cj6)*(x1888)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0716400000000000))*(r00)*(x1886)))+(((IkReal(-0.115380000000000))*(cj2)*(x1870)))+(((IkReal(0.0975200000000000))*(x1873)*(x1888)))+(((IkReal(0.0716400000000000))*(x1877)))+(((r00)*(x1879)*(x1886)))+(((IkReal(-0.0975200000000000))*(r00)*(x1875))));
evalcond[7]=((((IkReal(-0.125830000000000))*(x1871)))+(((x1879)*(x1880)))+(((IkReal(-0.0975200000000000))*(x1891)))+(((x1876)*(x1881)))+(((x1879)*(x1894)))+(((IkReal(0.0716400000000000))*(cj6)*(x1884)))+(((IkReal(0.0716400000000000))*(x1880)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0716400000000000))*(x1894)))+(((IkReal(-0.115380000000000))*(x1892)))+(((IkReal(-0.0135000000000000))*(x1870)))+(((IkReal(0.0975200000000000))*(x1873)*(x1884))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1896=((r02)*(sj5));
IkReal x1897=((cj3)*(cj5));
IkReal x1898=((cj6)*(r11));
IkReal x1899=((cj2)*(sj3));
IkReal x1900=((IkReal(1.00000000000000))*(cj5));
IkReal x1901=((r10)*(sj6));
IkReal x1902=((r12)*(sj5));
IkReal x1903=((cj6)*(r01));
IkReal x1904=((IkReal(1.00000000000000))*(r00)*(sj6));
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(x1897)*(x1903)))+(((x1899)*(x1902)))+(((cj3)*(x1896)))+(((IkReal(-1.00000000000000))*(x1898)*(x1899)*(x1900)))+(((IkReal(-1.00000000000000))*(x1899)*(x1900)*(x1901)))+(((IkReal(-1.00000000000000))*(x1897)*(x1904))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(cj3)*(x1902)))+(((x1897)*(x1898)))+(((x1896)*(x1899)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1899)*(x1900)))+(((IkReal(-1.00000000000000))*(x1899)*(x1900)*(x1903)))+(((x1897)*(x1901))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(x1897)*(x1903)))+(((x1899)*(x1902)))+(((cj3)*(x1896)))+(((IkReal(-1.00000000000000))*(x1898)*(x1899)*(x1900)))+(((IkReal(-1.00000000000000))*(x1899)*(x1900)*(x1901)))+(((IkReal(-1.00000000000000))*(x1897)*(x1904)))))), ((gconst7)*(((((IkReal(-1.00000000000000))*(cj3)*(x1902)))+(((x1897)*(x1898)))+(((x1896)*(x1899)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1899)*(x1900)))+(((IkReal(-1.00000000000000))*(x1899)*(x1900)*(x1903)))+(((x1897)*(x1901)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1905=IKcos(j1);
IkReal x1906=IKsin(j1);
IkReal x1907=((IkReal(1.00000000000000))*(r00));
IkReal x1908=((cj4)*(cj6));
IkReal x1909=((cj5)*(sj6));
IkReal x1910=((cj6)*(sj4));
IkReal x1911=((r11)*(sj6));
IkReal x1912=((cj5)*(r02));
IkReal x1913=((IkReal(1.00000000000000))*(sj4));
IkReal x1914=((IkReal(0.0975200000000000))*(cj4));
IkReal x1915=((cj5)*(r12));
IkReal x1916=((IkReal(0.0975200000000000))*(sj4));
IkReal x1917=((IkReal(1.00000000000000))*(sj5));
IkReal x1918=((IkReal(1.00000000000000))*(r10));
IkReal x1919=((r11)*(sj5));
IkReal x1920=((cj2)*(sj3));
IkReal x1921=((sj5)*(sj6));
IkReal x1922=((r01)*(sj6));
IkReal x1923=((r01)*(sj5));
IkReal x1924=((IkReal(1.00000000000000))*(x1906));
IkReal x1925=((cj3)*(x1905));
IkReal x1926=((r10)*(x1910));
IkReal x1927=((cj2)*(x1906));
IkReal x1928=((IkReal(0.0716400000000000))*(cj6)*(sj5));
IkReal x1929=((r10)*(x1921));
IkReal x1930=((IkReal(1.00000000000000))*(cj5)*(cj6));
evalcond[0]=((x1925)+(((IkReal(-1.00000000000000))*(r11)*(x1930)))+(((r12)*(sj5)))+(((IkReal(-1.00000000000000))*(x1909)*(x1918)))+(((IkReal(-1.00000000000000))*(x1920)*(x1924))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x1930)))+(((IkReal(-1.00000000000000))*(x1907)*(x1909)))+(((r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1905)*(x1920)))+(((IkReal(-1.00000000000000))*(cj3)*(x1924))));
evalcond[2]=((((cj4)*(x1922)))+(((IkReal(-1.00000000000000))*(x1907)*(x1908)))+(((IkReal(-1.00000000000000))*(r01)*(x1910)*(x1917)))+(((IkReal(-1.00000000000000))*(sj4)*(x1907)*(x1921)))+(((IkReal(-1.00000000000000))*(x1912)*(x1913)))+(((sj2)*(x1905))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x1910)*(x1917)))+(((IkReal(-1.00000000000000))*(x1913)*(x1929)))+(((IkReal(-1.00000000000000))*(x1913)*(x1915)))+(((sj2)*(x1906)))+(((cj4)*(x1911)))+(((IkReal(-1.00000000000000))*(x1908)*(x1918))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1910)*(x1918)))+(((cj4)*(x1929)))+(((sj4)*(x1911)))+(((cj3)*(x1927)))+(((x1908)*(x1919)))+(((cj4)*(x1915)))+(((sj3)*(x1905))));
evalcond[5]=((((sj4)*(x1922)))+(((cj4)*(r00)*(x1921)))+(((IkReal(-1.00000000000000))*(x1907)*(x1910)))+(((cj2)*(x1925)))+(((IkReal(-1.00000000000000))*(sj3)*(x1924)))+(((x1908)*(x1923)))+(((cj4)*(x1912))));
evalcond[6]=((((IkReal(-0.0975200000000000))*(r00)*(x1910)))+(((IkReal(0.0135000000000000))*(x1906)))+(((x1912)*(x1914)))+(((IkReal(-0.125830000000000))*(x1905)))+(((IkReal(-0.115380000000000))*(cj2)*(x1905)))+(((r00)*(x1914)*(x1921)))+(((IkReal(0.0716400000000000))*(x1912)))+(((IkReal(-1.00000000000000))*(px)))+(((x1916)*(x1922)))+(((IkReal(0.0975200000000000))*(x1908)*(x1923)))+(((IkReal(0.0716400000000000))*(r00)*(x1921)))+(((IkReal(0.0716400000000000))*(cj6)*(x1923))));
evalcond[7]=((((IkReal(0.0716400000000000))*(x1929)))+(((IkReal(-0.125830000000000))*(x1906)))+(((IkReal(0.0716400000000000))*(x1915)))+(((x1914)*(x1915)))+(((IkReal(0.0716400000000000))*(cj6)*(x1919)))+(((x1911)*(x1916)))+(((IkReal(0.0975200000000000))*(x1908)*(x1919)))+(((IkReal(-0.115380000000000))*(x1927)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.0975200000000000))*(x1926)))+(((x1914)*(x1929)))+(((IkReal(-0.0135000000000000))*(x1905))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}
    }
}
return solutions.GetNumSolutions()>0;
}

/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly12qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[24*24]) = {0};
    IkReal IKFAST_ALIGNED16(A[12*12]);
    IkReal IKFAST_ALIGNED16(work[24*24*23]);
    int ipiv[12];
    int info, coeffindex;
    const int worksize=24*24*23;
    const int matrixdim = 12;
    const int matrixdim2 = 24;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 3; ++k) {
            A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 6; ++j) {
            for(int k = 0; k < 9; ++k) {
                IkReal a = matcoeffs[coeffindex+108], b = matcoeffs[coeffindex+54], c = matcoeffs[coeffindex];
                A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 3; ++k) {
                A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[24]);
    IkReal IKFAST_ALIGNED16(wi[24]);
    IkReal IKFAST_ALIGNED16(vr[24*24]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency12(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[3]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[5]/ev[2];
                    rawroots[numroots++] = ev[2]/ev[1];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[9]/ev[6];
                    rawroots[numroots++] = ev[10]/ev[9];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[11]/ev[8];
                    rawroots[numroots++] = ev[11]/ev[10];
                }
            }
        }
    }
}
static inline bool checkconsistency12(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 11; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-6*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[0]-Breal[1]) < tol && IKabs(Breal[0]*Breal[2]-Breal[3]) < tol && IKabs(Breal[1]*Breal[2]-Breal[4]) < tol && IKabs(Breal[2]*Breal[2]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol && IKabs(Breal[1]*Breal[5]-Breal[7]) < tol && IKabs(Breal[2]*Breal[5]-Breal[8]) < tol && IKabs(Breal[0]*Breal[8]-Breal[9]) < tol && IKabs(Breal[1]*Breal[8]-Breal[10]) < tol;
}
};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:GenericRobot - robai (75ad083aca68baba5ae42f6b3337da20)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
